(undo-tree-save-format-version . 1)
"a14a78e69b161da801c75a4c0757a1f6da8d6661"
[nil nil nil nil (26124 33695 52602 894000) 0 nil]
([nil nil ((#(" " 0 1 (fontified t face (bold underline))) . -1167) (undo-tree-id92 . -1) (#("A" 0 1 (fontified t face (bold underline))) . -1168) (undo-tree-id93 . -1) (#("p" 0 1 (fontified t face (bold underline))) . -1169) (undo-tree-id94 . -1) (#("p" 0 1 (fontified t face (bold underline))) . -1170) (undo-tree-id95 . -1) 1171 (t 26119 14082 744136 407000)) nil (26124 33737 249727 487000) 0 nil] [nil nil ((#("e" 0 1 (fontified t face font-lock-function-name-face)) . -1160) (undo-tree-id0 . -1) (#(">" 0 1 (fontified t)) . -1161) (undo-tree-id1 . -1) (#("R" 0 1 (fontified t face (bold underline))) . -1162) (undo-tree-id2 . -1) (#("e" 0 1 (fontified t face (bold underline))) . -1163) (undo-tree-id3 . -1) (#("a" 0 1 (fontified t face (bold underline))) . -1164) (undo-tree-id4 . -1) (#("c" 0 1 (fontified t face (bold underline))) . -1165) (undo-tree-id5 . -1) (#("t" 0 1 (fontified t face (bold underline))) . -1166) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t face (bold underline))) . -1167) (undo-tree-id7 . -1) (#("A" 0 1 (fontified t face (bold underline))) . -1168) (undo-tree-id8 . -1) (#("p" 0 1 (fontified t face (bold underline))) . -1169) (undo-tree-id9 . -1) (#("p" 0 1 (fontified t face (bold underline))) . -1170) (undo-tree-id10 . -1) 1171 (t 26119 14082 744136 407000)) ((1161 . 1171) (nil ws-butler-chg delete 1161 . 1162) (1160 . 1161)) (26124 33694 909241 659000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face (bold underline))) . -1165) (undo-tree-id90 . -1) (#("t" 0 1 (fontified t face (bold underline))) . -1166) (undo-tree-id91 . -1) 1167) nil (26124 33737 249699 209000) 0 nil])
([nil nil ((1160 . 1161)) ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-function-name-face)) . 1160) (undo-tree-id11 . -1)) (26124 33694 908868 346000) 0 nil])
([nil nil ((#("R" 0 1 (fontified t face (bold underline))) . -1162) (undo-tree-id87 . -1) (#("e" 0 1 (fontified t face (bold underline))) . -1163) (undo-tree-id88 . -1) (#("a" 0 1 (fontified t face (bold underline))) . -1164) (undo-tree-id89 . -1) 1165) nil (26124 33737 249597 709000) 0 nil])
nil
([nil nil ((1162 . 1163)) nil (26124 33737 249577 635000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face (bold underline))) . -1162) (undo-tree-id86 . -1) 1163) nil (26124 33737 249569 561000) 0 nil])
([nil nil ((1162 . 1175)) nil (26124 33737 249557 561000) 0 nil])
([nil nil ((#("<noscript>You need to enable JavaScript to run this app.</noscript>" 0 1 (fontified t) 1 9 (fontified t face font-lock-function-name-face) 9 58 (fontified t) 58 66 (fontified t face font-lock-function-name-face) 66 67 (fontified t)) . -1207) (undo-tree-id84 . -67) (undo-tree-id85 . -67) 1274) nil (26124 33737 249549 635000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1202) (undo-tree-id83 . -1) 1203) nil (26124 33737 249533 98000) 0 nil])
([nil nil ((#("<!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->" 0 1 (syntax-table (2097163) fontified t face font-lock-comment-delimiter-face) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 263 (fontified t face font-lock-comment-face) 263 321 (fontified t face font-lock-comment-face) 321 379 (fontified t face font-lock-comment-face) 379 395 (fontified t face font-lock-comment-face) 395 399 (fontified t face font-lock-comment-face) 399 401 (fontified t face font-lock-comment-delimiter-face) 401 402 (syntax-table (2097164) fontified t face font-lock-comment-delimiter-face)) . -1237) (undo-tree-id79 . -402) (undo-tree-id80 . -243) (undo-tree-id81 . -243) (undo-tree-id82 . -402) 1639) nil (26124 33737 249518 950000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1232) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#(" " 0 1 (fontified t)) . -1233) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#(" " 0 1 (fontified t)) . -1234) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#(" " 0 1 (fontified t)) . -1235) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#(" " 0 1 (fontified t)) . -1236) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) 1237) nil (26124 33737 249487 543000) 0 nil])
([nil nil ((#("<!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->" 0 1 (fontified t syntax-table (2097163) face font-lock-comment-delimiter-face) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 318 (fontified t face font-lock-comment-face) 318 375 (fontified t face font-lock-comment-face) 375 458 (fontified t face font-lock-comment-face) 458 460 (fontified t face font-lock-comment-delimiter-face) 460 461 (fontified t syntax-table (2097164) face font-lock-comment-delimiter-face)) . -689) (undo-tree-id47 . -461) (undo-tree-id48 . -461) 1150) nil (26124 33737 249371 25000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -684) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t)) . -685) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t)) . -686) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t)) . -687) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#(" " 0 1 (fontified t)) . -688) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 689) nil (26124 33737 249347 395000) 0 nil])
([nil nil ((#("<!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->" 0 1 (fontified t syntax-table (2097163) face font-lock-comment-delimiter-face) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 78 (fontified t face font-lock-comment-face) 78 84 (fontified t face font-lock-comment-face) 84 94 (fontified t face font-lock-comment-face) 94 95 (fontified t syntax-table (1) face font-lock-comment-face) 95 196 (fontified t face font-lock-comment-face) 196 198 (fontified t face font-lock-comment-delimiter-face) 198 199 (fontified t syntax-table (2097164) face font-lock-comment-delimiter-face)) . -423) (undo-tree-id19 . -199) (undo-tree-id20 . -199) (undo-tree-id21 . -192) 622) nil (26124 33737 249254 674000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -418) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 419) nil (26124 33737 249233 322000) 0 nil])
([nil nil ((#("    " 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t)) . 532) (undo-tree-id12 . -4) (#("    " 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t)) . 418) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4)) nil (26124 33737 249206 303000) 0 nil])
([nil nil ((#("<meta
      name=\"description\"
      content=\"Web site created using create-react-app\"
    />" 0 1 (fontified t) 1 5 (fontified t face font-lock-function-name-face) 5 12 (fontified t) 12 16 (fontified t face font-lock-variable-name-face) 16 17 (fontified t) 17 30 (fontified t face font-lock-string-face) 30 37 (fontified t) 37 44 (fontified t face font-lock-variable-name-face) 44 45 (fontified t) 45 86 (fontified t face font-lock-string-face) 86 93 (fontified t)) . -257) (undo-tree-id103 . -93) (undo-tree-id104 . -86) (undo-tree-id105 . -93) (undo-tree-id106 . -87) 350 (t 26124 33737 258904 118000)) nil (26124 33747 564558 862000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -252) (undo-tree-id101 . -1) (undo-tree-id102 . -1) 253) nil (26124 33747 564533 881000) 0 nil])
([nil current ((#("    " 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t)) . 252) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4)) nil (26124 33747 564507 363000) 0 nil])
nil
