(undo-tree-save-format-version . 1)
"259c8193a7f37bf5635214e418a6b5daef51c12a"
[nil nil nil nil (26130 49353 959914 712000) 0 nil]
([nil nil ((1 . 10780) (#("import './App.css';
import { atom, useAtom } from 'jotai';

import DuelVideo from './video/duel.mp4';
import DinnerVideo from './video/dinner.mp4';
import DisasterVideo from './video/disaster.mp4';

import DuelImage from './images/DUEL.png';
import SpDuelImage from './images/DuelSp.png';
import DinnerImage from './images/DINNER.png';
import SpDinnerImage from './images/DinnerSp.png';
import DisasterImage from './images/DISASTER.png';
import SpDisasterImage from './images/DisasterSp.png';
import BackImage from './images/BACK.png';
import SpBackImage from './images/BackSp.png';
import VoteImage from './images/VOTE.png';
import SpVoteImage from './images/VoteSp.png';
import StartOverImage from './images/START_OVER.png';
import SpStartOverImage from './images/StartOverSp.png';
import HomeImage from './images/HOME.png';
import EnglishImage from './images/ENGLISH.png';
import EspanolImage from './images/ESPANOL.png';

const req_url =  process.env.REACT_APP_SERVER_URL + \":\" + process.env.REACT_APP_SERVER_PORT;

const defaultState = atom(
    {\"page\": \"home\",
     \"locale\": \"en\",
     \"vote\": null,}
)

const locales = {
    \"backImage\":{\"en\": BackImage,
                 \"es\" : SpBackImage},
    \"voteImage\":{\"en\": VoteImage,
                 \"es\": SpVoteImage},
    \"localeImage\":{\"en\": EspanolImage,
                   \"es\": EnglishImage},
    \"duelImage\":{\"en\": DuelImage,
                 \"es\": SpDuelImage},
    \"dinnerImage\":{\"en\": DinnerImage,
                   \"es\": SpDinnerImage},
    \"disasterImage\":{\"en\": DisasterImage,
                     \"es\": SpDisasterImage},
    \"startOverImage\":{\"en\": StartOverImage,
                      \"es\": SpStartOverImage},
    \"locale\": {\"en\": \"EspanolImage\",
               \"es\": \"EnglishImage\"},
    \"heroText\": {\"en\": \"HOW DID THEY DIE?\",
                 \"es\": \"¿HOW DID THEY DIE BUT IN SPANISH?\"},
    \"homePrompt0\": {\"en\": \"You've seen some evidence.\",
                    \"es\": \"You've seen some evidence, but in Spanish.\"},
    \"homePrompt1\": {\"en\": \"How do you interpret it?\",
                    \"es\": \"¿How do you interpret it, but in Spanish?\"},
    \"duel\": {\"en\": \"Duel\",
             \"es\": \"Duel, but in Spanish\"},
    \"dinner\": {\"en\": \"Dinner\",
               \"es\": \"Dinner, but in Spanish\"},
    \"disaster\": {\"en\": \"Disaster\",
                 \"es\": \"Disaster, but in Spanish\"},
    \"back\": {\"en\": \"Back\",
             \"es\":\"Atrás\"},
    \"vote\":{\"en\":\"Vote\",
            \"es\": \"Votar\"},
    \"video\": {\"en\": \"Video\",
              \"es\": \"Video, but in Spanish\"},
    \"duelText\":{\"en\": \"The injuries to both dinosaurs may be evidence that they died in battle. But we need to establish exactly when and how the injuries occurred to be sure.\",
                \"es\": \"ESP<The injuries to both dinosaurs may be evidence that they died in battle. But we need to establish exactly when and how the injuries occurred to be sure.>\"},
    \"dinnerText\":{\"en\": \"This is placeholder Dinner Text.\",
                  \"es\": \"ESP<This is placeholder Dinner Text.>\"},
    \"disasterText\":{\"en\": \"This is placeholder Disaster Text.\",
                    \"es\": \"ESP<This is placeholder Disaster Text.>\"},
    \"voteConfirm\":{\"en\": \"If this is how you interpret the evidence, click VOTE below.\",
                   \"es\": \"ESP<If this is how you interpret the evidence, click VOTE below.>\"},
    \"duelSubText\":{\"en\": \"This is duel subtext\",
                   \"es\": \"This is duel subtext, but in spanish.\"},
    \"dinnerSubText\":{\"en\": \"this is dinner subtext\",
                     \"es\": \"this is dinner subtext but in spanish\"},
    \"disasterSubText\":{\"en\": \"this is disaster subtext\",
                       \"es\": \"this is disaster subtext but in spanish\"},
}

function styler (icon) {
    return ({backgroundImage: `url(${icon})`,
             backgroundSize: 'contain',
             backgroundPosition: 'center',
             width: '20%',
             height: '10rem',
             backgroundRepeat: 'no-repeat',
            })
}

function VideoPage({state, setState}){

    return (<>
                <video>

                </video>
                {/*                <div className='HomePage-Buttons flex-container row' style={{'display':'flex'}}>
                    <div className='Prompt-Button'
                         onClick={(event)=>setState({...state, 'page': 'home'})}
                         style={styler(locales.startOverImage[state.locale])}
                    ></div>
                </div>
                <div className=\"VotePage-Button\"
                     onClick={(event)=>setState({...state, 'page': 'home', 'vote':null})}>
                    {locales.back[state.locale]}
                </div>
                 */}            </>);
}

function ContentPage({state, setState}){
    async function logVote(vote){
        const request  = await fetch(req_url + \"/vote\",
                                     {method: \"POST\",
                                      mode: \"cors\",
                                      headers: {'Content-Type': 'application/json'},
                                      body: JSON.stringify({\"vote\": vote})});

    }
    const content = () => {
        switch (state.vote){
        case \"duel\":  return ({...styler(locales.duelImage[state.locale]), margin: '1rem', width: '30%'});
        case \"dinner\": return ({...styler(locales.dinnerImage[state.locale]), margin: '1rem', width: '30%'});
        case \"disaster\": return({...styler(locales.disasterImage[state.locale]), margin: '1rem', width: '30%'})
        }
    }
    const subtext = () => {
        switch (state.vote){
        case \"duel\":  return (locales.duelSubText);
        case \"dinner\": return (locales.dinnerSubText);
        case \"disaster\": return(locales.disasterSubText);
        }
    }
    return (<>
                <div className=\"Content-SubHead\" style={{'display': 'flex'}}>
                    <p>{subtext()[state.locale]}</p>
                </div>
                <div className=\"Content flex-container\" style={{'display':'flex'}}>
                    <div className='Prompt-Button'
                         style={content()}
                    ></div>
                    <div className=\"Content-text\">
                        <p>{locales[state.vote + \"Text\"][state.locale]}</p>
                        <br/>
                        <p>{locales.voteConfirm[state.locale]}</p>
                    </div>
                </div>
                <div className=\"VotePage-Buttons flex-container\" style={{'display':'flex'}}>
                    <div className=\"VotePage-Button\"
                         style={styler(locales.backImage[state.locale])}
                         onClick={(event)=>setState({...state, 'page': 'home', 'vote':null})}
                    ></div>
                    <div className=\"VotePage-Button\"
                         onClick={()=> {logVote(state.vote);
                                        setState({...state, 'page':'video'});
                                       }
                                 }
                         style={styler(locales.voteImage[state.locale])}
                    >
                    </div>
                </div>
            </>);
}

function HomePage({state, setState}){
    return (<>
                <div className='HomePage-Prompt flex-container' style={{'display':'flex'}}>
                    <p>{locales.homePrompt0[state.locale]}</p>
                    <br/>
                    <p>{locales.homePrompt1[state.locale]}</p>
                </div>
                <div className='HomePage-Buttons flex-container row' style={{'display':'flex'}}>
                    <div className='Prompt-Button'
                         style={styler(locales.duelImage[state.locale])}
                         onClick={(event)=>setState({...state, 'page': 'content', 'vote':'duel'})}
                    ></div>
                    <div className='Prompt-Button'
                         style={styler(locales.dinnerImage[state.locale])}
                         onClick={(event)=>setState({...state, 'page': 'content', 'vote':'dinner'})}
                    ></div>
                    <div className='Prompt-Button'
                         style={styler(locales.disasterImage[state.locale])}
                         onClick={(event)=>setState({...state, 'page':'content','vote': 'disaster'})}
                    ></div>
                </div>

            </>);
}

function Main ({state, setState}){
    switch (state.page) {
    case \"home\":
        return (<HomePage state={state} setState={setState}/>);
    case \"video\":
        return (<VideoPage state={state} setState={setState}/>);
    case \"content\":
        return (<ContentPage state={state} setState={setState}/>);
    };
}

function Header({state, setState}){
    const headerText = () => {
        switch(state.page){
        case 'home': return (locales.heroText[state.locale]);
        case 'content': return(locales[state.vote][state.locale]);
        case 'video': return(\"vote logged!\")
        default: return(\"video text\");
        }
    }
    return (<>
                <header>
                    <div
                        onClick={(event)=>setState({...state, 'page': 'home', 'vote': null})}
                        style={{backgroundImage: `url(${HomeImage})`,
                                backgroundSize: 'contain',
                                backgroundPosition: 'center',
                                width: '2rem',
                                height: '2rem',
                                backgroundRepeat: 'no-repeat',
                               }}
                    ></div>
                    <div>
                        {headerText(state.page)}
                    </div>
                    <div
                        style={{...styler(locales.localeImage[state.locale]),
                                width: '4rem',
                                height: '2rem'}}
                        onClick={() => {
                            switch(state.locale){
                            case \"en\": return(
                                setState({...state, 'locale': 'es'})
                            );
                            case \"es\": return(
                                setState({...state, 'locale': 'en'})
                            );
                            }
                        }}
                    ></div>
                </header>
            </>
           )
}

function App() {
    const [state, setState] = useAtom(defaultState);
    return (
        <>
            <Header state={state} setState={setState}/>
            <Main state={state} setState={setState}/>
        </>
    );
}

export default App;
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 18 (fontified t face font-lock-string-face) 18 20 (fontified t) 20 26 (fontified t face font-lock-keyword-face) 26 50 (fontified t) 50 57 (fontified t face font-lock-string-face) 57 60 (fontified t) 60 66 (fontified t face font-lock-keyword-face) 66 82 (fontified t) 82 100 (fontified t face font-lock-string-face) 100 102 (fontified t) 102 108 (fontified t face font-lock-keyword-face) 108 126 (fontified t) 126 146 (fontified t face font-lock-string-face) 146 148 (fontified t) 148 154 (fontified t face font-lock-keyword-face) 154 174 (fontified t) 174 196 (fontified t face font-lock-string-face) 196 199 (fontified t) 199 205 (fontified t face font-lock-keyword-face) 205 221 (fontified t) 221 240 (fontified t face font-lock-string-face) 240 242 (fontified t) 242 248 (fontified t face font-lock-keyword-face) 248 266 (fontified t) 266 287 (fontified t face font-lock-string-face) 287 289 (fontified t) 289 295 (fontified t face font-lock-keyword-face) 295 313 (fontified t) 313 334 (fontified t face font-lock-string-face) 334 336 (fontified t) 336 342 (fontified t face font-lock-keyword-face) 342 362 (fontified t) 362 385 (fontified t face font-lock-string-face) 385 387 (fontified t) 387 393 (fontified t face font-lock-keyword-face) 393 413 (fontified t) 413 436 (fontified t face font-lock-string-face) 436 438 (fontified t) 438 444 (fontified t face font-lock-keyword-face) 444 466 (fontified t) 466 491 (fontified t face font-lock-string-face) 491 493 (fontified t) 493 499 (fontified t face font-lock-keyword-face) 499 500 (fontified t) 500 515 (fontified t) 515 534 (fontified t face font-lock-string-face) 534 536 (fontified t) 536 542 (fontified t face font-lock-keyword-face) 542 560 (fontified t) 560 581 (fontified t face font-lock-string-face) 581 583 (fontified t) 583 589 (fontified t face font-lock-keyword-face) 589 605 (fontified t) 605 624 (fontified t face font-lock-string-face) 624 626 (fontified t) 626 632 (fontified t face font-lock-keyword-face) 632 650 (fontified t) 650 671 (fontified t face font-lock-string-face) 671 673 (fontified t) 673 679 (fontified t face font-lock-keyword-face) 679 700 (fontified t) 700 725 (fontified t face font-lock-string-face) 725 727 (fontified t) 727 733 (fontified t face font-lock-keyword-face) 733 756 (fontified t) 756 782 (fontified t face font-lock-string-face) 782 784 (fontified t) 784 790 (fontified t face font-lock-keyword-face) 790 806 (fontified t) 806 825 (fontified t face font-lock-string-face) 825 827 (fontified t) 827 833 (fontified t face font-lock-keyword-face) 833 852 (fontified t) 852 874 (fontified t face font-lock-string-face) 874 876 (fontified t) 876 882 (fontified t face font-lock-keyword-face) 882 901 (fontified t) 901 923 (fontified t face font-lock-string-face) 923 926 (fontified t) 926 931 (fontified t face font-lock-keyword-face) 931 932 (fontified t) 932 939 (fontified t face font-lock-variable-name-face) 939 978 (fontified t) 978 981 (fontified t face font-lock-string-face) 981 1020 (fontified t) 1020 1025 (fontified t face font-lock-keyword-face) 1025 1026 (fontified t) 1026 1036 (fontified t face font-lock-variable-name-face) 1036 1038 (fontified t face font-lock-variable-name-face) 1038 1047 (fontified t) 1047 1052 (fontified t) 1052 1058 (fontified t face font-lock-string-face) 1058 1060 (fontified t) 1060 1066 (fontified t face font-lock-string-face) 1066 1073 (fontified t) 1073 1081 (fontified t face font-lock-string-face) 1081 1083 (fontified t) 1083 1087 (fontified t face font-lock-string-face) 1087 1094 (fontified t) 1094 1100 (fontified t face font-lock-string-face) 1100 1102 (fontified t) 1102 1106 (fontified t face font-lock-constant-face) 1106 1112 (fontified t) 1112 1117 (fontified t face font-lock-keyword-face) 1117 1118 (fontified t) 1118 1125 (fontified t face font-lock-variable-name-face) 1125 1134 (fontified t) 1134 1145 (fontified t face font-lock-string-face) 1145 1147 (fontified t) 1147 1151 (fontified t face font-lock-string-face) 1151 1181 (fontified t) 1181 1185 (fontified t face font-lock-string-face) 1185 1206 (fontified t) 1206 1217 (fontified t face font-lock-string-face) 1217 1219 (fontified t) 1219 1223 (fontified t face font-lock-string-face) 1223 1253 (fontified t) 1253 1257 (fontified t face font-lock-string-face) 1257 1277 (fontified t) 1277 1290 (fontified t face font-lock-string-face) 1290 1292 (fontified t) 1292 1296 (fontified t face font-lock-string-face) 1296 1331 (fontified t) 1331 1335 (fontified t face font-lock-string-face) 1335 1356 (fontified t) 1356 1367 (fontified t face font-lock-string-face) 1367 1369 (fontified t) 1369 1373 (fontified t face font-lock-string-face) 1373 1403 (fontified t) 1403 1407 (fontified t face font-lock-string-face) 1407 1427 (fontified t) 1427 1440 (fontified t face font-lock-string-face) 1440 1442 (fontified t) 1442 1446 (fontified t face font-lock-string-face) 1446 1480 (fontified t) 1480 1484 (fontified t face font-lock-string-face) 1484 1506 (fontified t) 1506 1521 (fontified t face font-lock-string-face) 1521 1523 (fontified t) 1523 1527 (fontified t face font-lock-string-face) 1527 1547 (fontified t) 1547 1565 (fontified t) 1565 1569 (fontified t face font-lock-string-face) 1569 1589 (fontified t) 1589 1593 (fontified t) 1593 1609 (fontified t face font-lock-string-face) 1609 1611 (fontified t) 1611 1615 (fontified t face font-lock-string-face) 1615 1655 (fontified t) 1655 1659 (fontified t face font-lock-string-face) 1659 1684 (fontified t) 1684 1692 (fontified t face font-lock-string-face) 1692 1695 (fontified t) 1695 1699 (fontified t face font-lock-string-face) 1699 1701 (fontified t) 1701 1715 (fontified t face font-lock-string-face) 1715 1732 (fontified t) 1732 1736 (fontified t face font-lock-string-face) 1736 1738 (fontified t) 1738 1752 (fontified t face font-lock-string-face) 1752 1759 (fontified t) 1759 1769 (fontified t face font-lock-string-face) 1769 1772 (fontified t) 1772 1776 (fontified t face font-lock-string-face) 1776 1778 (fontified t) 1778 1797 (fontified t face font-lock-string-face) 1797 1816 (fontified t) 1816 1820 (fontified t face font-lock-string-face) 1820 1822 (fontified t) 1822 1857 (fontified t face font-lock-string-face) 1857 1864 (fontified t) 1864 1877 (fontified t face font-lock-string-face) 1877 1880 (fontified t) 1880 1884 (fontified t face font-lock-string-face) 1884 1886 (fontified t) 1886 1914 (fontified t face font-lock-string-face) 1914 1936 (fontified t) 1936 1940 (fontified t face font-lock-string-face) 1940 1942 (fontified t) 1942 1986 (fontified t face font-lock-string-face) 1986 1993 (fontified t) 1993 2006 (fontified t face font-lock-string-face) 2006 2009 (fontified t) 2009 2013 (fontified t face font-lock-string-face) 2013 2015 (fontified t) 2015 2041 (fontified t face font-lock-string-face) 2041 2063 (fontified t) 2063 2067 (fontified t face font-lock-string-face) 2067 2069 (fontified t) 2069 2089 (fontified t face font-lock-string-face) 2089 2112 (fontified t face font-lock-string-face) 2112 2115 (fontified t) 2115 10708 (fontified nil)) . 1) (t 26130 49206 229680 892000)) nil (26130 49353 959894 453000) 0 nil])
([nil nil ((3985 . 3987) (t 26130 49353 981028 322000)) nil (26130 49504 293393 746000) 0 nil])
([nil nil ((3986 . 4007)) nil (26130 49504 293386 654000) 0 nil])
([nil nil ((4007 . 4012)) nil (26130 49504 293380 154000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t ws-butler-chg chg)) . -4010) (undo-tree-id16 . -1) (#("}" 0 1 (fontified t ws-butler-chg chg)) . -4011) (undo-tree-id17 . -1) 4012) nil (26130 49504 293371 783000) 0 nil])
([nil nil ((4010 . 4011)) nil (26130 49504 293355 580000) 0 nil])
([nil nil ((4011 . 4014)) nil (26130 49504 293349 358000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil ws-butler-chg chg)) . 4014) (4014 . 4018) (4013 . 4015)) nil (26130 49504 293342 43000) 0 nil])
([nil nil ((4014 . 4018)) nil (26130 49504 293334 24000) 0 nil])
([nil nil ((4018 . 4024)) nil (26130 49504 293327 635000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg)) . -4023) (undo-tree-id15 . -1) 4024) nil (26130 49504 293319 617000) 0 nil])
([nil nil ((4023 . 4026)) nil (26130 49504 293308 61000) 0 nil])
([nil nil ((4025 . 4030)) nil (26130 49504 293301 395000) 0 nil])
([nil nil ((4027 . 4031) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 4026) (4026 . 4034) (4026 . 4027) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 4026) (undo-tree-id14 . -4) 4030) nil (26130 49504 293293 395000) 0 nil])
([nil nil ((4026 . 4034)) nil (26130 49504 293279 302000) 0 nil])
([nil nil ((4034 . 4037)) nil (26130 49504 293273 302000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t ws-butler-chg chg)) . -4034) (undo-tree-id11 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -4035) (undo-tree-id12 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -4036) (undo-tree-id13 . -1) 4037) nil (26130 49504 293264 895000) 0 nil])
([nil nil ((4034 . 4045)) nil (26130 49504 293245 395000) 0 nil])
([nil nil ((4044 . 4056) (4026 . 4038) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 4026) (4039 . 4040)) nil (26130 49504 293237 895000) 0 nil])
([nil nil ((4045 . 4053) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 4044) (4044 . 4056) (4044 . 4045) (#("            " 0 12 (fontified t ws-butler-chg chg)) . 4044) (undo-tree-id10 . -12) 4056) nil (26130 49504 293226 784000) 0 nil])
([nil nil ((4044 . 4056)) nil (26130 49504 293211 877000) 0 nil])
([nil nil ((4056 . 4057)) nil (26130 49504 293205 173000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t ws-butler-chg chg)) . -4056) (undo-tree-id9 . -1) 4057) nil (26130 49504 293197 636000) 0 nil])
([nil nil ((#("<video>
                    <source src={req_url + \"/duel\"} type=\"video/mp4\" />
                </video>" 0 51 (fontified t) 51 58 (fontified t face font-lock-string-face) 58 65 (fontified t) 65 76 (fontified t face font-lock-string-face) 76 104 (fontified t)) . 4152) (undo-tree-id7 . -104) (undo-tree-id8 . -104) 4256) nil (26130 49504 293184 747000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified nil)) . -4140) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . -4076) (nil rear-nonsticky nil 4159 . 4160) (nil fontified nil 4132 . 4160) (nil fontified nil 4121 . 4132) (nil fontified nil 4114 . 4121) (nil fontified nil 4107 . 4114) (nil fontified nil 4056 . 4107) (4056 . 4160)) nil (26130 49504 293124 99000) 0 nil])
([nil nil ((4062 . 4074)) nil (26130 49504 293110 544000) 0 nil])
([nil nil ((#("&" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4073) (undo-tree-id6 . -1) 4074) nil (26130 49504 293103 174000) 0 nil])
([nil nil ((4073 . 4081)) nil (26130 49504 293091 692000) 0 nil])
([nil nil ((#("v" 0 1 (ws-butler-chg chg fontified t)) . -4079) (undo-tree-id4 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t)) . -4080) (undo-tree-id5 . -1) 4081) nil (26130 49504 293083 507000) 0 nil])
([nil nil ((4079 . 4082)) nil (26130 49504 293067 729000) 0 nil])
([nil nil ((4082 . 4085)) nil (26130 49504 293061 563000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -4083) (undo-tree-id2 . -1) (#("'" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4084) (undo-tree-id3 . -1) 4085) nil (26130 49504 293052 581000) 0 nil])
([nil nil ((4083 . 4084)) nil (26130 49504 293035 915000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t)) . -4083) (undo-tree-id1 . -1) 4084) nil (26130 49504 293028 285000) 0 nil])
([nil nil ((4083 . 4088)) nil (26130 49504 293014 989000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . 4254) (undo-tree-id0 . -16) 4088) nil (26130 49504 293000 267000) 0 nil])
([nil nil ((4254 . 4266) (t 26130 49504 316363 33000)) nil (26130 49524 242044 34000) 0 nil])
([nil nil ((4195 . 4196)) nil (26130 49524 242036 905000) 0 nil])
([nil nil ((4198 . 4199)) nil (26130 49524 242029 942000) 0 nil])
([nil nil ((4268 . 4283)) nil (26130 49524 242012 682000) 0 nil])
([nil nil ((60 . 61) (t 26130 49524 264274 676000)) nil (26130 51062 732315 312000) 0 nil])
([nil nil ((60 . 81)) nil (26130 51062 732308 90000) 0 nil])
([nil nil ((81 . 91)) nil (26130 51062 732301 405000) 0 nil])
([nil nil ((92 . 93)) nil (26130 51062 732294 720000) 0 nil])
([nil nil ((92 . 100)) nil (26130 51062 732288 405000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg)) . -99) (undo-tree-id44 . -1) 100) nil (26130 51062 732280 627000) 0 nil])
([nil nil ((99 . 110)) nil (26130 51062 732269 368000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -109) (undo-tree-id43 . -1) 110) nil (26130 51062 732261 127000) 0 nil])
([nil nil ((109 . 117)) nil (26130 51062 732249 516000) 0 nil])
([nil nil ((117 . 128)) nil (26130 51062 732242 590000) 0 nil])
([nil nil ((#("    return(
            <div>
            <video width='100%' height='80%'>
            <source src={req_url + \"/duel\"} type=\"video/mp4\" />
            </video>
        </div>
    );" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 12 (fontified t) 12 24 (fontified t) 24 25 (fontified t) 25 30 (fontified t) 30 42 (fontified t) 42 55 (fontified t) 55 61 (fontified t face font-lock-string-face) 61 69 (fontified t) 69 74 (fontified t face font-lock-string-face) 74 75 (fontified t) 75 76 (fontified t) 76 88 (fontified t) 88 89 (fontified t) 89 111 (fontified t) 111 118 (fontified t face font-lock-string-face) 118 125 (fontified t) 125 136 (fontified t face font-lock-string-face) 136 152 (fontified t) 152 153 (fontified t) 153 159 (fontified t) 159 160 (rear-nonsticky t fontified t) 160 161 (fontified t) 161 169 (fontified t) 169 170 (fontified t) 170 175 (fontified t) 175 176 (fontified t) 176 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t)) . -4083) (undo-tree-id38 . -103) (undo-tree-id39 . -103) (undo-tree-id40 . -182) (undo-tree-id41 . -42) (undo-tree-id42 . -182) 4265) nil (26130 51062 732234 368000) 0 nil])
([nil nil ((4054 . 4057)) nil (26130 51062 732208 831000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -4054) (undo-tree-id35 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -4055) (undo-tree-id36 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -4056) (undo-tree-id37 . -1) 4057) nil (26130 51062 732199 553000) 0 nil])
([nil nil ((4076 . 4081)) nil (26130 51062 732178 442000) 0 nil])
([nil nil ((4087 . 4092)) nil (26130 51062 732171 683000) 0 nil])
([nil nil ((4092 . 4096)) nil (26130 51062 732165 480000) 0 nil])
([nil nil ((4096 . 4098)) nil (26130 51062 732158 868000) 0 nil])
([nil nil ((4098 . 4103)) nil (26130 51062 732152 257000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4098) (undo-tree-id30 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4099) (undo-tree-id31 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4100) (undo-tree-id32 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4101) (undo-tree-id33 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4102) (undo-tree-id34 . -1) 4103) nil (26130 51062 732141 943000) 0 nil])
([nil nil ((4098 . 4103)) nil (26130 51062 732112 517000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 4103) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1)) nil (26130 51062 732104 91000) 0 nil])
([nil nil ((4098 . 4105) (#("video" 0 5 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4098) (undo-tree-id19 . -5) (undo-tree-id20 . -5) (undo-tree-id21 . -5) (undo-tree-id22 . -5) (undo-tree-id23 . -5) (undo-tree-id24 . -5) 4103) nil (26130 51062 732077 258000) 0 nil])
([nil nil ((59 . 60)) nil (26130 51062 732005 536000) 0 nil])
([nil nil ((60 . 69)) nil (26130 51062 731999 202000) 0 nil])
([nil nil ((68 . 71)) nil (26130 51062 731992 814000) 0 nil])
([nil nil ((71 . 80)) nil (26130 51062 731986 73000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -79) (undo-tree-id18 . -1) 80) nil (26130 51062 731977 17000) 0 nil])
([nil nil ((79 . 86)) nil (26130 51062 731941 369000) 0 nil])
([nil nil ((87 . 97)) nil (26130 51062 731934 277000) 0 nil])
([nil nil ((97 . 101)) nil (26130 51062 731926 406000) 0 nil])
([nil nil ((101 . 102)) nil (26130 51062 731909 388000) 0 nil])
([nil nil ((4148 . 4151) (t 26130 51062 757437 89000)) nil (26130 51421 433236 114000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-variable-name-face)) . -4141) (undo-tree-id100 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -4142) (undo-tree-id101 . -1) (#("d" 0 1 (fontified t face font-lock-variable-name-face)) . -4143) (undo-tree-id102 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -4144) (undo-tree-id103 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -4145) (undo-tree-id104 . -1) (#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -4146) (undo-tree-id105 . -1) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -4147) (undo-tree-id106 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4148) (undo-tree-id107 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -4149) (undo-tree-id108 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -4150) (undo-tree-id109 . -1) 4151) nil (26130 51421 433221 669000) 0 nil])
([nil nil ((4141 . 4162)) nil (26130 51421 433120 96000) 0 nil])
([nil nil ((4162 . 4164)) nil (26130 51421 433113 966000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -4163) (undo-tree-id99 . -1) 4164) nil (26130 51421 433106 837000) 0 nil])
([nil nil ((4163 . 4165)) nil (26130 51421 433095 448000) 0 nil])
([nil nil ((4165 . 4170)) nil (26130 51421 433089 596000) 0 nil])
([nil nil ((4170 . 4191)) nil (26130 51421 433083 152000) 0 nil])
([nil nil ((4191 . 4196)) nil (26130 51421 433077 263000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -4194) (undo-tree-id97 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -4195) (undo-tree-id98 . -1) 4196) nil (26130 51421 433069 170000) 0 nil])
([nil nil ((4194 . 4201)) nil (26130 51421 433044 652000) 0 nil])
([nil nil ((4201 . 4206)) nil (26130 51421 433038 559000) 0 nil])
([nil nil ((4206 . 4214)) nil (26130 51421 433032 763000) 0 nil])
([nil nil ((4213 . 4226)) nil (26130 51421 433026 633000) 0 nil])
([nil nil ((4227 . 4236)) nil (26130 51421 433020 244000) 0 nil])
([nil nil ((4236 . 4241)) nil (26130 51421 433014 356000) 0 nil])
([nil nil ((4241 . 4250)) nil (26130 51421 433008 559000) 0 nil])
([nil nil ((4250 . 4252)) nil (26130 51421 433002 448000) 0 nil])
([nil nil ((4251 . 4257)) nil (26130 51421 432996 652000) 0 nil])
([nil nil ((4257 . 4261)) nil (26130 51421 432990 708000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -4259) (undo-tree-id95 . -1) (#("[" 0 1 (fontified t ws-butler-chg chg)) . -4260) (undo-tree-id96 . -1) 4261) nil (26130 51421 432982 874000) 0 nil])
([nil nil ((4259 . 4270)) nil (26130 51421 432967 745000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t ws-butler-chg chg)) . -4269) (undo-tree-id94 . -1) 4270) nil (26130 51421 432960 560000) 0 nil])
([nil nil ((4269 . 4270)) nil (26130 51421 432949 615000) 0 nil])
([nil nil ((4256 . 4261)) nil (26130 51421 432943 726000) 0 nil])
([nil nil ((4258 . 4262) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 4257) (4257 . 4265) (4257 . 4258) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 4257) (undo-tree-id93 . -4) 4261) nil (26130 51421 432935 300000) 0 nil])
([nil nil ((4257 . 4265)) nil (26130 51421 432920 689000) 0 nil])
([nil nil ((#("[" 0 1 (ws-butler-chg chg fontified t)) . -4273) (undo-tree-id92 . -1) 4274) nil (26130 51421 432913 689000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg delete fontified t)) . 4273) (#("e" 0 1 (ws-butler-chg delete fontified t)) . 4273) (#("R" 0 1 (ws-butler-chg delete fontified t)) . 4273) (#("r" 0 1 (ws-butler-chg delete fontified t)) . 4273) (#("e" 0 1 (ws-butler-chg delete fontified t)) . 4273) (#("y" 0 1 (ws-butler-chg delete fontified t)) . 4273) (#("a" 0 1 (ws-butler-chg delete fontified t)) . 4273) (#("l" 0 1 (ws-butler-chg delete fontified t)) . 4273) (#("p" 0 1 (ws-butler-chg delete fontified t)) . 4273)) nil (26130 51421 432898 726000) 0 nil])
([nil nil ((4273 . 4287)) nil (26130 51421 432886 152000) 0 nil])
([nil nil ((#("u" 0 1 (ws-butler-chg chg fontified t)) . -4284) (undo-tree-id89 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -4285) (undo-tree-id90 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -4286) (undo-tree-id91 . -1) 4287) nil (26130 51421 432877 856000) 0 nil])
([nil nil ((4284 . 4291)) nil (26130 51421 432858 504000) 0 nil])
([nil nil ((4265 . 4283)) nil (26130 51421 432852 653000) 0 nil])
([nil nil ((4283 . 4292)) nil (26130 51421 432846 782000) 0 nil])
([nil nil ((4292 . 4293)) nil (26130 51421 432841 23000) 0 nil])
([nil nil ((4284 . 4296) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 4284) 4293) nil (26130 51421 432834 153000) 0 nil])
([nil nil ((4297 . 4298)) nil (26130 51421 432826 282000) 0 nil])
([nil nil ((4298 . 4309)) nil (26130 51421 432820 486000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4304) (undo-tree-id84 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4305) (undo-tree-id85 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4306) (undo-tree-id86 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4307) (undo-tree-id87 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -4308) (undo-tree-id88 . -1) 4309) nil (26130 51421 432810 394000) 0 nil])
([nil nil ((4304 . 4321)) nil (26130 51421 432782 5000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -4320) (undo-tree-id83 . -1) 4321) nil (26130 51421 432774 653000) 0 nil])
([nil nil ((4320 . 4327)) nil (26130 51421 432763 394000) 0 nil])
([nil nil ((#("!" 0 1 (fontified t ws-butler-chg chg)) . 4265)) nil (26130 51421 432756 986000) 0 nil])
([nil nil ((4265 . 4269)) nil (26130 51421 432751 116000) 0 nil])
([nil nil ((4286 . 4288)) nil (26130 51421 432744 375000) 0 nil])
([nil nil ((4341 . 4353) (4289 . 4309) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 4289) (4332 . 4333)) nil (26130 51421 432737 61000) 0 nil])
([nil nil ((4350 . 4356) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . -4349) (undo-tree-id82 . -4) (4353 . 4354)) nil (26130 51421 432726 912000) 0 nil])
([nil nil ((4289 . 4317) (#("                    " 0 20 (fontified t ws-butler-chg chg)) . 4289) (undo-tree-id81 . -15) 4304) nil (26130 51421 432713 709000) 0 nil])
([nil nil ((#("?" 0 1 (ws-butler-chg delete fontified t)) . 4317)) nil (26130 51421 432701 98000) 0 nil])
([nil nil ((#("                 " 0 16 (fontified t ws-butler-chg chg) 16 17 (ws-butler-chg delete fontified t)) . -4301) (undo-tree-id80 . -16) 4317) nil (26130 51421 432693 727000) 0 nil])
([nil nil ((4330 . 4349)) nil (26130 51421 432682 320000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4346) (undo-tree-id77 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4347) (undo-tree-id78 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4348) (undo-tree-id79 . -1) 4349) nil (26130 51421 432673 283000) 0 nil])
([nil nil ((4346 . 4356)) nil (26130 51421 432653 876000) 0 nil])
([nil nil ((4356 . 4369)) nil (26130 51421 432647 839000) 0 nil])
([nil nil ((4369 . 4390)) nil (26130 51421 432641 450000) 0 nil])
([nil nil ((4390 . 4395)) nil (26130 51421 432635 542000) 0 nil])
([nil nil ((4395 . 4416)) nil (26130 51421 432629 542000) 0 nil])
([nil nil ((4416 . 4420)) nil (26130 51421 432623 394000) 0 nil])
([nil nil ((4420 . 4421)) nil (26130 51421 432617 228000) 0 nil])
([nil nil ((4421 . 4434)) nil (26130 51421 432611 135000) 0 nil])
([nil nil ((4434 . 4446)) nil (26130 51421 432605 80000) 0 nil])
([nil nil ((#("r" 0 1 (ws-butler-chg chg fontified t)) . -4444) (undo-tree-id75 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -4445) (undo-tree-id76 . -1) 4446) nil (26130 51421 432597 246000) 0 nil])
([nil nil ((4444 . 4463)) nil (26130 51421 432581 746000) 0 nil])
([nil nil ((4463 . 4477)) nil (26130 51421 432575 895000) 0 nil])
([nil nil ((4477 . 4490)) nil (26130 51421 432570 24000) 0 nil])
([nil nil ((4490 . 4511)) nil (26130 51421 432563 672000) 0 nil])
([nil nil ((4511 . 4522)) nil (26130 51421 432557 932000) 0 nil])
([nil nil ((4522 . 4526)) nil (26130 51421 432551 765000) 0 nil])
([nil nil ((#("v" 0 1 (ws-butler-chg chg fontified t)) . -4525) (undo-tree-id74 . -1) 4526) nil (26130 51421 432544 487000) 0 nil])
([nil nil ((4525 . 4534)) nil (26130 51421 432533 265000) 0 nil])
([nil nil ((4533 . 4538)) nil (26130 51421 432526 932000) 0 nil])
([nil nil ((4538 . 4559)) nil (26130 51421 432521 228000) 0 nil])
([nil nil ((4559 . 4563)) nil (26130 51421 432514 839000) 0 nil])
([nil nil ((4563 . 4564)) nil (26130 51421 432508 117000) 0 nil])
([nil nil ((4564 . 4565)) nil (26130 51421 432501 913000) 0 nil])
([nil nil ((#("b" 0 1 (ws-butler-chg chg fontified t)) . -4564) (undo-tree-id73 . -1) 4565) nil (26130 51421 432494 228000) 0 nil])
([nil nil ((4565 . 4566)) nil (26130 51421 432482 228000) 0 nil])
([nil nil ((4563 . 4576)) nil (26130 51421 432475 858000) 0 nil])
([nil nil ((4565 . 4577) (#("                " 0 16 (ws-butler-chg chg fontified nil)) . 4564) (4564 . 4580) (4564 . 4565) (#("            " 0 12 (ws-butler-chg chg fontified t)) . 4564) (undo-tree-id72 . -12) 4576) nil (26130 51421 432467 25000) 0 nil])
([nil nil ((4564 . 4580)) nil (26130 51421 432451 969000) 0 nil])
([nil nil ((4580 . 4583)) nil (26130 51421 432445 988000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -4580) (undo-tree-id69 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -4581) (undo-tree-id70 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -4582) (undo-tree-id71 . -1) 4583) nil (26130 51421 432437 154000) 0 nil])
([nil nil ((4580 . 4592)) nil (26130 51421 432417 136000) 0 nil])
([nil nil ((4592 . 4600)) nil (26130 51421 432410 895000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4599) (undo-tree-id68 . -1) 4600) nil (26130 51421 432403 118000) 0 nil])
([nil nil ((4599 . 4609)) nil (26130 51421 432391 340000) 0 nil])
([nil nil ((#("'" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4607) (undo-tree-id66 . -1) (#(")" 0 1 (ws-butler-chg chg fontified t)) . -4608) (undo-tree-id67 . -1) 4609) nil (26130 51421 432382 340000) 0 nil])
([nil nil ((4607 . 4611)) nil (26130 51421 432327 859000) 0 nil])
([nil nil ((4611 . 4628)) nil (26130 51421 432322 155000) 0 nil])
([nil nil ((4628 . 4635)) nil (26130 51421 432316 340000) 0 nil])
([nil nil ((4635 . 4655)) nil (26130 51421 432310 488000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t)) . -4681) (undo-tree-id60 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -4682) (undo-tree-id61 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -4683) (undo-tree-id62 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-keyword-face)) . -4684) (undo-tree-id63 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -4685) (undo-tree-id64 . -1) (#("}" 0 1 (ws-butler-chg chg fontified t)) . -4686) (undo-tree-id65 . -1) 4687) nil (26130 51421 432299 266000) 0 nil])
([nil nil ((4681 . 4682)) nil (26130 51421 432261 526000) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg chg fontified t)) . -4681) (undo-tree-id59 . -1) 4682) nil (26130 51421 432254 248000) 0 nil])
([nil nil ((4709 . 4714)) nil (26130 51421 432243 81000) 0 nil])
([nil nil ((4714 . 4727)) nil (26130 51421 432237 285000) 0 nil])
([nil nil ((4726 . 4730)) nil (26130 51421 432231 396000) 0 nil])
([nil nil ((#("P" 0 1 (ws-butler-chg chg fontified t)) . -4728) (undo-tree-id57 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -4729) (undo-tree-id58 . -1) 4730) nil (26130 51421 432223 711000) 0 nil])
([nil nil ((4728 . 4730)) nil (26130 51421 432208 415000) 0 nil])
([nil nil ((4730 . 4743)) nil (26130 51421 432202 118000) 0 nil])
([nil nil ((#("[" 0 1 (ws-butler-chg chg fontified t)) . -4742) (undo-tree-id56 . -1) 4743) nil (26130 51421 432194 618000) 0 nil])
([nil nil ((4742 . 4743)) nil (26130 51421 432183 304000) 0 nil])
([nil nil ((4729 . 4734)) nil (26130 51421 432177 248000) 0 nil])
([nil nil ((4731 . 4735) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . 4730) (4730 . 4738) (4730 . 4731) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 4730) (undo-tree-id55 . -4) 4734) nil (26130 51421 432169 119000) 0 nil])
([nil nil ((4730 . 4738)) nil (26130 51421 432154 656000) 0 nil])
([nil nil ((4738 . 4743)) nil (26130 51421 432148 841000) 0 nil])
([nil nil ((4742 . 4763)) nil (26130 51421 432142 563000) 0 nil])
([nil nil ((4763 . 4772)) nil (26130 51421 432136 341000) 0 nil])
([nil nil ((4773 . 4775)) nil (26130 51421 432130 285000) 0 nil])
([nil nil ((4774 . 4783)) nil (26130 51421 432124 100000) 0 nil])
([nil nil ((4776 . 4784) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 4775) (4775 . 4787) (4775 . 4776) (#("        " 0 8 (ws-butler-chg chg fontified t)) . 4775) (undo-tree-id54 . -8) 4783) nil (26130 51421 432115 341000) 0 nil])
([nil nil ((4775 . 4787)) nil (26130 51421 432100 156000) 0 nil])
([nil nil ((4787 . 4804)) nil (26130 51421 432094 193000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t)) . -4803) (undo-tree-id53 . -1) 4804) nil (26130 51421 432086 860000) 0 nil])
([nil nil ((4803 . 4804)) nil (26130 51421 432075 323000) 0 nil])
([nil nil ((4804 . 4817)) nil (26130 51421 432068 971000) 0 nil])
([nil nil ((4817 . 4823)) nil (26130 51421 432063 45000) 0 nil])
([nil nil ((4823 . 4838)) nil (26130 51421 432056 656000) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg chg fontified t)) . -4836) (undo-tree-id51 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -4837) (undo-tree-id52 . -1) 4838) nil (26130 51421 432048 249000) 0 nil])
([nil nil ((4836 . 4842)) nil (26130 51421 432031 601000) 0 nil])
([nil nil ((4729 . 4738)) nil (26130 51421 432025 434000) 0 nil])
([nil nil ((4738 . 4759)) nil (26130 51421 432019 138000) 0 nil])
([nil nil ((4759 . 4771)) nil (26130 51421 432013 267000) 0 nil])
([nil nil ((4771 . 4780)) nil (26130 51421 432007 286000) 0 nil])
([nil nil ((4780 . 4782)) nil (26130 51421 432001 230000) 0 nil])
([nil nil ((4782 . 4794)) nil (26130 51421 431995 82000) 0 nil])
([nil nil ((#("?" 0 1 (ws-butler-chg chg fontified t)) . -4791) (undo-tree-id48 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4792) (undo-tree-id49 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -4793) (undo-tree-id50 . -1) 4794) nil (26130 51421 431986 434000) 0 nil])
([nil nil ((4791 . 4794)) nil (26130 51421 431965 805000) 0 nil])
([nil nil ((#("?" 0 1 (ws-butler-chg chg fontified t)) . -4791) (undo-tree-id45 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -4792) (undo-tree-id46 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -4793) (undo-tree-id47 . -1) 4794) nil (26130 51421 431955 694000) 0 nil])
([nil nil ((4791 . 4794)) nil (26130 51421 431909 620000) 0 nil])
([nil nil ((4917 . 4919)) nil (26130 51421 431892 638000) 0 nil])
([nil nil ((4939 . 4944) (t 26130 51421 495840 594000)) nil (26130 51476 342937 624000) 0 nil])
([nil nil ((4944 . 4953)) nil (26130 51476 342930 12000) 0 nil])
([nil nil ((4952 . 4957)) nil (26130 51476 342923 605000) 0 nil])
([nil nil ((4954 . 4958) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 4953) (4953 . 4961) (4953 . 4954) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 4953) (undo-tree-id121 . -4) 4957) nil (26130 51476 342914 716000) 0 nil])
([nil nil ((4953 . 4961)) nil (26130 51476 342899 457000) 0 nil])
([nil nil ((4961 . 4964)) nil (26130 51476 342893 494000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -4962) (undo-tree-id119 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -4963) (undo-tree-id120 . -1) 4964) nil (26130 51476 342885 87000) 0 nil])
([nil nil ((4962 . 4963)) nil (26130 51476 342869 161000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t ws-butler-chg chg)) . -4961) (undo-tree-id117 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -4962) (undo-tree-id118 . -1) 4963) nil (26130 51476 342861 31000) 0 nil])
([nil nil ((4961 . 4962)) nil (26130 51476 342844 180000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -4961) (undo-tree-id116 . -1) 4962) nil (26130 51476 342836 772000) 0 nil])
([nil nil ((4961 . 4967)) nil (26130 51476 342824 754000) 0 nil])
([nil nil ((4967 . 4972)) nil (26130 51476 342818 587000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -4970) (undo-tree-id114 . -1) (#(">" 0 1 (fontified t ws-butler-chg chg)) . -4971) (undo-tree-id115 . -1) 4972) nil (26130 51476 342810 235000) 0 nil])
([nil nil ((4970 . 4972)) nil (26130 51476 342793 439000) 0 nil])
([nil nil ((4971 . 4983) (4953 . 4965) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 4953) (4966 . 4967)) nil (26130 51476 342785 698000) 0 nil])
([nil nil ((4969 . 4983)) nil (26130 51476 342776 217000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -4982) (undo-tree-id113 . -1) 4983) nil (26130 51476 342768 587000) 0 nil])
([nil nil ((4982 . 4985)) nil (26130 51476 342756 698000) 0 nil])
([nil nil ((4986 . 4999)) nil (26130 51476 342749 810000) 0 nil])
([nil nil ((4999 . 5000)) nil (26130 51476 342743 476000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t ws-butler-chg chg)) . -4999) (undo-tree-id112 . -1) 5000) nil (26130 51476 342735 421000) 0 nil])
([nil nil ((4999 . 5002)) nil (26130 51476 342722 754000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg)) . -5001) (undo-tree-id111 . -1) 5002) nil (26130 51476 342714 680000) 0 nil])
([nil nil ((5001 . 5006)) nil (26130 51476 342701 717000) 0 nil])
([nil nil ((5004 . 5010)) nil (26130 51476 342695 291000) 0 nil])
([nil nil ((5009 . 5010)) nil (26130 51476 342688 810000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -5009) (undo-tree-id110 . -1) 5010) nil (26130 51476 342679 143000) 0 nil])
([nil nil ((5009 . 5010)) nil (26130 51476 342643 217000) 0 nil])
([nil nil ((5010 . 5017)) nil (26130 51476 342625 440000) 0 nil])
([nil nil ((5089 . 5093) (t 26130 51476 379596 331000)) nil (26130 51664 452699 235000) 0 nil])
([nil nil ((5093 . 5111)) nil (26130 51664 452692 532000) 0 nil])
([nil nil ((5111 . 5124)) nil (26130 51664 452686 754000) 0 nil])
([nil nil ((5124 . 5129)) nil (26130 51664 452680 995000) 0 nil])
([nil nil ((5129 . 5150)) nil (26130 51664 452675 87000) 0 nil])
([nil nil ((5150 . 5154)) nil (26130 51664 452669 69000) 0 nil])
([nil nil ((5153 . 5158)) nil (26130 51664 452662 754000) 0 nil])
([nil nil ((5155 . 5159) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 5154) (5154 . 5162) (5154 . 5155) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 5154) (undo-tree-id146 . -4) 5158) nil (26130 51664 452654 365000) 0 nil])
([nil nil ((5154 . 5162)) nil (26130 51664 452640 125000) 0 nil])
([nil nil ((5162 . 5170)) nil (26130 51664 452633 958000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -5168) (undo-tree-id144 . -1) (#("y" 0 1 (fontified t ws-butler-chg chg)) . -5169) (undo-tree-id145 . -1) 5170) nil (26130 51664 452626 328000) 0 nil])
([nil nil ((5168 . 5170)) nil (26130 51664 452595 643000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -5169) (undo-tree-id143 . -1) 5170) nil (26130 51664 452588 606000) 0 nil])
([nil nil ((5169 . 5176)) nil (26130 51664 452578 106000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -5174) (undo-tree-id141 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5175) (undo-tree-id142 . -1) 5176) nil (26130 51664 452570 347000) 0 nil])
([nil nil ((5174 . 5177)) nil (26130 51664 452555 273000) 0 nil])
([nil nil ((5177 . 5186)) nil (26130 51664 452549 384000) 0 nil])
([nil nil ((5186 . 5195)) nil (26130 51664 452543 458000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -5193) (undo-tree-id139 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg)) . -5194) (undo-tree-id140 . -1) 5195) nil (26130 51664 452535 310000) 0 nil])
([nil nil ((5193 . 5202)) nil (26130 51664 452520 607000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . -5201) (undo-tree-id138 . -1) 5202) nil (26130 51664 452513 477000) 0 nil])
([nil nil ((5201 . 5202)) nil (26130 51664 452502 885000) 0 nil])
([nil nil ((5202 . 5211)) nil (26130 51664 452497 218000) 0 nil])
([nil nil ((5211 . 5227)) nil (26130 51664 452491 403000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -5225) (undo-tree-id136 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5226) (undo-tree-id137 . -1) 5227) nil (26130 51664 452483 496000) 0 nil])
([nil nil ((5225 . 5228)) nil (26130 51664 452468 292000) 0 nil])
([nil nil ((5228 . 5237)) nil (26130 51664 452462 663000) 0 nil])
([nil nil ((5237 . 5248)) nil (26130 51664 452456 922000) 0 nil])
([nil nil ((5248 . 5249)) nil (26130 51664 452451 89000) 0 nil])
([nil nil ((5249 . 5258)) nil (26130 51664 452445 163000) 0 nil])
([nil nil ((5258 . 5269)) nil (26130 51664 452438 811000) 0 nil])
([nil nil ((5268 . 5270)) nil (26130 51664 452433 107000) 0 nil])
([nil nil ((5269 . 5278)) nil (26130 51664 452426 626000) 0 nil])
([nil nil ((5286 . 5291) (5270 . 5282) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 5270) (5278 . 5282)) nil (26130 51664 452419 589000) 0 nil])
([nil nil ((5291 . 5296)) nil (26130 51664 452411 533000) 0 nil])
([nil nil ((5296 . 5305)) nil (26130 51664 452405 793000) 0 nil])
([nil nil ((5305 . 5309)) nil (26130 51664 452399 978000) 0 nil])
([nil nil ((5297 . 5309) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 5297) 5309) nil (26130 51664 452393 515000) 0 nil])
([nil nil ((5313 . 5326)) nil (26130 51664 452386 145000) 0 nil])
([nil nil ((5326 . 5335)) nil (26130 51664 452380 441000) 0 nil])
([nil nil ((5343 . 5344)) nil (26130 51664 452374 848000) 0 nil])
([nil nil ((5344 . 5349)) nil (26130 51664 452369 219000) 0 nil])
([nil nil ((5349 . 5358)) nil (26130 51664 452363 89000) 0 nil])
([nil nil ((#("h" 0 1 (ws-butler-chg chg fontified t)) . -5354) (undo-tree-id132 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -5355) (undo-tree-id133 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -5356) (undo-tree-id134 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -5357) (undo-tree-id135 . -1) 5358) nil (26130 51664 452353 941000) 0 nil])
([nil nil ((5354 . 5373)) nil (26130 51664 452330 552000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -5371) (undo-tree-id130 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -5372) (undo-tree-id131 . -1) 5373) nil (26130 51664 452321 738000) 0 nil])
([nil nil ((5371 . 5389)) nil (26130 51664 452305 534000) 0 nil])
([nil nil ((5388 . 5393)) nil (26130 51664 452299 53000) 0 nil])
([nil nil ((5390 . 5394) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . 5389) (5389 . 5397) (5389 . 5390) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 5389) (undo-tree-id129 . -4) 5393) nil (26130 51664 452290 182000) 0 nil])
([nil nil ((5389 . 5397)) nil (26130 51664 452274 331000) 0 nil])
([nil nil ((5397 . 5417)) nil (26130 51664 452268 331000) 0 nil])
([nil nil ((5416 . 5418)) nil (26130 51664 452261 849000) 0 nil])
([nil nil ((5418 . 5425)) nil (26130 51664 452255 979000) 0 nil])
([nil nil ((5424 . 5433)) nil (26130 51664 452249 534000) 0 nil])
([nil nil ((5449 . 5450) (5425 . 5437) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . 5425) (5433 . 5445)) nil (26130 51664 452241 960000) 0 nil])
([nil nil ((5449 . 5462)) nil (26130 51664 452233 386000) 0 nil])
([nil nil ((5461 . 5462)) nil (26130 51664 452226 757000) 0 nil])
([nil nil ((5464 . 5465)) nil (26130 51664 452220 516000) 0 nil])
([nil nil ((5467 . 5476)) nil (26130 51664 452214 16000) 0 nil])
([nil nil ((5476 . 5489)) nil (26130 51664 452207 405000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t)) . -5486) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -5487) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -5488) (undo-tree-id127 . -1) (undo-tree-id128 . -1) 5489) nil (26130 51664 452197 387000) 0 nil])
([nil nil ((5486 . 5494)) nil (26130 51664 452164 979000) 0 nil])
([nil nil ((5494 . 5503)) nil (26130 51664 452158 516000) 0 nil])
([nil nil ((5502 . 5511)) nil (26130 51664 452152 405000) 0 nil])
([nil nil ((5527 . 5536) (5503 . 5515) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . 5503) (5511 . 5523)) nil (26130 51664 452144 628000) 0 nil])
([nil nil ((5536 . 5548)) nil (26130 51664 452134 757000) 0 nil])
([nil nil ((5548 . 5550)) nil (26130 51664 452127 776000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t)) . -5549) (undo-tree-id122 . -1) 5550) nil (26130 51664 452117 609000) 0 nil])
([nil nil ((5549 . 5550)) nil (26130 51664 452070 406000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -5591) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("l" 0 1 (fontified t)) . -5592) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("a" 0 1 (fontified t)) . -5593) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("y" 0 1 (fontified t)) . -5594) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("e" 0 1 (fontified t)) . -5595) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("r" 0 1 (fontified t)) . -5596) (undo-tree-id166 . -1) 5597 (t 26130 51664 486590 803000)) nil (26130 51707 240662 663000) 0 nil])
([nil nil ((5591 . 5601)) nil (26130 51707 240589 460000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -5600) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 5601) nil (26130 51707 240580 960000) 0 nil])
([nil nil ((5600 . 5608)) nil (26130 51707 240507 35000) 0 nil])
([nil nil ((5607 . 5612)) nil (26130 51707 240500 220000) 0 nil])
([nil nil ((5612 . 5613)) nil (26130 51707 240493 516000) 0 nil])
([nil nil ((5607 . 5621) (#("videoJ" 0 6 (fontified t ws-butler-chg chg)) . -5607) (undo-tree-id148 . -6) 5613) nil (26130 51707 240485 109000) 0 nil])
([nil nil ((5622 . 5633)) nil (26130 51707 240470 387000) 0 nil])
([nil nil ((5632 . 5637)) nil (26130 51707 240463 424000) 0 nil])
([nil nil ((5632 . 5649) (#("handl" 0 5 (fontified t ws-butler-chg chg)) . -5632) (undo-tree-id147 . -5) 5637) nil (26130 51707 240445 887000) 0 nil])
([nil nil ((5296 . 5297) (t 26130 51707 270328 391000)) nil (26130 51714 250054 88000) 0 nil])
([nil nil ((5552 . 5553) (t 26130 51714 282285 855000)) nil (26130 51732 992572 942000) 0 nil])
([nil nil ((4218 . 4219) (t 26130 51733 26172 777000)) nil (26130 51777 954115 177000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -4222) (undo-tree-id167 . -1) 4223) nil (26130 51777 954104 251000) 0 nil])
([nil nil ((4222 . 4225)) nil (26130 51777 954056 770000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -5291) (undo-tree-id177 . -1) (#("e" 0 1 (fontified t)) . -5292) (undo-tree-id178 . -1) (#("l" 0 1 (fontified t)) . -5293) (undo-tree-id179 . -1) (#("V" 0 1 (fontified t)) . -5294) (undo-tree-id180 . -1) (#("i" 0 1 (fontified t)) . -5295) (undo-tree-id181 . -1) (#("d" 0 1 (fontified t)) . -5296) (undo-tree-id182 . -1) (#("e" 0 1 (fontified t)) . -5297) (undo-tree-id183 . -1) (#("o" 0 1 (fontified t)) . -5298) (undo-tree-id184 . -1) 5299 (t 26130 51777 985905 82000)) nil (26130 51964 934189 741000) 0 nil])
([nil nil ((5291 . 5292)) nil (26130 51964 934149 74000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -5291) (undo-tree-id176 . -1) 5292) nil (26130 51964 934141 648000) 0 nil])
([nil nil ((5291 . 5292)) nil (26130 51964 934129 815000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t)) . -5290) (undo-tree-id174 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -5291) (undo-tree-id175 . -1) 5292) nil (26130 51964 934121 796000) 0 nil])
([nil nil ((5290 . 5298)) nil (26130 51964 934105 834000) 0 nil])
([nil nil ((5297 . 5307)) nil (26130 51964 934100 0) 0 nil])
([nil nil ((5308 . 5310)) nil (26130 51964 934094 297000) 0 nil])
([nil nil ((5309 . 5322)) nil (26130 51964 934088 408000) 0 nil])
([nil nil ((5322 . 5326)) nil (26130 51964 934082 482000) 0 nil])
([nil nil ((5310 . 5326) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 5310) (5326 . 5334)) nil (26130 51964 934075 260000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -5337) (undo-tree-id173 . -1) 5338) nil (26130 51964 934066 19000) 0 nil])
([nil nil ((5337 . 5343)) nil (26130 51964 934055 112000) 0 nil])
([nil nil ((5339 . 5348) (#("Duel" 0 4 (fontified t ws-butler-chg chg)) . -5339) (undo-tree-id172 . -4) 5343) nil (26130 51964 934047 352000) 0 nil])
([nil nil ((5339 . 5346)) nil (26130 51964 934034 945000) 0 nil])
([nil nil ((5355 . 5356)) nil (26130 51964 934028 464000) 0 nil])
([nil nil ((5356 . 5369)) nil (26130 51964 934022 741000) 0 nil])
([nil nil ((5369 . 5373)) nil (26130 51964 934016 667000) 0 nil])
([nil nil ((5357 . 5373) (#("            " 0 12 (fontified t ws-butler-chg chg)) . 5357) 5373) nil (26130 51964 934009 112000) 0 nil])
([nil nil ((5377 . 5388)) nil (26130 51964 934001 519000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5386) (undo-tree-id170 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5387) (undo-tree-id171 . -1) 5388) nil (26130 51964 933993 390000) 0 nil])
([nil nil ((5386 . 5401)) nil (26130 51966 183660 375000) 0 nil])
([nil nil ((5401 . 5406)) nil (26130 51981 205471 186000) 0 nil] [nil nil ((5395 . 5406) (#("Dinner" 0 6 (fontified t ws-butler-chg chg)) . -5395) (undo-tree-id169 . -6) 5401) ((nil ws-butler-chg delete 5401 . 5402) (5395 . 5401) (#("DinnerVideo" 0 11 (fontified t ws-butler-chg chg)) . 5395)) (26130 51965 724119 661000) 0 nil])
([nil nil ((5406 . 5419)) nil (26130 51981 205465 482000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg delete)) . -5407) (undo-tree-id168 . -1) 5408) ((nil ws-butler-chg delete 5408 . 5409) (5407 . 5408)) (26130 51965 328174 539000) 0 nil])
([nil nil ((5419 . 5422)) nil (26130 51981 205459 556000) 0 nil])
([nil nil ((5407 . 5408)) ((#(";" 0 1 (fontified t ws-butler-chg chg)) . 5407) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1)) (26130 51964 985741 825000) 0 nil])
([nil nil ((5407 . 5423) (#("            " 0 12 (fontified t ws-butler-chg chg)) . 5407) 5422) nil (26130 51981 205452 408000) 0 nil])
([nil nil ((5408 . 5421)) ((#("
            " 0 1 (fontified t ws-butler-chg chg) 1 13 (fontified t ws-butler-chg chg)) . 5408) (undo-tree-id185 . -13) (undo-tree-id186 . -13) (undo-tree-id187 . -13) (undo-tree-id188 . -1)) (26130 51964 934516 331000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -5425) (undo-tree-id198 . -1) 5426) nil (26130 51981 205443 889000) 0 nil])
([nil nil ((5421 . 5425)) ((#("case" 0 4 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . 5421)) (26130 51964 933890 964000) 0 nil])
([nil nil ((5425 . 5427)) nil (26130 51981 205432 649000) 0 nil])
nil
([nil nil ((5427 . 5433)) nil (26130 51981 205426 482000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5430) (undo-tree-id195 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5431) (undo-tree-id196 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5432) (undo-tree-id197 . -1) 5433) nil (26130 51981 205416 760000) 0 nil])
([nil nil ((5430 . 5431)) nil (26130 51981 205395 353000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5429) (undo-tree-id193 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5430) (undo-tree-id194 . -1) 5431) nil (26130 51981 205386 260000) 0 nil])
([nil nil ((5429 . 5430)) nil (26130 51981 205367 149000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5429) (undo-tree-id192 . -1) 5430) nil (26130 51981 205358 75000) 0 nil])
([nil nil ((5429 . 5450)) nil (26130 51981 205288 964000) 0 nil])
([nil nil ((5450 . 5460)) nil (26130 51981 205270 946000) 0 nil])
([nil nil ((5127 . 5132) (t 26130 51981 240747 510000)) nil (26130 52021 247382 690000) 0 nil])
([nil nil ((5132 . 5146)) nil (26130 52021 247376 79000) 0 nil])
([nil nil ((5146 . 5155)) nil (26130 52021 247370 264000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t ws-butler-chg chg)) . -5153) (undo-tree-id202 . -1) (#("{" 0 1 (fontified t ws-butler-chg chg)) . -5154) (undo-tree-id203 . -1) 5155) nil (26130 52021 247362 338000) 0 nil])
([nil nil ((5153 . 5154)) nil (26130 52021 247347 79000) 0 nil])
([nil nil ((#("switch(state.vote){
                case \"duel\": return DuelVideo;
                case \"dinner\": return DinnerVideo
                case \"disaster\": return DisasterVideo}," 0 6 (fontified t face font-lock-keyword-face) 6 20 (fontified t) 20 36 (fontified t) 36 37 (fontified t face font-lock-keyword-face) 37 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t) 41 47 (fontified t face font-lock-string-face) 47 49 (fontified t) 49 55 (fontified t face font-lock-keyword-face) 55 56 (fontified t) 56 67 (fontified t) 67 83 (fontified t) 83 84 (fontified t face font-lock-keyword-face) 84 87 (fontified t face font-lock-keyword-face) 87 88 (fontified t) 88 96 (fontified t face font-lock-string-face) 96 98 (fontified t) 98 104 (fontified t face font-lock-keyword-face) 104 105 (fontified t) 105 117 (fontified t) 117 133 (fontified t) 133 134 (fontified t face font-lock-keyword-face) 134 137 (fontified t face font-lock-keyword-face) 137 138 (fontified t) 138 148 (fontified t face font-lock-string-face) 148 150 (fontified t) 150 156 (fontified t face font-lock-keyword-face) 156 170 (fontified t) 170 171 (fontified t) 171 172 (fontified t)) . 5317) (undo-tree-id200 . -172) (undo-tree-id201 . -172) 5489) nil (26130 52021 247339 746000) 0 nil])
([nil nil ((5153 . 5158)) nil (26130 52021 247323 672000) 0 nil])
([nil nil ((5155 . 5159) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 5154) (5154 . 5162) (5154 . 5155) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 5154) (undo-tree-id199 . -4) 5158) nil (26130 52021 247314 653000) 0 nil])
([nil nil ((5154 . 5162)) nil (26130 52021 247278 376000) 0 nil])
([nil nil ((#("        " 0 8 (ws-butler-chg chg fontified nil)) . -5271) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . -5229) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . -5190) (nil rear-nonsticky nil 5333 . 5334) (nil fontified nil 5333 . 5334) (nil fontified nil 5332 . 5333) (nil fontified nil 5318 . 5332) (nil fontified nil 5312 . 5318) (nil fontified nil 5310 . 5312) (nil fontified nil 5300 . 5310) (nil fontified nil 5299 . 5300) (nil fontified nil 5296 . 5299) (nil fontified nil 5295 . 5296) (nil fontified nil 5279 . 5295) (nil fontified nil 5267 . 5279) (nil fontified nil 5266 . 5267) (nil fontified nil 5260 . 5266) (nil fontified nil 5258 . 5260) (nil fontified nil 5250 . 5258) (nil fontified nil 5249 . 5250) (nil fontified nil 5246 . 5249) (nil fontified nil 5245 . 5246) (nil fontified nil 5229 . 5245) (nil fontified nil 5218 . 5229) (nil fontified nil 5217 . 5218) (nil fontified nil 5211 . 5217) (nil fontified nil 5209 . 5211) (nil fontified nil 5203 . 5209) (nil fontified nil 5202 . 5203) (nil fontified nil 5199 . 5202) (nil fontified nil 5198 . 5199) (nil fontified nil 5182 . 5198) (nil fontified nil 5168 . 5182) (nil fontified nil 5162 . 5168) (5162 . 5334)) nil (26130 52021 247263 376000) 0 nil])
([nil nil ((5479 . 5486)) nil (26130 52021 247221 172000) 0 nil])
([nil nil ((5486 . 5487) (t 26130 52021 284527 876000)) nil (26130 52022 112429 897000) 0 nil])
([nil nil ((#("," 0 1 (fontified t rear-nonsticky t)) . -5309) (undo-tree-id204 . -1) 5310 (t 26130 52022 148523 163000)) nil (26130 52026 559923 228000) 0 nil])
([nil nil ((5788 . 5801) (#(" " 0 1 (fontified t)) . 5788) (undo-tree-id206 . -1) 5789 (t 26130 52026 596498 917000)) nil (26130 52114 40366 942000) 0 nil])
([nil nil ((5790 . 5802) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 5789) (5789 . 5801) (5789 . 5790) (#("            " 0 12 (fontified t ws-butler-chg chg)) . 5789) (undo-tree-id205 . -12) 5801) nil (26130 52114 40349 850000) 0 nil])
([nil nil ((5789 . 5801)) nil (26130 52114 40311 943000) 0 nil])
([nil nil ((5801 . 5811)) nil (26130 52114 40305 869000) 0 nil])
([nil nil ((5809 . 5817)) nil (26130 52114 40299 17000) 0 nil])
([nil nil ((5817 . 5838)) nil (26130 52114 40292 165000) 0 nil])
([nil nil ((5838 . 5841)) nil (26130 52114 40274 480000) 0 nil])
([nil nil ((#("style={{'height': '80%', 'width': '100%'}}" 0 8 (fontified t) 8 16 (fontified t face font-lock-string-face) 16 18 (fontified t) 18 23 (fontified t face font-lock-string-face) 23 25 (fontified t) 25 32 (fontified t face font-lock-string-face) 32 34 (fontified t) 34 40 (fontified t face font-lock-string-face) 40 42 (fontified t)) . -5801) (undo-tree-id225 . -40) (undo-tree-id226 . -42) (undo-tree-id227 . -42) 5843 (t 26130 52114 80027 435000)) nil (26130 52227 353198 390000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -5387) (undo-tree-id220 . -1) (#("a" 0 1 (fontified t)) . -5388) (undo-tree-id221 . -1) (#("l" 0 1 (fontified t)) . -5389) (undo-tree-id222 . -1) (#("s" 0 1 (fontified t)) . -5390) (undo-tree-id223 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -5391) (undo-tree-id224 . -1) 5392) nil (26130 52227 353170 556000) 0 nil])
([nil nil ((5387 . 5391)) nil (26130 52227 353097 668000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -5363) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (#("r" 0 1 (fontified t)) . -5364) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("u" 0 1 (fontified t)) . -5365) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -5366) (undo-tree-id219 . -1) 5367) nil (26130 52227 353085 964000) 0 nil])
([nil nil ((5363 . 5368)) nil (26130 52227 353005 261000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . 5789) (undo-tree-id207 . -12) (undo-tree-id208 . -12) (undo-tree-id209 . -12) 5368) nil (26130 53127 554471 304000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -5363) (undo-tree-id254 . -1) (#("a" 0 1 (fontified t)) . -5364) (undo-tree-id255 . -1) (#("l" 0 1 (fontified t)) . -5365) (undo-tree-id256 . -1) (#("s" 0 1 (fontified t)) . -5366) (undo-tree-id257 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -5367) (undo-tree-id258 . -1) 5368) nil (26130 53134 613384 774000) 0 nil] [nil nil ((5402 . 5404) (t 26130 52227 387430 156000)) ((#("//" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 5402)) (26130 53126 398647 991000) 0 nil])
([nil nil ((5363 . 5367)) nil (26130 53134 613353 255000) 0 nil])
([nil nil ((5430 . 5432)) ((#("//" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face)) . 5430) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (t 26130 52234 351393 876000)) (26130 52234 314630 567000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -5387) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (#("r" 0 1 (fontified t)) . -5388) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (#("u" 0 1 (fontified t)) . -5389) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -5390) (undo-tree-id253 . -1) 5391) nil (26130 53134 613340 589000) 0 nil])
nil
([nil nil ((5387 . 5392)) nil (26130 53134 613248 237000) 0 nil])
([nil nil ((5789 . 5801) (t 26130 53134 654936 481000)) nil (26130 54225 848124 301000) 0 nil])
([nil nil ((5801 . 5803)) nil (26130 54225 848111 412000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t ws-butler-chg chg)) . -5801) (undo-tree-id300 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -5802) (undo-tree-id301 . -1) 5803) nil (26130 54225 848096 579000) 0 nil])
([nil nil ((5801 . 5811)) nil (26130 54225 848068 227000) 0 nil])
([nil nil ((#("style={{}}" 0 10 (fontified t ws-butler-chg chg)) . -5801) (undo-tree-id298 . -10) (undo-tree-id299 . -10) 5811) nil (26130 54225 848054 561000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5788) (undo-tree-id296 . -1) (undo-tree-id297 . -1) 5789) nil (26130 54225 848024 320000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . -5788) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5789) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5790) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5791) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5792) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5793) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5794) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5795) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5796) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5797) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5798) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5799) (undo-tree-id294 . -1) (undo-tree-id295 . -1) 5800) nil (26130 54225 847978 691000) 0 nil])
([nil nil ((5006 . 5015) (#(" " 0 1 (fontified t)) . 5006) (undo-tree-id271 . -1) 5007) nil (26130 54225 847789 210000) 0 nil])
([nil nil ((5008 . 5016) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 5007) (5007 . 5015) (5007 . 5008) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 5007) (undo-tree-id270 . -8) 5015) nil (26130 54225 847762 229000) 0 nil])
([nil nil ((5007 . 5015)) nil (26130 54225 847733 729000) 0 nil])
([nil nil ((5015 . 5020)) nil (26130 54225 847721 933000) 0 nil])
([nil nil ((5020 . 5025)) nil (26130 54225 847710 766000) 0 nil])
([nil nil ((11842 . 11854) ("        " . 11842) (11717 . 11729) ("        " . 11717) ("    " . -11592) ("        " . -11572) ("            " . -11557) ("            " . -11543) ("            " . -11524) ("            " . -11471) ("            " . -11432) ("            " . -11413) ("            " . -11360) ("            " . -11321) ("            " . -11283) ("            " . -11250) ("            " . -11221) ("            " . -11186) ("            " . -11112) ("        " . -11095) ("        " . -11076) ("            " . -11039) ("        " . -11021) ("        " . -11001) ("            " . -10986) ("            " . -10936) ("            " . -10900) ("            " . -10865) ("            " . -10815) ("            " . -10768) ("            " . -10702) ("            " . -10620) ("        " . -10603) ("    " . -10582) ("    " . -9880) ("        " . -9860) ("             " . -9771) ("             " . -9707) ("        " . -9664) ("        " . -9644) ("             " . -9556) ("             " . -9494) ("        " . -9451) ("        " . -9431) ("             " . -9345) ("             " . -9285) ("        " . -9242) ("    " . -9149) ("    " . -9130) ("        " . -9075) ("        " . -9057) ("        " . -9002) ("    " . -8914) ("    " . -8821) ("        " . -8802) ("        " . -8788) ("             " . -8728) ("             " . -8714) ("             " . -8692) ("             " . -8628) ("             " . -8565) ("        " . -8520) ("        " . -8500) ("             " . -8419) ("             " . -8359) ("        " . -8314) ("    " . -8225) ("    " . -8206) ("        " . -8187) ("            " . -8132) ("            " . -8114) ("            " . -8050) ("        " . -8007) ("        " . -7987) ("             " . -7957) ("        " . -7914) ("    " . -7834) ("    " . -7815) ("        " . -7770) ("    " . -7696) (#("    " 0 4 (face font-lock-comment-delimiter-face)) . -6598) (6547 . 6578) (#("                " 0 16 (face font-lock-comment-face)) . 6547) (6487 . 6518) (#("                    " 0 20 (face font-lock-comment-face)) . 6487) (6386 . 6417) (#("                     " 0 5 (face font-lock-comment-face) 5 6 (face font-lock-comment-face) 6 21 (face font-lock-comment-face)) . 6386) (6322 . 6353) (#("                " 0 5 (face font-lock-comment-face) 5 6 (face font-lock-comment-face) 6 7 (face font-lock-comment-face) 7 8 (face font-lock-comment-face) 8 11 (face font-lock-comment-face) 11 16 (face font-lock-comment-face)) . 6322) (6284 . 6315) (#("                " 0 15 (face font-lock-comment-face) 15 16 (face font-lock-comment-face)) . 6284) (6245 . 6276) (#("                    " 0 15 (face font-lock-comment-face) 15 20 (face font-lock-comment-face)) . 6245) (6161 . 6192) (#("                         " 0 22 (face font-lock-comment-face) 22 25 (face font-lock-comment-face)) . 6161) (6074 . 6105) (#("                         " 0 25 (face font-lock-comment-face)) . 6074) (6012 . 6043) (#("                    " 0 6 (face font-lock-comment-face) 6 7 (face font-lock-comment-face) 7 20 (face font-lock-comment-face)) . 6012) ("    " . -5912) (4923 . 4935) (#("        " 0 8 (fontified t)) . 4923) (4881 . 4897) (#("            " 0 12 (fontified t)) . 4881) (4847 . 4863) (#("            " 0 12 (fontified t)) . 4847) (4798 . 4810) (#("        " 0 8 (fontified t)) . 4798) 1) nil (26130 54225 847641 692000) 0 nil])
([nil nil ((5039 . 5040)) nil (26130 54225 847485 563000) 0 nil])
([nil nil ((#("h" 0 1 (ws-butler-chg chg fontified t)) . -5039) (undo-tree-id269 . -1) 5040) nil (26130 54225 847471 934000) 0 nil])
([nil nil ((5039 . 5049)) nil (26130 54225 847387 712000) 0 nil])
([nil nil ((#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5040) (undo-tree-id260 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5041) (undo-tree-id261 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5042) (undo-tree-id262 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5043) (undo-tree-id263 . -1) (#("h" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5044) (undo-tree-id264 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5045) (undo-tree-id265 . -1) (#("'" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5046) (undo-tree-id266 . -1) (#(":" 0 1 (ws-butler-chg chg fontified t)) . -5047) (undo-tree-id267 . -1) (#("'" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5048) (undo-tree-id268 . -1) 5049) nil (26130 54225 847364 879000) 0 nil])
([nil nil ((5040 . 5048)) nil (26130 54225 847276 620000) 0 nil])
([nil nil ((#("1" 0 1 (ws-butler-chg chg fontified t)) . -5047) (undo-tree-id259 . -1) 5048) nil (26130 54225 847260 398000) 0 nil])
([nil nil ((5047 . 5053)) nil (26130 54225 847195 306000) 0 nil])
([nil nil ((5671 . 5684) (t 26130 54225 897622 24000)) nil (26130 54304 100614 227000) 0 nil])
([nil nil ((5684 . 5694)) nil (26130 54304 100607 42000) 0 nil])
([nil nil ((5693 . 5695)) nil (26130 54304 100600 931000) 0 nil])
([nil nil ((5694 . 5704)) nil (26130 54304 100594 801000) 0 nil])
([nil nil ((5704 . 5715)) nil (26130 54304 100588 394000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5708) (undo-tree-id302 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5709) (undo-tree-id303 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5710) (undo-tree-id304 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5711) (undo-tree-id305 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5712) (undo-tree-id306 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5713) (undo-tree-id307 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5714) (undo-tree-id308 . -1) 5715) nil (26130 54304 100574 413000) 0 nil])
([nil nil ((5708 . 5722)) nil (26130 54304 100501 43000) 0 nil])
([nil nil ((5802 . 5815) (t 26130 54304 137242 457000)) nil (26130 54342 828799 216000) 0 nil])
([nil nil ((5815 . 5826)) nil (26130 54342 828792 216000) 0 nil])
([nil nil ((5825 . 5830)) nil (26130 54342 828785 883000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -5827) (undo-tree-id323 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5828) (undo-tree-id324 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5829) (undo-tree-id325 . -1) 5830) nil (26130 54342 828776 457000) 0 nil])
([nil nil ((5827 . 5838)) nil (26130 54342 828756 624000) 0 nil])
([nil nil ((5838 . 5844)) nil (26130 54342 828750 661000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5843) (undo-tree-id322 . -1) 5844) nil (26130 54342 828743 290000) 0 nil])
([nil nil ((5843 . 5850)) nil (26130 54342 828731 198000) 0 nil])
([nil nil ((1220 . 1225)) nil (26130 54342 828724 976000) 0 nil])
([nil nil ((1238 . 1244) (1225 . 1226) (1225 . 1237)) nil (26130 54342 828718 605000) 0 nil])
([nil nil ((1244 . 1249)) nil (26130 54342 828710 864000) 0 nil])
([nil nil ((1260 . 1266) (1249 . 1250) (1249 . 1259)) nil (26130 54342 828703 679000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -1261) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -1262) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -1263) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -1264) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1265) (undo-tree-id321 . -1) 1266) nil (26130 54342 828688 902000) 0 nil])
([nil nil ((1261 . 1263)) nil (26130 54342 828550 976000) 0 nil])
([nil nil ((1263 . 1266)) nil (26130 54342 828532 921000) 0 nil])
([nil nil ((11906 . 11907) (t 26130 54343 361052 548000)) nil (26130 54368 791447 452000) 0 nil])
([nil nil ((11950 . 11951)) nil (26130 54368 791439 601000) 0 nil])
([nil nil ((11907 . 11919)) nil (26130 54368 791432 693000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -11918) (undo-tree-id326 . -1) (undo-tree-id327 . -1) 11919) nil (26130 54368 791422 601000) 0 nil])
([nil nil ((11918 . 11926)) nil (26130 54368 791369 694000) 0 nil])
([nil nil ((5770 . 5771) (t 26130 54368 828929 364000)) nil (26130 54380 912042 730000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -5770) (undo-tree-id328 . -1) (undo-tree-id329 . -1) 5771 (t 26130 54380 948870 774000)) nil (26130 54395 309254 417000) 0 nil])
([nil nil ((5897 . 5898)) nil (26130 54479 77730 348000) 0 nil])
([nil nil ((#("setState({...state, 'seeHeader': false})" 0 1 (fontified t) 1 20 (fontified t) 20 31 (fontified t face font-lock-string-face) 31 33 (fontified t) 33 38 (fontified t face font-lock-constant-face) 38 39 (fontified t) 39 40 (fontified t)) . -5730) (undo-tree-id350 . -40) (undo-tree-id351 . -40) 5770 (t 26130 54480 944388 109000)) nil (26130 54520 554534 279000) 0 nil] [nil nil ((#("t" 0 1 (fontified t)) . -1239) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (#("r" 0 1 (fontified t)) . -1240) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#("u" 0 1 (fontified t)) . -1241) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("e" 0 1 (fontified t face font-lock-constant-face)) . -1242) (undo-tree-id339 . -1) 1243 (t 26130 54395 348801 189000)) ((1239 . 1243)) (26130 54478 88194 212000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5717) (undo-tree-id349 . -1) 5718) nil (26130 54520 554517 575000) 0 nil])
([nil nil ((1239 . 1244)) ((#("false" 0 5 (fontified t face font-lock-constant-face)) . 1239) (undo-tree-id340 . -5) (undo-tree-id341 . -5) (undo-tree-id342 . -5) (t 26130 54465 800461 128000)) (26130 54465 759456 252000) 0 nil])
([nil nil ((#("            " 0 1 (fontified t ws-butler-chg delete) 1 12 (fontified t)) . -5717) (undo-tree-id346 . -12) (undo-tree-id347 . -12) (undo-tree-id348 . -12) 5729) nil (26130 54520 554504 779000) 0 nil])
nil
([nil nil ((8772 . 8775)) nil (26130 54520 554485 612000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -8774) (undo-tree-id345 . -1) 8775) nil (26130 54520 554477 613000) 0 nil])
([nil nil ((8774 . 8787)) nil (26130 54520 554465 483000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg chg)) . -8785) (undo-tree-id343 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -8786) (undo-tree-id344 . -1) 8787) nil (26130 54520 554455 613000) 0 nil])
([nil nil ((8785 . 8792)) nil (26130 54520 554402 576000) 0 nil])
([nil nil ((6009 . 6022) (t 26130 54520 596197 41000)) nil (26130 54655 419109 837000) 0 nil])
([nil nil ((6022 . 6023)) nil (26130 54655 419103 133000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t ws-butler-chg chg)) . -6022) (undo-tree-id363 . -1) 6023) nil (26130 54655 419096 59000) 0 nil])
([nil nil ((6022 . 6037)) nil (26130 54655 419034 689000) 0 nil])
([nil nil ((6028 . 6041)) nil (26130 54655 419028 837000) 0 nil])
([nil nil ((6030 . 6042) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 6029) (6029 . 6041) (6029 . 6030) (#("            " 0 12 (fontified t ws-butler-chg chg)) . 6029) (undo-tree-id362 . -12) 6041) nil (26130 54655 419020 282000) 0 nil])
([nil nil ((6029 . 6041)) nil (26130 54655 419005 948000) 0 nil])
([nil nil ((6041 . 6046)) nil (26130 54655 419000 60000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -6045) (undo-tree-id361 . -1) 6046) nil (26130 54655 418993 60000) 0 nil])
([nil nil ((6045 . 6048)) nil (26130 54655 418981 948000) 0 nil])
([nil nil ((6047 . 6060)) nil (26130 54655 418976 23000) 0 nil])
([nil nil ((6061 . 6074)) nil (26130 54655 418970 134000) 0 nil])
([nil nil ((6074 . 6084)) nil (26130 54655 418964 375000) 0 nil])
([nil nil ((6083 . 6089)) nil (26130 54655 418958 134000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t ws-butler-chg chg)) . -6087) (undo-tree-id359 . -1) (#("{" 0 1 (fontified t ws-butler-chg chg)) . -6088) (undo-tree-id360 . -1) 6089) nil (26130 54655 418950 4000) 0 nil])
([nil nil ((6087 . 6089)) nil (26130 54655 418934 356000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t ws-butler-chg chg)) . -6087) (undo-tree-id357 . -1) (#("P" 0 1 (fontified t ws-butler-chg chg)) . -6088) (undo-tree-id358 . -1) 6089) nil (26130 54655 418926 319000) 0 nil])
([nil nil ((6087 . 6089)) nil (26130 54655 418910 264000) 0 nil])
([nil nil ((6088 . 6101)) nil (26130 54655 418904 60000) 0 nil])
([nil nil ((6090 . 6102) (#("                " 0 16 (fontified nil ws-butler-chg chg)) . 6089) (6089 . 6105) (6089 . 6090) (#("            " 0 12 (fontified t ws-butler-chg chg)) . 6089) (undo-tree-id356 . -12) 6101) nil (26130 54655 418895 542000) 0 nil])
([nil nil ((6089 . 6105)) nil (26130 54655 418880 375000) 0 nil])
([nil nil ((6105 . 6115)) nil (26130 54655 418874 449000) 0 nil])
([nil nil ((6114 . 6116)) nil (26130 54655 418868 782000) 0 nil])
([nil nil ((6115 . 6118)) nil (26130 54655 418863 60000) 0 nil])
([nil nil ((6118 . 6139)) nil (26130 54655 418856 857000) 0 nil])
([nil nil ((6139 . 6148)) nil (26130 54655 418851 60000) 0 nil])
([nil nil ((6148 . 6169)) nil (26130 54655 418845 227000) 0 nil])
([nil nil ((6169 . 6172)) nil (26130 54655 418838 949000) 0 nil])
([nil nil ((6172 . 6187)) nil (26130 54655 418832 616000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -6185) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6186) (undo-tree-id355 . -1) 6187) nil (26130 54655 418822 190000) 0 nil])
([nil nil ((6185 . 6187)) nil (26130 54655 418763 264000) 0 nil])
([nil nil ((#("<Modal
            open={state.seeHome}
            onClose={()=>{
                setState({...state, 'page':'home', 'vote':null, 'seeHome': false, 'seeHeader':true})
            }}
            ></Modal>" 0 7 (fontified t) 7 40 (fontified t) 40 67 (fontified t) 67 103 (fontified t) 103 109 (fontified t face font-lock-string-face) 109 110 (fontified t) 110 116 (fontified t face font-lock-string-face) 116 118 (fontified t) 118 124 (fontified t face font-lock-string-face) 124 125 (fontified t) 125 129 (fontified t face font-lock-constant-face) 129 131 (fontified t) 131 140 (fontified t face font-lock-string-face) 140 142 (fontified t) 142 147 (fontified t face font-lock-constant-face) 147 149 (fontified t) 149 160 (fontified t face font-lock-string-face) 160 161 (fontified t) 161 165 (fontified t face font-lock-constant-face) 165 166 (fontified t) 166 167 (fontified t) 167 168 (fontified t) 168 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 195 (fontified t) 195 196 (fontified t) 196 204 (fontified t)) . -6022) (undo-tree-id366 . -204) (undo-tree-id367 . -204) 6226 (t 26130 54655 455548 365000)) nil (26130 54755 800434 699000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -6035) (undo-tree-id365 . -1) 6036) nil (26130 54755 800408 385000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t ws-butler-chg delete)) . 6035) (#("/" 0 1 (fontified t ws-butler-chg delete face font-lock-comment-delimiter-face)) . 6035)) nil (26130 54755 800388 792000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t ws-butler-chg delete)) . 6718) (#("/" 0 1 (fontified t ws-butler-chg delete)) . 6718) (#("*" 0 1 (fontified t)) . 6718)) nil (26130 54755 800376 459000) 0 nil])
([nil nil ((#("             " 0 1 (fontified t) 1 2 (fontified t ws-butler-chg delete) 2 8 (fontified t) 8 13 (fontified t)) . -6530) (undo-tree-id364 . -1) (#("                   " 0 15 (fontified t) 15 19 (fontified t)) . -6511) (#("                   " 0 13 (fontified t) 13 19 (fontified t)) . -6470) (#("                   " 0 2 (fontified t) 2 19 (fontified t)) . -6388) (#("                   " 0 19 (fontified t)) . -6343) (#("                   " 0 19 (fontified t)) . -6324) (#("                   " 0 19 (fontified t)) . -6304) (#("                   " 0 19 (fontified t)) . -6239) (#("                   " 0 19 (fontified t)) . -6171) (#("                   " 0 19 (fontified t)) . -6128) (#("                " 0 1 (fontified t ws-butler-chg delete) 1 5 (fontified t) 5 16 (fontified t)) . -6035) 1) nil (26130 54755 800355 274000) 0 nil])
([nil nil ((6022 . 6023)) nil (26130 54755 800299 200000) 0 nil])
([nil nil ((6023 . 6034)) nil (26130 54777 599232 170000) 0 nil])
([nil nil ((#("{ seeHome %%" 0 2 (fontified t) 2 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t)) . 6022) (undo-tree-id380 . -12) (undo-tree-id381 . -10) (undo-tree-id382 . -12) (undo-tree-id383 . -2) (undo-tree-id384 . -2) (undo-tree-id385 . -12) (undo-tree-id386 . -12) 6034) nil (26130 54784 9193 508000) 0 nil] [nil nil ((6523 . 6525) (6529 . 6530)) ((#("}" 0 1 (fontified nil)) . 6529) (#("  " 0 2 (fontified t)) . 6523)) (26130 54777 195169 126000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . 6010) (undo-tree-id373 . -12) (undo-tree-id374 . -12) (undo-tree-id375 . -12) (undo-tree-id376 . -12) (undo-tree-id377 . -12) (undo-tree-id378 . -12) (undo-tree-id379 . -12) 6022) nil (26130 54784 9107 693000) 0 nil])
([nil nil ((6024 . 6030) (t 26130 54755 847066 457000)) ((#("state." 0 6 (fontified t)) . 6024)) (26130 54776 845331 230000) 0 nil])
([nil nil ((6010 . 6022) 6022 (t 26130 54784 46931 216000)) nil (26130 54811 782220 251000) 0 nil])
([nil nil ((#("%" 0 1 (fontified t)) . -6038) (undo-tree-id368 . -1) (#("%" 0 1 (fontified t)) . -6039) (undo-tree-id369 . -1) 6040 (t 26130 54761 119041 170000)) ((6038 . 6040)) (26130 54776 450909 214000) 0 nil])
([nil nil ((6022 . 6023) (t 26130 54784 46931 216000)) nil (26130 54811 782212 251000) 0 nil])
([nil nil ((6038 . 6040)) ((#("&&" 0 2 (fontified t)) . 6038) (undo-tree-id370 . -2) (undo-tree-id371 . -2) (undo-tree-id372 . -2) (t 26130 54767 859008 844000)) (26130 54767 819674 292000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t ws-butler-chg chg)) . -6022) (undo-tree-id392 . -1) 6023) nil (26130 54811 782203 788000) 0 nil])
nil
([nil nil ((6022 . 6023)) nil (26130 54811 782192 306000) 0 nil])
([nil nil ((6500 . 6516) (#("            " 0 12 (fontified nil)) . 6500) (6518 . 6519)) nil (26130 54811 782185 251000) 0 nil])
([nil nil ((6023 . 6026)) nil (26130 54811 782177 603000) 0 nil])
([nil nil ((6026 . 6028)) nil (26130 54811 782171 158000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -6023) (undo-tree-id387 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -6024) (undo-tree-id388 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -6025) (undo-tree-id389 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-constant-face)) . -6026) (undo-tree-id390 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6027) (undo-tree-id391 . -1) 6028) nil (26130 54811 782159 288000) 0 nil])
([nil nil ((6023 . 6039)) nil (26130 54811 782094 603000) 0 nil])
([nil nil ((#("<div className=\"VotePage-Button\"
            onClick={(event)=>setState({...state, 'page': 'home', 'vote':null})}>
            {locales.back[state.locale]}
                </div>" 0 1 (fontified t) 1 5 (fontified t) 5 10 (fontified t) 10 11 (fontified t) 11 14 (fontified t) 14 15 (fontified t) 15 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 25 (fontified t face font-lock-string-face) 25 32 (fontified t face font-lock-string-face) 32 33 (fontified t) 33 34 (fontified t) 34 45 (fontified t) 45 46 (fontified t) 46 49 (fontified t) 49 55 (fontified t) 55 83 (fontified t) 83 84 (fontified t face font-lock-string-face) 84 88 (fontified t face font-lock-string-face) 88 89 (fontified t face font-lock-string-face) 89 91 (fontified t) 91 92 (fontified t face font-lock-string-face) 92 96 (fontified t face font-lock-string-face) 96 97 (fontified t face font-lock-string-face) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t face font-lock-string-face) 100 104 (fontified t face font-lock-string-face) 104 105 (fontified t face font-lock-string-face) 105 106 (fontified t) 106 110 (fontified t face font-lock-constant-face) 110 115 (fontified t) 115 127 (fontified t) 127 128 (fontified t) 128 156 (fontified t) 156 172 (fontified t) 172 173 (fontified t) 173 178 (fontified t)) . -6360) (undo-tree-id393 . -178) (undo-tree-id394 . -178) 6538 (t 26130 54811 822798 56000)) nil (26130 54849 527125 557000) 0 nil])
([nil nil ((5760 . 5769) (t 26130 54849 570617 163000)) nil (26130 54985 85638 810000) 0 nil])
([nil nil ((5769 . 5790)) nil (26130 54985 85632 106000) 0 nil])
([nil nil ((5790 . 5791)) nil (26130 54985 85626 273000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg chg)) . -5789) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (#(">" 0 1 (fontified t ws-butler-chg chg)) . -5790) (undo-tree-id419 . -1) (undo-tree-id420 . -1) 5791) nil (26130 54996 644460 231000) 0 nil])
([nil nil ((#("player.on('ended',()" 0 10 (fontified t) 10 17 (fontified t face font-lock-string-face) 17 20 (fontified t)) . -5769) (undo-tree-id451 . -20) (undo-tree-id452 . -20) (undo-tree-id453 . -20) 5789) nil (26130 55004 123854 877000) 0 nil] [nil nil ((5789 . 5793)) ((#("=>{}" 0 3 (fontified t) 3 4 (fontified t)) . 5789) (undo-tree-id432 . -3)) (26130 54996 484712 329000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . -5789) (undo-tree-id444 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -5790) (undo-tree-id445 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -5791) (undo-tree-id446 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -5792) (undo-tree-id447 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -5793) (undo-tree-id448 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -5794) (undo-tree-id449 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -5795) (undo-tree-id450 . -1) 5796) nil (26130 55004 123721 544000) 0 nil])
([nil nil ((#("setState({...state, 'seeHome': true})" 0 20 (fontified t) 20 29 (fontified t face font-lock-string-face) 29 31 (fontified t) 31 35 (fontified t face font-lock-constant-face) 35 36 (fontified t) 36 37 (fontified t)) . 5841) (undo-tree-id414 . -37) (undo-tree-id415 . -37) 5878) ((nil ws-butler-chg delete 5878 . 5879) (5841 . 5878)) (26130 54996 453270 942000) 0 nil])
([nil nil ((5789 . 5791)) nil (26130 55004 123655 730000) 0 nil])
([nil nil ((#("player.on('ended',()=>{}" 0 10 (fontified t) 10 17 (fontified t face font-lock-string-face) 17 23 (fontified t) 23 24 (fontified t)) . -5769) (undo-tree-id427 . -24) (undo-tree-id428 . -9) (undo-tree-id429 . -24) (undo-tree-id430 . -23) (undo-tree-id431 . -24) 5793) ((nil ws-butler-chg delete 5793 . 5794) (5769 . 5793)) (26130 54996 452803 93000) 0 nil] [nil nil ((5792 . 5801)) ((#("
        " 0 1 (fontified t) 1 9 (fontified t ws-butler-chg chg)) . 5792) (undo-tree-id423 . -9) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -9)) (26130 54991 940068 775000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5790) (undo-tree-id443 . -1) 5791) nil (26130 55004 123641 896000) 0 nil])
nil
([nil nil ((5793 . 5805) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 5793) (undo-tree-id410 . -8) (undo-tree-id411 . -8) (undo-tree-id413 . -8) (nil rear-nonsticky nil 5837 . 5838) (nil fontified nil 5837 . 5838) (nil fontified nil 5836 . 5837) (nil fontified nil 5832 . 5836) (nil fontified nil 5830 . 5832) (nil fontified nil 5821 . 5830) (nil fontified nil 5801 . 5821) (5801 . 5838)) ((#("setState({...state, 'seeHome': true})" 0 1 (fontified nil) 1 20 (fontified nil) 20 29 (fontified nil face font-lock-string-face) 29 31 (fontified nil) 31 35 (fontified nil face font-lock-constant-face) 35 36 (fontified nil) 36 37 (fontified nil rear-nonsticky nil)) . 5801) (nil rear-nonsticky t 5837 . 5838) (5793 . 5801) (#("            " 0 12 (fontified t)) . 5793)) (26130 54990 570593 975000) 0 nil])
([nil nil ((5790 . 5794)) nil (26130 55004 123620 563000) 0 nil])
([nil nil ((#("player.on('dispose', ()=>{
            
            console.log('player will dispose');})" 0 10 (fontified t) 10 19 (fontified t face font-lock-string-face) 19 26 (fontified t) 26 27 (fontified t) 27 39 (fontified t) 39 40 (ws-butler-chg delete fontified t) 40 52 (fontified t) 52 53 (fontified t) 53 64 (fontified t) 64 85 (fontified t face font-lock-string-face) 85 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t)) . -5852) (undo-tree-id403 . -89) (undo-tree-id405 . -39) (undo-tree-id406 . -39) (undo-tree-id407 . -39) (undo-tree-id408 . -89) 5941) ((5852 . 5941)) (26130 54990 169708 41000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5791) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5792) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5793) (undo-tree-id442 . -1) 5794) nil (26130 55004 123602 748000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . 5844) (undo-tree-id395 . -8) (undo-tree-id396 . -8) (undo-tree-id398 . -8) (undo-tree-id399 . -8) (undo-tree-id400 . -8) (undo-tree-id401 . -8) 5852) ((5844 . 5852) (t 26130 54985 125968 172000)) (26130 54989 919428 164000) 0 nil])
([nil nil ((5791 . 5794)) nil (26130 55004 123537 471000) 0 nil])
([nil nil ((5844 . 5852) 5852 (t 26130 54985 125968 172000)) ((#("        " 0 8 (fontified t ws-butler-chg chg)) . 5844) (undo-tree-id421 . -8) (undo-tree-id422 . -8) (t 26130 54985 125968 172000)) (26130 54989 917801 561000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . 5761) (undo-tree-id433 . -8) (undo-tree-id434 . -8) (undo-tree-id435 . -8) 5794) nil (26130 55004 123513 156000) 0 nil])
nil
([nil nil ((5842 . 5843) (t 26130 55004 185876 987000)) nil (26130 55133 497478 766000) 0 nil])
([nil nil ((5843 . 5865)) nil (26130 55133 497472 25000) 0 nil])
([nil nil ((5865 . 5875)) nil (26130 55133 497466 395000) 0 nil])
([nil nil ((5875 . 5876)) nil (26130 55133 497460 729000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5865) (undo-tree-id467 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5866) (undo-tree-id468 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5867) (undo-tree-id469 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5868) (undo-tree-id470 . -1) (#("H" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5869) (undo-tree-id471 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5870) (undo-tree-id472 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5871) (undo-tree-id473 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5872) (undo-tree-id474 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5873) (undo-tree-id475 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5874) (undo-tree-id476 . -1) (#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5875) (undo-tree-id477 . -1) 5876) nil (26130 55133 497447 562000) 0 nil])
([nil nil ((#("
                     " 0 1 (fontified t ws-butler-chg chg) 1 22 (fontified t ws-butler-chg chg)) . 5843) (undo-tree-id464 . -22) (undo-tree-id465 . -22) (undo-tree-id466 . -22)) nil (26130 55133 497392 785000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg chg)) . -5842) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) 5843) nil (26130 55133 497374 100000) 0 nil])
([nil nil ((6187 . 6188) (6239 . 6240)) nil (26130 55133 497355 785000) 0 nil])
([nil nil ((6241 . 6282)) nil (26130 55133 497349 340000) 0 nil])
([nil nil ((6282 . 6287)) nil (26130 55133 497343 618000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -6283) (undo-tree-id457 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -6284) (undo-tree-id458 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -6285) (undo-tree-id459 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -6286) (undo-tree-id460 . -1) 6287) nil (26130 55133 497334 192000) 0 nil])
([nil nil ((6290 . 6295) (6282 . 6283) (6283 . 6289)) nil (26130 55133 497309 285000) 0 nil])
([nil nil ((6295 . 6336)) nil (26130 55133 497302 100000) 0 nil])
([nil nil ((6336 . 6340)) nil (26130 55133 497296 415000) 0 nil])
([nil nil ((6349 . 6354) (6336 . 6337) (6340 . 6348)) nil (26130 55133 497289 878000) 0 nil])
([nil nil ((6354 . 6395)) nil (26130 55133 497282 174000) 0 nil])
([nil nil ((6397 . 6399) (6395 . 6396) (6395 . 6396)) nil (26130 55133 497275 711000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -6396) (undo-tree-id454 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -6397) (undo-tree-id455 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -6398) (undo-tree-id456 . -1) 6399) nil (26130 55133 497264 359000) 0 nil])
([nil nil ((6396 . 6399)) nil (26130 55133 497218 341000) 0 nil])
([nil nil ((6399 . 6412)) nil (26130 55133 497200 860000) 0 nil])
([nil nil ((#("
                                         'seeHome': false" 0 1 (fontified t) 1 42 (fontified t) 42 51 (fontified t face font-lock-string-face) 51 53 (fontified t) 53 58 (fontified t face font-lock-constant-face)) . 6354) (undo-tree-id484 . -58) (undo-tree-id485 . -58) (undo-tree-id486 . -58) (undo-tree-id487 . -58) (t 26130 55133 537258 520000)) nil (26130 55136 967922 551000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6353) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) 6354) nil (26130 55136 967888 662000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -5466) (undo-tree-id488 . -1) (#("r" 0 1 (fontified t)) . -5467) (undo-tree-id489 . -1) (#("u" 0 1 (fontified t face font-lock-constant-face)) . -5468) (undo-tree-id490 . -1) 5469 (t 26130 55137 9241 927000)) nil (26130 55191 879393 47000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg delete)) . 5466)) nil (26130 55191 879349 66000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg delete)) . 5466) (5467 . 5468) 5466) nil (26130 55191 879341 270000) 0 nil])
([nil nil ((5467 . 5468)) nil (26130 55191 879333 436000) 0 nil])
([nil nil ((5468 . 5469)) nil (26130 55191 879327 510000) 0 nil])
([nil nil ((5469 . 5470)) nil (26130 55191 879320 918000) 0 nil])
([nil nil ((5470 . 5471)) nil (26130 55191 879303 492000) 0 nil])
([nil nil ((5471 . 5472) (t 26130 55191 924979 533000)) nil (26130 55193 972521 862000) 0 nil])
([nil nil ((#("        style={{'width':'100%'}}
" 0 16 (fontified t) 16 23 (fontified t face font-lock-string-face) 23 24 (fontified t) 24 30 (fontified t face font-lock-string-face) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t)) . 5069) (undo-tree-id495 . -32) (t 26130 55194 20969 520000)) nil (26130 55721 603633 869000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5068) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1)) nil (26130 55721 603599 184000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg delete)) . 5068) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 5068) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 5068) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 5068) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 5068) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 5068) (#(" " 0 1 (fontified t ws-butler-chg delete)) . 5068)) nil (26130 55722 208508 93000) 0 nil])
([nil nil ((5064 . 5068)) nil (26130 55739 263015 178000) 0 nil] [nil nil ((#("<" 0 1 (fontified t)) . 5064) (5065 . 5066) 5064) ((#(" " 0 1 (fontified nil ws-butler-chg chg)) . 5065) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (5064 . 5065)) (26130 55721 604123 71000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5066) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5067) (undo-tree-id503 . -1) (undo-tree-id504 . -1) 5068) nil (26130 55739 262996 678000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 5065) (5066 . 5067) 5065) ((#(" " 0 1 (fontified nil ws-butler-chg chg)) . 5066) (undo-tree-id496 . -1) (5065 . 5066)) (26130 55721 603515 610000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -5427) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (#("a" 0 1 (fontified t)) . -5428) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (#("l" 0 1 (fontified t)) . -5429) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (#("s" 0 1 (fontified t face font-lock-constant-face)) . -5430) (undo-tree-id514 . -1) 5431 (t 26130 55739 306455 598000)) nil (26130 55765 171922 457000) 0 nil])
nil
([nil nil ((5427 . 5430)) nil (26130 55765 171837 846000) 0 nil])
([nil nil ((5678 . 5691) (t 26130 55765 214362 841000)) nil (26130 56002 770982 812000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5727 . 5728) (nil fontified nil 5727 . 5728) (nil fontified nil 5726 . 5727) (nil fontified nil 5722 . 5726) (nil fontified nil 5720 . 5722) (nil fontified nil 5711 . 5720) (nil fontified nil 5691 . 5711) (5691 . 5728)) nil (26130 56024 998368 347000) 0 nil] [nil nil ((nil rear-nonsticky nil 5727 . 5728) (nil fontified nil 5727 . 5728) (nil fontified nil 5726 . 5727) (nil fontified nil 5722 . 5726) (nil fontified nil 5720 . 5722) (nil fontified nil 5711 . 5720) (nil fontified nil 5691 . 5711) (5691 . 5728)) ((#("setState({...state, 'seeHome': true})" 0 20 (fontified nil) 20 29 (fontified nil face font-lock-string-face) 29 31 (fontified nil) 31 32 (ws-butler-chg chg fontified nil face font-lock-constant-face) 32 33 (ws-butler-chg chg fontified nil face font-lock-constant-face) 33 34 (ws-butler-chg chg fontified nil face font-lock-constant-face) 34 35 (ws-butler-chg chg fontified nil face font-lock-constant-face) 35 36 (fontified nil) 36 37 (fontified nil rear-nonsticky nil)) . 5691) (undo-tree-id542 . -31) (undo-tree-id543 . -35) (undo-tree-id544 . -36) (nil rear-nonsticky t 5727 . 5728)) (26130 56001 966230 367000) 0 nil])
([nil nil ((#("
            console.log('player ready');" 0 1 (fontified t) 1 13 (fontified t) 13 14 (fontified t) 14 25 (fontified t) 25 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 41 (fontified t)) . 5728) (undo-tree-id557 . -41) (undo-tree-id558 . -13) (undo-tree-id559 . -41) (undo-tree-id560 . -41)) nil (26130 56024 998355 329000) 0 nil])
([nil nil ((#("console.log('player ready');})" 0 1 (fontified t) 1 12 (fontified t) 12 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 29 (fontified t) 29 30 (fontified t)) . -5741) (undo-tree-id527 . -30) (undo-tree-id528 . -30) 5771) ((5741 . 5771)) (26130 56001 606811 537000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -5721) (undo-tree-id553 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -5722) (undo-tree-id554 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t)) . -5723) (undo-tree-id555 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t face font-lock-constant-face)) . -5724) (undo-tree-id556 . -1) 5725) nil (26130 56024 998330 810000) 0 nil])
([nil nil ((#("console.log('player will dispose');})" 0 1 (fontified t) 1 12 (fontified t) 12 13 (fontified t face font-lock-string-face) 13 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t)) . 5838)) ((5838 . 5875)) (26130 56001 247349 301000) 0 nil])
([nil nil ((5721 . 5723)) nil (26130 56024 998306 644000) 0 nil])
([nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 5825) (undo-tree-id523 . -13) (undo-tree-id525 . -13) (undo-tree-id526 . -13)) ((5825 . 5838)) (26130 56000 860994 375000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t)) . -5721) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -5722) (undo-tree-id552 . -1) 5723) nil (26130 56024 998297 607000) 0 nil])
([nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 5728) (undo-tree-id519 . -13) (undo-tree-id520 . -13) (undo-tree-id521 . -13) (undo-tree-id522 . -13)) ((5728 . 5741)) (26130 56000 463376 734000) 0 nil])
([nil nil ((5721 . 5727)) nil (26130 56024 998273 162000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5729)) ((5729 . 5730)) (26130 56000 305207 770000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t)) . -5726) (undo-tree-id548 . -1) 5727) nil (26130 56024 998265 292000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -5722) (undo-tree-id515 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t)) . -5723) (undo-tree-id516 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -5724) (undo-tree-id517 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-constant-face)) . -5725) (undo-tree-id518 . -1) 5726) ((5722 . 5726)) (26130 56000 154084 204000) 0 nil])
([nil nil ((#("
            console.log('player will dispose');" 0 1 (fontified t) 1 13 (fontified t) 13 14 (fontified t) 14 25 (fontified t) 25 26 (fontified t face font-lock-string-face) 26 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 48 (fontified t)) . 5815) (undo-tree-id545 . -48) (undo-tree-id546 . -48) (undo-tree-id547 . -48)) nil (26130 56024 998244 292000) 0 nil])
([nil nil ((5722 . 5727)) ((#("false" 0 5 (fontified t face font-lock-constant-face)) . 5722) (t 26130 55980 521546 606000)) (26130 56000 77768 638000) 0 nil])
([nil nil ((5483 . 5492) (t 26130 56025 45369 418000)) nil (26130 56041 588557 936000) 0 nil])
([nil nil ((5767 . 5772) (5730 . 5742) (#("        " 0 1 (fontified nil) 1 8 (fontified nil)) . 5730) (undo-tree-id529 . -8) (5762 . 5763) (t 26130 55980 521546 606000)) ((#(")" 0 1 (fontified nil ws-butler-chg chg)) . 5762) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (nil ws-butler-chg delete 5738 . 5739) (5730 . 5738) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 5730) (#(")))))" 0 4 (fontified t ws-butler-chg chg) 4 5 (fontified t ws-butler-chg chg js--pend (nil 0 function 5117 ("VideoPage") 6641))) . 5767) (undo-tree-id537 . -5) (undo-tree-id538 . -5) (undo-tree-id539 . -5) (undo-tree-id540 . -5) (undo-tree-id541 . -5)) (26130 56000 76260 218000) 0 nil])
([nil nil ((5492 . 5504)) nil (26130 56041 588538 603000) 0 nil])
nil
([nil nil ((5836 . 5845) (t 26130 56041 629302 809000)) nil (26130 56294 732090 877000) 0 nil])
([nil nil ((5845 . 5848)) nil (26130 56294 732084 136000) 0 nil])
([nil nil ((5837 . 5849) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 5837) 5848) nil (26130 56294 732077 44000) 0 nil])
([nil nil ((5852 . 5858)) nil (26130 56294 732069 488000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5857) (undo-tree-id562 . -1) 5858) nil (26130 56294 732062 395000) 0 nil])
([nil nil ((5857 . 5865)) nil (26130 56294 732050 636000) 0 nil])
([nil nil ((5865 . 5879)) nil (26130 56294 732044 951000) 0 nil])
([nil nil ((5878 . 5882)) nil (26130 56294 732039 266000) 0 nil])
([nil nil ((5882 . 5889)) nil (26130 56294 732033 581000) 0 nil])
([nil nil ((5881 . 5894)) nil (26130 56294 732027 729000) 0 nil])
([nil nil ((5883 . 5895) (#("                " 0 16 (fontified nil ws-butler-chg chg)) . 5882) (5882 . 5898) (5882 . 5883) (#("            " 0 12 (fontified t ws-butler-chg chg)) . 5882) (undo-tree-id561 . -12) 5894) nil (26130 56294 732018 488000) 0 nil])
([nil nil ((5882 . 5898)) nil (26130 56294 731979 859000) 0 nil])
([nil nil ((#("               " 0 15 (ws-butler-chg chg fontified nil)) . -5999) (#("               " 0 15 (ws-butler-chg chg fontified nil)) . -5960) (nil rear-nonsticky nil 6046 . 6047) (nil fontified nil 6046 . 6047) (nil fontified nil 6045 . 6046) (nil fontified nil 6041 . 6045) (nil fontified nil 6040 . 6041) (nil fontified nil 6037 . 6040) (nil fontified nil 6029 . 6037) (nil fontified nil 6004 . 6029) (nil fontified nil 6003 . 6004) (nil fontified nil 5988 . 6003) (nil fontified nil 5986 . 5988) (nil fontified nil 5982 . 5986) (nil fontified nil 5981 . 5982) (nil fontified nil 5975 . 5981) (nil fontified nil 5953 . 5975) (nil fontified nil 5934 . 5953) (nil fontified nil 5932 . 5934) (nil fontified nil 5931 . 5932) (nil fontified nil 5927 . 5931) (nil fontified nil 5926 . 5927) (nil fontified nil 5924 . 5926) (nil fontified nil 5923 . 5924) (nil fontified nil 5919 . 5923) (nil fontified nil 5918 . 5919) (nil fontified nil 5910 . 5918) (nil fontified nil 5898 . 5910) (5898 . 6047)) nil (26130 56294 731956 748000) 0 nil])
([nil nil ((#("width: '2rem',
                    height: '2rem'," 0 7 (fontified t) 7 13 (face font-lock-string-face fontified t) 13 43 (fontified t) 43 49 (face font-lock-string-face fontified t) 49 50 (fontified t)) . 10906) (undo-tree-id3 . -50) (undo-tree-id4 . -50) 10956 (t 26130 56294 780252 283000)) nil (26133 29549 106168 299000) 0 nil])
([nil nil ((10750 . 10753)) nil (26133 29575 833746 246000) 0 nil] [nil nil ((#("{backgroundImage: `url(${HomeImage})`,
                    backgroundSize: 'contain',
                    backgroundPosition: 'center',
                    
                    backgroundRepeat: 'no-repeat',
                   }" 0 18 (fontified t) 18 37 (face font-lock-string-face fontified t) 37 58 (fontified t) 58 75 (fontified t) 75 84 (face font-lock-string-face fontified t) 84 86 (fontified t) 86 126 (fontified t) 126 134 (face font-lock-string-face fontified t) 134 136 (fontified t) 136 156 (fontified t) 156 157 (ws-butler-chg delete fontified t) 157 195 (fontified t) 195 206 (face font-lock-string-face fontified t) 206 228 (fontified t)) . -10750) (undo-tree-id0 . -228) (undo-tree-id1 . -156) (undo-tree-id2 . -228) 10978) ((nil ws-butler-chg delete 10978 . 10979) (10750 . 10978)) (26133 29549 56506 247000) 0 nil])
([nil nil ((10753 . 10754)) nil (26133 29575 833739 746000) 0 nil])
([nil nil ((10750 . 10753)) ((#("s))" 0 3 (ws-butler-chg chg fontified t)) . 10750) (undo-tree-id5 . -3) (undo-tree-id6 . -2) (undo-tree-id7 . -3)) (26133 29549 56169 249000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -10749) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -10750) (undo-tree-id20 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -10751) (undo-tree-id21 . -1) (#("y" 0 1 (ws-butler-chg chg fontified t)) . -10752) (undo-tree-id22 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -10753) (undo-tree-id23 . -1) 10754) nil (26133 29575 833729 468000) 0 nil])
nil
([nil nil ((10749 . 10750)) nil (26133 29575 833693 895000) 0 nil])
([nil nil ((#("P" 0 1 (ws-butler-chg chg fontified t)) . -10749) (undo-tree-id16 . -1) 10750) nil (26133 29575 833685 950000) 0 nil])
([nil nil ((10749 . 10760)) nil (26133 29575 833569 969000) 0 nil])
([nil nil ((10760 . 10767)) nil (26133 29575 833563 525000) 0 nil])
([nil nil ((#("a" 0 1 (ws-butler-chg chg fontified t)) . -10765) (undo-tree-id14 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t)) . -10766) (undo-tree-id15 . -1) 10767) nil (26133 29575 833555 136000) 0 nil])
([nil nil ((10765 . 10771)) nil (26133 29575 833538 229000) 0 nil])
([nil nil ((10771 . 10791)) nil (26133 29575 833531 673000) 0 nil])
([nil nil ((10773 . 10792) (#("                   " 0 19 (ws-butler-chg chg fontified nil)) . 10772) (10772 . 10791) (10772 . 10773) (#("                   " 0 19 (ws-butler-chg chg fontified t)) . 10772) (undo-tree-id12 . -19) (undo-tree-id13 . -19) 10791) nil (26133 29575 833523 25000) 0 nil])
([nil nil ((10772 . 10791)) nil (26133 29575 833504 99000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil ws-butler-chg chg)) . -10825) (nil rear-nonsticky nil 10840 . 10841) (nil fontified nil 10840 . 10841) (nil fontified nil 10834 . 10840) (nil fontified nil 10804 . 10834) (nil fontified nil 10798 . 10804) (nil fontified nil 10791 . 10798) (10791 . 10841)) nil (26133 29575 833495 914000) 0 nil])
([nil nil ((#("{backgroundImage: `url(${HomeImage})`,
                    backgroundSize: 'contain',
                    backgroundPosition: 'center',
                    
                    backgroundRepeat: 'no-repeat',
                   }" 0 1 (fontified t ws-butler-chg delete) 1 18 (fontified t) 18 37 (face font-lock-string-face fontified t) 37 39 (fontified t) 39 58 (fontified t) 58 75 (fontified t) 75 84 (face font-lock-string-face fontified t) 84 86 (fontified t) 86 126 (fontified t) 126 134 (face font-lock-string-face fontified t) 134 136 (fontified t) 136 156 (fontified t) 156 157 (fontified t ws-butler-chg delete) 157 195 (fontified t) 195 206 (face font-lock-string-face fontified t) 206 228 (fontified t)) . -10860) (undo-tree-id8 . -228) (undo-tree-id9 . -156) (undo-tree-id10 . -228) (undo-tree-id11 . -208) 11088) nil (26133 29575 833473 951000) 0 nil])
([nil nil ((10749 . 10750) (t 26133 29575 878144 394000)) nil (26133 29593 781125 639000) 0 nil])
([nil nil ((10862 . 10863)) nil (26133 29593 781118 379000) 0 nil])
([nil nil ((#("{" 0 1 (ws-butler-chg chg fontified t)) . -10862) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 10863) nil (26133 29593 781110 639000) 0 nil])
([nil nil ((10862 . 10863)) nil (26133 29593 781094 731000) 0 nil])
([nil nil ((#("{" 0 1 (ws-butler-chg chg fontified t)) . -10862) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 10863) nil (26133 29593 781085 454000) 0 nil])
([nil nil ((10862 . 10863)) nil (26133 29593 781034 361000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -10749) (undo-tree-id28 . -1) 10750 (t 26133 29593 826069 247000)) nil (26133 29794 220644 369000) 0 nil])
([nil nil ((10749 . 10750)) nil (26133 29805 39017 704000) 0 nil] [nil nil ((10749 . 10750) (t 26133 29596 74059 831000)) ((#("{" 0 1 (fontified t)) . 10749) (t 26133 29598 78051 437000)) (26133 29792 794979 932000) 0 nil])
([nil nil ((10900 . 10902)) nil (26133 29805 39011 352000) 0 nil])
([nil nil ((10900 . 10918) (t 26133 29598 78051 437000)) ((#(" className=\"header" 0 1 (ws-butler-chg chg fontified t) 1 11 (ws-butler-chg chg fontified t) 11 12 (face font-lock-string-face ws-butler-chg chg fontified t) 12 13 (face font-lock-string-face ws-butler-chg chg fontified t) 13 14 (face font-lock-string-face ws-butler-chg chg fontified t) 14 15 (face font-lock-string-face ws-butler-chg chg fontified t) 15 16 (face font-lock-string-face ws-butler-chg chg fontified t) 16 17 (face font-lock-string-face ws-butler-chg chg fontified t) 17 18 (face font-lock-string-face ws-butler-chg chg fontified t)) . 10900) (undo-tree-id39 . -12) (undo-tree-id40 . -18) (undo-tree-id41 . -12) (undo-tree-id42 . -18) (undo-tree-id43 . -18)) (26133 29791 679261 948000) 0 nil] [nil nil ((10750 . 10751) (t 26133 29598 78051 437000)) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 10750)) (26133 29609 884731 375000) 0 nil])
([nil nil ((10902 . 10912)) nil (26133 29805 39005 74000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -10912) (undo-tree-id29 . -1) (#("e" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -10913) (undo-tree-id30 . -1) (#("a" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -10914) (undo-tree-id31 . -1) (#("d" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -10915) (undo-tree-id32 . -1) (#("e" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -10916) (undo-tree-id33 . -1) (#("r" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -10917) (undo-tree-id34 . -1) 10918) ((10913 . 10918) (nil ws-butler-chg delete 10913 . 10914) (10912 . 10913)) (26133 29789 639649 375000) 0 nil])
nil
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -10910) (undo-tree-id49 . -1) (#("=" 0 1 (ws-butler-chg chg fontified t)) . -10911) (undo-tree-id50 . -1) 10912) nil (26133 29805 38996 667000) 0 nil])
([nil nil ((10912 . 10928)) ((#("Header-HeroText\"" 0 16 (face font-lock-string-face ws-butler-chg chg fontified t)) . 10912) (undo-tree-id35 . -14) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3)) (26133 29789 485351 358000) 0 nil])
([nil nil ((10910 . 10913)) nil (26133 29805 38979 482000) 0 nil])
([nil nil ((10915 . 10916)) ((#("
" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . 10915)) (26133 29789 484941 619000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -10911) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("\"" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -10912) (undo-tree-id47 . -1) (undo-tree-id48 . -1) 10913) nil (26133 29805 38968 204000) 0 nil])
nil
([nil nil ((10911 . 10928)) nil (26133 29805 38905 260000) 0 nil])
([nil nil ((9030 . 9043) (t 26133 29805 109181 334000)) nil (26133 34896 737814 706000) 0 nil])
([nil nil ((9043 . 9048)) nil (26133 34896 737806 799000) 0 nil])
([nil nil ((9176 . 9189)) nil (26133 34896 737799 614000) 0 nil])
([nil nil ((9189 . 9195)) nil (26133 34896 737782 355000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -9008) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("{" 0 1 (fontified t)) . -9009) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("{" 0 1 (fontified t)) . -9010) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -9011) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -9012) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -9013) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -9014) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -9015) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -9016) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -9017) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -9018) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -9019) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#(":" 0 1 (fontified t)) . -9020) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -9021) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (#("f" 0 1 (face font-lock-string-face fontified t)) . -9022) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -9023) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -9024) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("x" 0 1 (face font-lock-string-face fontified t)) . -9025) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -9026) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("}" 0 1 (fontified t)) . -9027) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (#("}" 0 1 (fontified t)) . -9028) (undo-tree-id175 . -1) 9029 (t 26133 34896 848714 242000)) nil (26133 34977 548556 707000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -9002) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("s" 0 1 (fontified t)) . -9003) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("t" 0 1 (fontified t)) . -9004) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("y" 0 1 (fontified t)) . -9005) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#("l" 0 1 (fontified t)) . -9006) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("e" 0 1 (fontified t)) . -9007) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) 9008) nil (26133 34977 548319 319000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face fontified t)) . -8985) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -8986) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("f" 0 1 (face font-lock-string-face fontified t)) . -8987) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("l" 0 1 (face font-lock-string-face fontified t)) . -8988) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -8989) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("x" 0 1 (face font-lock-string-face fontified t)) . -8990) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("-" 0 1 (face font-lock-string-face fontified t)) . -8991) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -8992) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -8993) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -8994) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -8995) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -8996) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -8997) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -8998) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -8999) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -9000) (undo-tree-id96 . -1) 9001) nil (26133 34977 548220 949000) 0 nil])
([nil nil ((8985 . 8986)) nil (26133 35062 913541 836000) 0 nil])
([nil nil ((10488 . 10498) (t 26133 34977 600335 946000)) nil (26133 35083 138152 993000) 0 nil] [nil nil ((9026 . 9027) (t 26133 34977 600335 946000)) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 9026) (undo-tree-id176 . -1)) (26133 35062 912582 729000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -10494) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#("r" 0 1 (fontified t)) . -10495) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (#("(" 0 1 (fontified t)) . -10496) (undo-tree-id215 . -1) 10497 (t 26133 35083 207841 741000)) nil (26133 35095 180811 838000) 0 nil])
nil
([nil nil ((#(")" 0 1 (ws-butler-chg delete fontified t)) . 10494) (undo-tree-id207 . -1) (undo-tree-id208 . -1)) nil (26133 35095 180776 320000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -10488) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("t" 0 1 (fontified t)) . -10489) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (#("o" 0 1 (fontified t)) . -10490) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("U" 0 1 (fontified t)) . -10491) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#("p" 0 1 (fontified t)) . -10492) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("p" 0 1 (fontified t)) . -10493) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) 10494) nil (26133 35117 83327 105000) 0 nil])
([nil nil ((10488 . 10489) (t 26133 35095 231785 507000)) nil (26133 35125 572912 986000) 0 nil] [nil nil ((10488 . 10489) (t 26133 35095 231785 507000)) ((#(")" 0 1 (ws-butler-chg chg fontified t)) . 10488) (undo-tree-id223 . -1) (undo-tree-id224 . -1)) (26133 35116 895215 299000) 0 nil])
([nil nil ((10489 . 10491)) nil (26133 35125 572906 246000) 0 nil])
([nil nil ((10455 . 10456)) ((#("(" 0 1 (ws-butler-chg chg fontified t)) . 10455)) (26133 35116 829537 828000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t)) . -10490) (undo-tree-id229 . -1) 10491) nil (26133 35125 572898 672000) 0 nil])
([nil nil ((10490 . 10494)) ((#(".toU" 0 4 (ws-butler-chg chg fontified t)) . 10490) (undo-tree-id216 . -4) (undo-tree-id217 . -1) (undo-tree-id218 . -4) (undo-tree-id219 . -1) (undo-tree-id220 . -4) (undo-tree-id221 . -1) (undo-tree-id222 . -4)) (26133 35116 829191 756000) 0 nil])
([nil nil ((10490 . 10500)) nil (26133 35125 572886 801000) 0 nil])
nil
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -10496) (undo-tree-id225 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -10497) (undo-tree-id226 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -10498) (undo-tree-id227 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -10499) (undo-tree-id228 . -1) 10500) nil (26133 35125 572864 690000) 0 nil])
([nil nil ((10496 . 10502)) nil (26133 35125 572768 654000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-string-face)) . -2324) (undo-tree-id5 . -1) (#("," 0 1 (fontified t face font-lock-string-face)) . -2325) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2326) (undo-tree-id7 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -2327) (undo-tree-id8 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -2328) (undo-tree-id9 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -2329) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2330) (undo-tree-id11 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -2331) (undo-tree-id12 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -2332) (undo-tree-id13 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2333) (undo-tree-id14 . -1) (#("S" 0 1 (fontified t face font-lock-string-face)) . -2334) (undo-tree-id15 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -2335) (undo-tree-id16 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -2336) (undo-tree-id17 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -2337) (undo-tree-id18 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -2338) (undo-tree-id19 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -2339) (undo-tree-id20 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -2340) (undo-tree-id21 . -1) 2341 (t 26133 35125 619643 416000)) nil (26133 48045 376658 201000) 0 nil])
([nil nil ((2324 . 2325)) nil (26133 48045 376584 387000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -2324) (undo-tree-id4 . -1) 2325) nil (26133 48045 376576 590000) 0 nil])
([nil nil ((2324 . 2326)) nil (26133 48045 376565 590000) 0 nil])
([nil nil ((#("Dinner, but in Spanish" 0 22 (fontified t face font-lock-string-face)) . -2383) (undo-tree-id2 . -22) (undo-tree-id3 . -22) 2405) nil (26133 48045 376557 628000) 0 nil])
([nil nil ((2383 . 2389)) nil (26133 48045 376541 979000) 0 nil])
([nil nil ((#("Disaster, but in Spanish" 0 24 (fontified t face font-lock-string-face)) . -2452) (undo-tree-id0 . -24) (undo-tree-id1 . -24) 2476) nil (26133 48045 376532 887000) 0 nil])
([nil nil ((2452 . 2460)) nil (26133 48045 376457 758000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -2627) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2628) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -2629) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -2630) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -2631) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2632) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -2633) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -2634) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2635) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("S" 0 1 (fontified t face font-lock-string-face)) . -2636) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -2637) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -2638) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -2639) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -2640) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -2641) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -2642) (undo-tree-id79 . -1) 2643 (t 26133 48045 426501 820000)) nil (26133 48073 186302 808000) 0 nil])
([nil nil ((#("This is duel subtext" 0 20 (fontified t face font-lock-string-face)) . -3463) (undo-tree-id81 . -20) (undo-tree-id82 . -20) 3483 (t 26133 48073 234382 194000)) nil (26133 48142 915062 824000) 0 nil])
([nil nil ((3463 . 3484)) nil (26133 48142 915045 620000) 0 nil])
([nil nil ((3484 . 3488)) nil (26133 48142 915038 546000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3487) (undo-tree-id80 . -1) 3488) nil (26133 48142 915029 454000) 0 nil])
([nil nil ((3487 . 3491)) nil (26133 48142 914994 343000) 0 nil])
([nil nil ((3491 . 3501)) nil (26133 48148 205094 613000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-string-face)) . -3600) (undo-tree-id112 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3601) (undo-tree-id113 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3602) (undo-tree-id114 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3603) (undo-tree-id115 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3604) (undo-tree-id116 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3605) (undo-tree-id117 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3606) (undo-tree-id118 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -3607) (undo-tree-id119 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3608) (undo-tree-id120 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -3609) (undo-tree-id121 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -3610) (undo-tree-id122 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3611) (undo-tree-id123 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3612) (undo-tree-id124 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3613) (undo-tree-id125 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3614) (undo-tree-id126 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -3615) (undo-tree-id127 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -3616) (undo-tree-id128 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3617) (undo-tree-id129 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3618) (undo-tree-id130 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -3619) (undo-tree-id131 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3620) (undo-tree-id132 . -1) 3621 (t 26133 48147 122063 9000)) nil (26133 48190 157580 329000) 0 nil] [nil nil ((3674 . 3675) (#(" " 0 1 (fontified t face font-lock-string-face)) . 3674) 3675 (t 26133 48147 122063 9000)) ((nil ws-butler-chg delete 3675 . 3676) (3674 . 3675) (#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 3674) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1)) (26133 48148 203819 804000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -3599) (undo-tree-id111 . -1) 3600) nil (26133 48190 157425 978000) 0 nil])
nil
([nil nil ((3599 . 3613)) nil (26133 48190 157415 33000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3612) (undo-tree-id110 . -1) 3613) nil (26133 48190 157407 534000) 0 nil])
([nil nil ((3612 . 3633)) nil (26133 48190 157396 330000) 0 nil])
([nil nil ((3633 . 3650)) nil (26133 48190 157389 830000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -3755) (undo-tree-id89 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3756) (undo-tree-id90 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3757) (undo-tree-id91 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3758) (undo-tree-id92 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3759) (undo-tree-id93 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -3760) (undo-tree-id94 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3761) (undo-tree-id95 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3762) (undo-tree-id96 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -3763) (undo-tree-id97 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3764) (undo-tree-id98 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3765) (undo-tree-id99 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3766) (undo-tree-id100 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3767) (undo-tree-id101 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3768) (undo-tree-id102 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3769) (undo-tree-id103 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -3770) (undo-tree-id104 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -3771) (undo-tree-id105 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3772) (undo-tree-id106 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3773) (undo-tree-id107 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -3774) (undo-tree-id108 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3775) (undo-tree-id109 . -1) 3776) nil (26133 48190 157370 256000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -3752) (undo-tree-id86 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -3753) (undo-tree-id87 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3754) (undo-tree-id88 . -1) 3755) nil (26133 48190 157274 627000) 0 nil])
([nil nil ((3752 . 3773)) nil (26133 48190 157231 534000) 0 nil])
([nil nil ((3773 . 3780)) nil (26133 48190 157224 386000) 0 nil])
([nil nil ((3780 . 3791)) nil (26133 48190 157206 349000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . -3028) (undo-tree-id145 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -3029) (undo-tree-id146 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3030) (undo-tree-id147 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -3031) (undo-tree-id148 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -3032) (undo-tree-id149 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -3033) (undo-tree-id150 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -3034) (undo-tree-id151 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3035) (undo-tree-id152 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3036) (undo-tree-id153 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3037) (undo-tree-id154 . -1) (#("D" 0 1 (fontified t face font-lock-string-face)) . -3038) (undo-tree-id155 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3039) (undo-tree-id156 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -3040) (undo-tree-id157 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -3041) (undo-tree-id158 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3042) (undo-tree-id159 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3043) (undo-tree-id160 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3044) (undo-tree-id161 . -1) (#("T" 0 1 (fontified t face font-lock-string-face)) . -3045) (undo-tree-id162 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3046) (undo-tree-id163 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -3047) (undo-tree-id164 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3048) (undo-tree-id165 . -1) 3049 (t 26133 48190 205876 82000)) nil (26133 48257 774967 3000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face font-lock-string-face)) . -3018) (undo-tree-id135 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -3019) (undo-tree-id136 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3020) (undo-tree-id137 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3021) (undo-tree-id138 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3022) (undo-tree-id139 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3023) (undo-tree-id140 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3024) (undo-tree-id141 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3025) (undo-tree-id142 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -3026) (undo-tree-id143 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -3027) (undo-tree-id144 . -1) 3028) nil (26133 48257 774823 615000) 0 nil])
([nil nil ((3018 . 3038)) nil (26133 48257 774762 356000) 0 nil])
([nil nil ((3038 . 3059)) nil (26133 48257 774756 319000) 0 nil])
([nil nil ((3059 . 3066)) nil (26133 48257 774750 300000) 0 nil])
([nil nil ((3067 . 3083)) nil (26133 48257 774744 4000) 0 nil])
([nil nil ((3083 . 3104)) nil (26133 48257 774737 967000) 0 nil])
([nil nil ((3104 . 3125)) nil (26133 48257 774731 893000) 0 nil])
([nil nil ((3125 . 3127)) nil (26133 48257 774725 745000) 0 nil])
([nil nil ((3127 . 3148)) nil (26133 48257 774719 523000) 0 nil])
([nil nil ((3148 . 3150)) nil (26133 48257 774713 801000) 0 nil])
([nil nil ((3116 . 3118)) nil (26133 48257 774707 615000) 0 nil])
([nil nil ((3118 . 3119)) nil (26133 48257 774701 689000) 0 nil])
([nil nil ((3130 . 3132)) nil (26133 48257 774695 578000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3131) (undo-tree-id134 . -1) 3132) nil (26133 48257 774687 856000) 0 nil])
([nil nil ((3131 . 3133)) nil (26133 48257 774675 560000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3132) (undo-tree-id133 . -1) 3133) nil (26133 48257 774666 134000) 0 nil])
([nil nil ((3132 . 3134)) nil (26133 48257 774620 819000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t face font-lock-string-face)) . -3130) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -3131) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3132) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#(">" 0 1 (fontified t face font-lock-string-face)) . -3133) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) 3134 (t 26133 48257 833581 599000)) nil (26133 48270 751718 933000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t face font-lock-string-face)) . -3116) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3117) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#(">" 0 1 (fontified t face font-lock-string-face)) . -3118) (undo-tree-id172 . -1) 3119) nil (26133 48270 751603 45000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-string-face)) . -3258) (undo-tree-id215 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -3259) (undo-tree-id216 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -3260) (undo-tree-id217 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -3261) (undo-tree-id218 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -3262) (undo-tree-id219 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3263) (undo-tree-id220 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3264) (undo-tree-id221 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3265) (undo-tree-id222 . -1) (#("D" 0 1 (fontified t face font-lock-string-face)) . -3266) (undo-tree-id223 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3267) (undo-tree-id224 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3268) (undo-tree-id225 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -3269) (undo-tree-id226 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3270) (undo-tree-id227 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3271) (undo-tree-id228 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3272) (undo-tree-id229 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -3273) (undo-tree-id230 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3274) (undo-tree-id231 . -1) (#("T" 0 1 (fontified t face font-lock-string-face)) . -3275) (undo-tree-id232 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3276) (undo-tree-id233 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -3277) (undo-tree-id234 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3278) (undo-tree-id235 . -1) 3279 (t 26133 48270 801524 993000)) nil (26133 48347 411453 49000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t face font-lock-string-face)) . -3246) (undo-tree-id203 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -3247) (undo-tree-id204 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3248) (undo-tree-id205 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3249) (undo-tree-id206 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3250) (undo-tree-id207 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3251) (undo-tree-id208 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3252) (undo-tree-id209 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3253) (undo-tree-id210 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -3254) (undo-tree-id211 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -3255) (undo-tree-id212 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -3256) (undo-tree-id213 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -3257) (undo-tree-id214 . -1) 3258) nil (26133 48347 411357 105000) 0 nil])
([nil nil ((3246 . 3252)) nil (26133 48347 411302 587000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3249) (undo-tree-id200 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3250) (undo-tree-id201 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3251) (undo-tree-id202 . -1) 3252) nil (26133 48347 411293 13000) 0 nil])
([nil nil ((3249 . 3262)) nil (26133 48347 411237 328000) 0 nil])
([nil nil ((3262 . 3265)) nil (26133 48347 411230 865000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -3264) (undo-tree-id199 . -1) 3265) nil (26133 48347 411222 143000) 0 nil])
([nil nil ((3264 . 3285)) nil (26133 48347 411187 50000) 0 nil])
([nil nil ((3285 . 3300)) nil (26133 48347 411180 532000) 0 nil])
([nil nil ((3300 . 3321)) nil (26133 48347 411174 421000) 0 nil])
([nil nil ((3321 . 3323)) nil (26133 48347 411167 976000) 0 nil])
([nil nil ((3324 . 3325)) nil (26133 48347 411161 939000) 0 nil])
([nil nil ((3325 . 3346)) nil (26133 48347 411155 680000) 0 nil])
([nil nil ((3346 . 3365)) nil (26133 48347 411148 921000) 0 nil])
([nil nil ((3365 . 3381)) nil (26133 48347 411132 124000) 0 nil])
([nil nil ((6049 . 6050) (t 26133 48347 465189 536000)) nil (26133 52015 176862 130000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg chg fontified t)) . -6049) (undo-tree-id1 . -1) 6050) nil (26133 52015 176853 963000) 0 nil])
([nil nil ((6038 . 6050) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 6037) (6037 . 6049) (6037 . 6038) (#("            " 0 12 (fontified t)) . 6037) (undo-tree-id0 . -12) 6049) nil (26133 52015 176838 19000) 0 nil])
([nil nil ((6242 . 6251)) nil (26133 52015 176776 926000) 0 nil])
([nil nil ((6251 . 6253)) nil (26133 52015 176771 37000) 0 nil])
([nil nil ((6037 . 6038)) nil (26133 52015 176763 815000) 0 nil])
([nil nil ((6038 . 6039)) nil (26133 52015 176747 593000) 0 nil])
([nil nil ((#("})" 0 2 (face font-lock-comment-face fontified t)) . 6242) (undo-tree-id2 . -2) (undo-tree-id3 . -2) 6244 (t 26133 52015 228740 249000)) nil (26133 52035 790863 120000) 0 nil])
([nil nil ((6246 . 6258) (#("        " 0 8 (face font-lock-comment-delimiter-face fontified nil)) . -6243) (6253 . 6254)) nil (26133 52038 488836 922000) 0 nil] [nil nil ((6242 . 6255)) ((#("
            " 0 13 (face font-lock-comment-face fontified t ws-butler-chg chg)) . 6242) (undo-tree-id4 . -13) (undo-tree-id5 . -13) (undo-tree-id6 . -1)) (26133 52035 790560 881000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified nil)) . -6254) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -4) (undo-tree-id10 . -4) (nil rear-nonsticky nil 6259 . 6260) (nil fontified nil 6258 . 6260) (6258 . 6260)) nil (26133 52038 488819 366000) 0 nil])
nil
([nil nil ((6495 . 6508) (6413 . 6414) (6493 . 6494) (t 26133 52038 544660 174000)) nil (26133 52329 546277 132000) 0 nil])
([nil nil ((#("             " 0 13 (ws-butler-chg chg fontified t)) . 6495) (undo-tree-id60 . -13) 6508) nil (26133 52329 546267 2000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -1261) (undo-tree-id55 . -1) (#("a" 0 1 (fontified t)) . -1262) (undo-tree-id56 . -1) (#("l" 0 1 (fontified t)) . -1263) (undo-tree-id57 . -1) (#("s" 0 1 (fontified t)) . -1264) (undo-tree-id58 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -1265) (undo-tree-id59 . -1) 1266) nil (26133 52329 546251 613000) 0 nil])
([nil nil ((1261 . 1265)) nil (26133 52329 546222 984000) 0 nil])
([nil nil ((6494 . 6507)) nil (26133 52329 546216 743000) 0 nil])
([nil nil ((6507 . 6509)) nil (26133 52329 546210 576000) 0 nil])
([nil nil ((6508 . 6511)) nil (26133 52329 546204 336000) 0 nil])
([nil nil ((6512 . 6517)) nil (26133 52329 546197 817000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -6515) (undo-tree-id53 . -1) (#("v" 0 1 (fontified t ws-butler-chg chg)) . -6516) (undo-tree-id54 . -1) 6517) nil (26133 52329 546189 780000) 0 nil])
([nil nil ((6515 . 6517)) nil (26133 52329 546173 928000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -6516) (undo-tree-id52 . -1) 6517) nil (26133 52329 546166 188000) 0 nil])
([nil nil ((6516 . 6518)) nil (26133 52329 546154 40000) 0 nil])
([nil nil ((6511 . 6516)) nil (26133 52329 546147 780000) 0 nil])
([nil nil ((6516 . 6522)) nil (26133 52329 546141 392000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -6517) (undo-tree-id47 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -6518) (undo-tree-id48 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -6519) (undo-tree-id49 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6520) (undo-tree-id50 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -6521) (undo-tree-id51 . -1) 6522) nil (26133 52329 546130 169000) 0 nil])
([nil nil ((6517 . 6524)) nil (26133 52329 546061 447000) 0 nil])
([nil nil ((6523 . 6537)) nil (26133 52329 546055 577000) 0 nil])
([nil nil ((6539 . 6540)) nil (26133 52329 546049 262000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -6539) (undo-tree-id46 . -1) 6540) nil (26133 52329 546041 910000) 0 nil])
([nil nil ((#("</div>" 0 1 (fontified t ws-butler-chg delete) 1 6 (fontified t ws-butler-chg chg)) . 6539) (undo-tree-id44 . -6) (undo-tree-id45 . -6) 6545) nil (26133 52329 546029 133000) 0 nil])
([nil nil ((6851 . 6864) (6842 . 6843) (6849 . 6850)) nil (26133 52329 546013 244000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6869 . 6870) (nil fontified nil 6865 . 6870) (nil fontified nil 6864 . 6865) (6864 . 6870)) nil (26133 52329 546004 540000) 0 nil])
([nil nil ((6539 . 6553)) nil (26133 52329 545995 411000) 0 nil])
([nil nil ((6553 . 6555)) nil (26133 52329 545989 96000) 0 nil])
([nil nil ((6554 . 6556)) nil (26133 52329 545982 633000) 0 nil])
([nil nil ((6557 . 6559)) nil (26133 52329 545976 151000) 0 nil])
([nil nil ((6558 . 6561)) nil (26133 52329 545969 670000) 0 nil])
([nil nil ((6557 . 6572)) nil (26133 52329 545962 911000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t ws-butler-chg chg)) . -6557) (undo-tree-id29 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -6558) (undo-tree-id30 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6559) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6560) (undo-tree-id32 . -1) (#("R" 0 1 (fontified t ws-butler-chg chg)) . -6561) (undo-tree-id33 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6562) (undo-tree-id34 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -6563) (undo-tree-id35 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -6564) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6565) (undo-tree-id37 . -1) (#("A" 0 1 (fontified t ws-butler-chg chg)) . -6566) (undo-tree-id38 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -6567) (undo-tree-id39 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -6568) (undo-tree-id40 . -1) (#("w" 0 1 (fontified t ws-butler-chg chg)) . -6569) (undo-tree-id41 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6570) (undo-tree-id42 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -6571) (undo-tree-id43 . -1) 6572) nil (26133 52329 545945 170000) 0 nil])
([nil nil ((6557 . 6567)) nil (26133 52329 545872 59000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg)) . -6558) (undo-tree-id20 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6559) (undo-tree-id21 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6560) (undo-tree-id22 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -6561) (undo-tree-id23 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6562) (undo-tree-id24 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -6563) (undo-tree-id25 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -6564) (undo-tree-id26 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -6565) (undo-tree-id27 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -6566) (undo-tree-id28 . -1) 6567) nil (26133 52329 545858 319000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -6557) (undo-tree-id19 . -1) 6558) nil (26133 52329 545809 671000) 0 nil])
([nil nil ((6557 . 6576)) nil (26133 52329 545797 726000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -6574) (undo-tree-id17 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -6575) (undo-tree-id18 . -1) 6576) nil (26133 52329 545789 652000) 0 nil])
([nil nil ((6574 . 6576)) nil (26133 52329 545772 763000) 0 nil])
([nil nil ((6581 . 6595)) nil (26133 52329 545766 393000) 0 nil])
([nil nil ((6595 . 6596)) nil (26133 52329 545760 189000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t ws-butler-chg chg)) . -6555) (undo-tree-id16 . -1) 6556) nil (26133 52329 545752 486000) 0 nil])
([nil nil ((6555 . 6556)) nil (26133 52329 545740 245000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t ws-butler-chg chg)) . 6579)) nil (26133 52329 545732 856000) 0 nil])
([nil nil ((6579 . 6580)) nil (26133 52329 545726 578000) 0 nil])
([nil nil ((6596 . 6598)) nil (26133 52329 545719 745000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t ws-butler-chg chg)) . -6596) (undo-tree-id14 . -1) (#("2" 0 1 (fontified t ws-butler-chg chg)) . -6597) (undo-tree-id15 . -1) 6598) nil (26133 52329 545710 726000) 0 nil])
([nil nil ((6596 . 6599)) nil (26133 52329 545693 856000) 0 nil])
([nil nil ((6599 . 6603)) nil (26133 52329 545687 134000) 0 nil])
([nil nil ((6599 . 6600)) nil (26133 52329 545680 838000) 0 nil])
([nil nil ((#("W" 0 1 (fontified t ws-butler-chg chg)) . -6599) (undo-tree-id13 . -1) 6600) nil (26133 52329 545672 616000) 0 nil])
([nil nil ((6599 . 6607)) nil (26133 52329 545660 541000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -6605) (undo-tree-id11 . -1) (#("t" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -6606) (undo-tree-id12 . -1) 6607) nil (26133 52329 545650 949000) 0 nil])
([nil nil ((6605 . 6626)) nil (26133 52329 545609 671000) 0 nil])
([nil nil ((6626 . 6629)) nil (26133 52329 545592 208000) 0 nil])
([nil nil ((6629 . 6630) (t 26133 52329 607600 158000)) nil (26133 52339 300039 653000) 0 nil])
([nil nil ((6599 . 6600)) nil (26133 52339 300031 172000) 0 nil])
([nil nil ((6606 . 6607)) nil (26133 53260 359202 595000) 0 nil])
([nil nil ((6636 . 6637)) nil (26133 53479 752581 198000) 0 nil] [nil nil ((6636 . 6637) (t 26133 52339 359563 75000)) ((#(">" 0 1 (fontified t)) . 6636) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1)) (26133 53260 100449 268000) 0 nil])
([nil nil ((#("             <div className='HomePage-Buttons flex-container row' style={{'display':'flex'}}>" 0 12 (fontified t) 12 13 (fontified t) 13 28 (fontified t) 28 52 (face font-lock-string-face fontified t) 52 65 (face font-lock-string-face fontified t) 65 74 (fontified t) 74 83 (face font-lock-string-face fontified t) 83 84 (fontified t) 84 86 (face font-lock-string-face fontified t) 86 90 (face font-lock-string-face fontified t) 90 93 (fontified t)) . -6400) (undo-tree-id150 . -93) (undo-tree-id151 . -13) (undo-tree-id152 . -93) 6493) nil (26133 53566 639383 134000) 0 nil] [nil nil ((11200 . 11220) ("                   " . 11200) (11165 . 11185) ("                   " . 11165) (6983 . 6984) (6876 . 6877) (6650 . 6651) (6230 . 6242) (6218 . 6220) (#("            " 0 12 (face font-lock-comment-face fontified t)) . -6187) (#("            " 0 12 (face font-lock-comment-face fontified t)) . -6160) (#("  " 0 2 (face font-lock-comment-face fontified t)) . -6110) (6061 . 6063) (6034 . 6046) (#("  " 0 2 (fontified t)) . -5263) 1) ((5263 . 5265) (#("            " 0 12 (fontified t)) . 6034) (#("  " 0 2 (face font-lock-comment-face fontified t)) . 6061) (6110 . 6112) (6160 . 6172) (6187 . 6199) (#("  " 0 2 (face font-lock-comment-face fontified t)) . 6218) (#("            " 0 12 (face font-lock-comment-delimiter-face fontified t)) . 6230) (#(" " 0 1 (face font-lock-string-face fontified t)) . 6650) (#(" " 0 1 (face font-lock-string-face fontified t)) . 6876) (#(" " 0 1 (face font-lock-string-face fontified t)) . 6983) (11165 . 11184) ("                    " . 11165) (11200 . 11219) ("                    " . 11200)) (26133 53479 388744 820000) 0 nil])
([nil nil ((#("
            <div className='Prompt-Button'
             onClick={(event)=>setState({...state, 'page': 'home',
                                         'vote':null,
                                         'seeHeader':true})}
            style={styler(locales.startOverImage[state.locale])}
             ></div>
             " 0 1 (fontified t) 1 9 (fontified t) 9 28 (fontified t) 28 29 (face font-lock-string-face fontified t) 29 42 (face font-lock-string-face fontified t) 42 43 (face font-lock-string-face fontified t) 43 44 (fontified t) 44 48 (fontified t) 48 95 (fontified t) 95 96 (face font-lock-string-face fontified t) 96 100 (face font-lock-string-face fontified t) 100 101 (face font-lock-string-face fontified t) 101 103 (fontified t) 103 104 (face font-lock-string-face fontified t) 104 108 (face font-lock-string-face fontified t) 108 109 (face font-lock-string-face fontified t) 109 111 (fontified t) 111 152 (fontified t) 152 153 (face font-lock-string-face fontified t) 153 157 (face font-lock-string-face fontified t) 157 158 (face font-lock-string-face fontified t) 158 159 (fontified t) 159 163 (face font-lock-constant-face fontified t) 163 206 (fontified t) 206 207 (face font-lock-string-face fontified t) 207 216 (face font-lock-string-face fontified t) 216 217 (face font-lock-string-face fontified t) 217 218 (fontified t) 218 222 (face font-lock-constant-face fontified t) 222 226 (fontified t) 226 264 (fontified t) 264 291 (fontified t) 291 303 (fontified t) 303 304 (fontified t) 304 311 (fontified t) 311 312 (fontified t) 312 325 (fontified t)) . -6637) (undo-tree-id61 . -325) (undo-tree-id63 . -325) (t 26133 52348 319528 931000)) ((6637 . 6962)) (26133 53259 914212 139000) 0 nil])
([nil nil ((#("             </div>" 0 13 (fontified t) 13 14 (fontified t) 14 18 (fontified t) 18 19 (fontified t rear-nonsticky t)) . -6856) (undo-tree-id147 . -19) (undo-tree-id148 . -19) (undo-tree-id149 . -19) 6875) nil (26133 53566 639360 875000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -6537) (undo-tree-id134 . -1) 6538 (t 26133 53283 739740 750000)) ((6537 . 6538)) (26133 53478 223613 400000) 0 nil])
([nil nil ((#("<div className='HomePage-Buttons flex-container row' style={{'display':'flex'}}>" 0 15 (fontified t) 15 52 (face font-lock-string-face fontified t) 52 61 (fontified t) 61 70 (face font-lock-string-face fontified t) 70 71 (fontified t) 71 73 (face font-lock-string-face fontified t) 73 77 (fontified t face font-lock-string-face) 77 80 (fontified t)) . 6413) (undo-tree-id77 . -80) (undo-tree-id78 . -80)) ((6413 . 6493)) (26133 53259 736918 953000) 0 nil] [nil nil ((6637 . 6639)) ((#("3)" 0 2 (ws-butler-chg chg fontified nil)) . 6637) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -2)) (26133 52368 777907 790000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6855) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) 6856) nil (26133 53566 639330 246000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6582 . 6583) (nil fontified nil 6581 . 6583) (nil fontified nil 6577 . 6581) (nil fontified nil 6575 . 6577) (nil fontified nil 6574 . 6575) (nil fontified nil 6565 . 6574) (nil fontified nil 6556 . 6565) (nil fontified nil 6543 . 6556) (nil fontified nil 6537 . 6543) (6537 . 6583)) ((#("flex-container row' style={{'display':'flex'}}" 0 6 (face font-lock-string-face fontified nil) 6 19 (face font-lock-string-face fontified nil) 19 28 (fontified nil) 28 37 (face font-lock-string-face fontified nil) 37 38 (fontified nil) 38 40 (face font-lock-string-face fontified nil) 40 44 (face font-lock-string-face fontified nil) 44 45 (fontified nil) 45 46 (fontified nil rear-nonsticky nil)) . 6537) (undo-tree-id138 . -45) (undo-tree-id139 . -46) (nil rear-nonsticky t 6582 . 6583)) (26133 53478 35447 154000) 0 nil])
([nil nil ((#("</div>" 0 6 (fontified t)) . -6576) (undo-tree-id75 . -6) (undo-tree-id76 . -6) 6582) ((6576 . 6582)) (26133 53259 576807 751000) 0 nil])
nil
([nil nil ((#("className='Prompt-Button'" 0 10 (fontified t) 10 11 (face font-lock-string-face fontified t) 11 24 (face font-lock-string-face fontified t) 24 25 (face font-lock-string-face fontified t)) . -6562) (undo-tree-id158 . -25) (undo-tree-id159 . -25) 6587 (t 26133 53566 698553 571000)) nil (26133 54178 91959 332000) 0 nil])
([nil nil ((#("<div className='HomePage-Buttons flex-container row' style={{'display':'flex'}}>" 0 15 (fontified t) 15 39 (face font-lock-string-face fontified t) 39 52 (face font-lock-string-face fontified t) 52 61 (fontified t) 61 70 (face font-lock-string-face fontified t) 70 71 (fontified t) 71 73 (face font-lock-string-face fontified t) 73 77 (face font-lock-string-face fontified t) 77 80 (fontified t)) . -6413) (undo-tree-id130 . -80) (undo-tree-id132 . -33) (undo-tree-id133 . -80) 6493) ((6413 . 6493)) (26133 53477 749622 873000) 0 nil])
([nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 6563) (undo-tree-id71 . -13) (undo-tree-id73 . -13) (undo-tree-id74 . -13)) ((6563 . 6576)) (26133 53259 427693 281000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6561) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) 6562) nil (26133 54178 91931 610000) 0 nil])
([nil nil ((#("             </div>" 0 12 (fontified t) 12 13 (fontified t) 13 19 (fontified t)) . -6936) (undo-tree-id128 . -19) (undo-tree-id129 . -19) 6955) ((6936 . 6955)) (26133 53477 490800 368000) 0 nil])
([nil nil ((6557 . 6571)) ((#("
             " 0 14 (fontified t)) . 6557)) (26133 53258 995467 549000) 0 nil])
([nil nil ((6561 . 6562) 6562 (t 26133 54178 151457 469000)) nil (26133 54287 799179 834000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6935) (undo-tree-id123 . -1) (undo-tree-id125 . -1) (undo-tree-id127 . -1)) ((6935 . 6936)) (26133 53477 286670 689000) 0 nil])
([nil nil ((#("
             " 0 1 (fontified t) 1 13 (fontified t) 13 14 (fontified t)) . 6399) (undo-tree-id67 . -14) (undo-tree-id69 . -14) (undo-tree-id70 . -14)) ((6399 . 6413)) (26133 53258 814882 711000) 0 nil])
([nil nil ((6544 . 6558) (t 26133 54178 151457 469000)) nil (26133 54287 799167 149000) 0 nil])
([nil nil ((#("             " 0 12 (fontified t) 12 13 (fontified t)) . -6400) (undo-tree-id115 . -13) (undo-tree-id117 . -13) (undo-tree-id119 . -13) (undo-tree-id121 . -13) (undo-tree-id122 . -13) 6413) ((6400 . 6413)) (26133 53477 108458 882000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -5942) (undo-tree-id79 . -1) (undo-tree-id81 . -1) (#("a" 0 1 (fontified t)) . -5943) (undo-tree-id82 . -1) (undo-tree-id84 . -1) (#("l" 0 1 (fontified t)) . -5944) (undo-tree-id85 . -1) (undo-tree-id87 . -1) (#("s" 0 1 (fontified t)) . -5945) (undo-tree-id88 . -1) (undo-tree-id90 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -5946) (undo-tree-id91 . -1) 5947 (t 26133 52669 830266 510000)) ((5942 . 5947)) (26133 53258 762019 950000) 0 nil])
([nil nil ((6558 . 6563)) nil (26133 54287 799156 94000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6399) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id107 . -1) (undo-tree-id109 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) 6400) ((6399 . 6400)) (26133 53476 937951 302000) 0 nil])
([nil nil ((5942 . 5946)) ((#("true" 0 4 (face font-lock-constant-face fontified t)) . 5942) (t 26133 52704 750125 953000)) (26133 53258 760572 753000) 0 nil])
([nil nil ((#("O" 0 1 (ws-butler-chg chg fontified t)) . -6562) (undo-tree-id182 . -1) 6563) nil (26133 54287 799145 20000) 0 nil])
([nil nil ((6443 . 6444) (t 26133 53444 175068 640000)) ((#(" " 0 1 (face font-lock-string-face fontified t)) . 6443) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (t 26133 53468 554966 259000)) (26133 53468 496072 488000) 0 nil])
([nil nil ((6300 . 6305) (t 26133 52704 750125 953000)) ((#(")))))" 0 1 (ws-butler-chg chg fontified t) 1 2 (js--pend (nil 0 function 5316 ("VideoPage") nil) ws-butler-chg chg fontified t) 2 5 (ws-butler-chg chg fontified t)) . 6300) (undo-tree-id92 . -5) (undo-tree-id93 . -2)) (26133 53258 759647 497000) 0 nil])
([nil nil ((6562 . 6566)) nil (26133 54287 799127 797000) 0 nil])
nil
nil
([nil nil ((6561 . 6563)) nil (26133 54287 799118 149000) 0 nil])
([nil nil ((6563 . 6568)) nil (26133 54287 799108 723000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -6564) (undo-tree-id178 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -6565) (undo-tree-id179 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t)) . -6566) (undo-tree-id180 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -6567) (undo-tree-id181 . -1) 6568) nil (26133 54287 799094 1000) 0 nil])
([nil nil ((6564 . 6581)) nil (26133 54287 799020 724000) 0 nil])
([nil nil ((6581 . 6602)) nil (26133 54287 799011 742000) 0 nil])
([nil nil ((6602 . 6605)) nil (26133 54287 799002 613000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face ws-butler-chg chg fontified t)) . -6603) (undo-tree-id176 . -1) (#("r" 0 1 (face font-lock-type-face ws-butler-chg chg fontified t)) . -6604) (undo-tree-id177 . -1) 6605) nil (26133 54287 798989 965000) 0 nil])
([nil nil ((6603 . 6610)) nil (26133 54287 798965 872000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-type-face ws-butler-chg chg fontified t)) . -6607) (undo-tree-id173 . -1) (#("e" 0 1 (face font-lock-type-face ws-butler-chg chg fontified t)) . -6608) (undo-tree-id174 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -6609) (undo-tree-id175 . -1) 6610) nil (26133 54287 798951 743000) 0 nil])
([nil nil ((6607 . 6617)) nil (26133 54287 798920 150000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -6614) (undo-tree-id170 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -6615) (undo-tree-id171 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -6616) (undo-tree-id172 . -1) 6617) nil (26133 54287 798905 576000) 0 nil])
([nil nil ((6614 . 6616)) nil (26133 54287 798874 150000) 0 nil])
([nil nil ((6616 . 6619)) nil (26133 54287 798864 688000) 0 nil])
([nil nil ((6562 . 6563)) nil (26133 54287 798855 188000) 0 nil])
([nil nil ((6464 . 6465)) nil (26133 54287 798845 651000) 0 nil])
([nil nil ((6484 . 6485)) nil (26133 54287 798836 391000) 0 nil])
([nil nil ((6622 . 6623)) nil (26133 54287 798826 558000) 0 nil])
([nil nil ((6622 . 6638)) nil (26133 54287 798817 77000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -6637) (undo-tree-id169 . -1) 6638) nil (26133 54287 798805 299000) 0 nil])
([nil nil ((6637 . 6651)) nil (26133 54287 798787 243000) 0 nil])
([nil nil ((6651 . 6655)) nil (26133 54287 798777 169000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -6654) (undo-tree-id168 . -1) 6655) nil (26133 54287 798765 3000) 0 nil])
([nil nil ((6654 . 6667)) nil (26133 54287 798747 947000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -6666) (undo-tree-id167 . -1) 6667) nil (26133 54287 798735 984000) 0 nil])
([nil nil ((6666 . 6683)) nil (26133 54287 798718 299000) 0 nil])
([nil nil ((6683 . 6704)) nil (26133 54287 798709 133000) 0 nil])
([nil nil ((6704 . 6725)) nil (26133 54287 798699 170000) 0 nil])
([nil nil ((6725 . 6728)) nil (26133 54287 798688 744000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -6722) (undo-tree-id161 . -1) (#("p" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -6723) (undo-tree-id162 . -1) (#("d" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -6724) (undo-tree-id163 . -1) (#("a" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -6725) (undo-tree-id164 . -1) (#("t" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -6726) (undo-tree-id165 . -1) (#("e" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -6727) (undo-tree-id166 . -1) 6728) nil (26133 54287 798670 781000) 0 nil])
([nil nil ((6722 . 6723)) nil (26133 54287 798616 522000) 0 nil])
([nil nil ((6723 . 6731)) nil (26133 54287 798605 855000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 6754) (undo-tree-id160 . -1) 6731) nil (26133 54287 798584 930000) 0 nil])
([nil nil ((4066 . 4071) (t 26133 54287 858929 883000)) nil (26133 54485 750010 540000) 0 nil])
([nil nil ((4071 . 4089)) nil (26133 54485 750003 152000) 0 nil])
([nil nil ((4088 . 4093)) nil (26133 54485 749996 892000) 0 nil])
([nil nil ((4093 . 4096)) nil (26133 54485 749990 355000) 0 nil])
([nil nil ((4373 . 4375)) nil (26133 54485 749984 41000) 0 nil])
([nil nil ((#("    \"startOverHero\":{\"en\": \"\"}" 0 4 (ws-butler-chg chg fontified t) 4 19 (face font-lock-string-face ws-butler-chg chg fontified t) 19 21 (ws-butler-chg chg fontified t) 21 25 (face font-lock-string-face ws-butler-chg chg fontified t) 25 27 (ws-butler-chg chg fontified t) 27 29 (face font-lock-string-face ws-butler-chg chg fontified t) 29 30 (ws-butler-chg chg fontified t)) . -4067) (undo-tree-id193 . -30) (undo-tree-id194 . -30) 4097) nil (26133 54485 749975 744000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -1261) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("r" 0 1 (fontified t)) . -1262) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("u" 0 1 (fontified t)) . -1263) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -1264) (undo-tree-id192 . -1) 1265) nil (26133 54485 749953 874000) 0 nil])
([nil nil ((1261 . 1266)) nil (26133 54485 749865 115000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -6041) (undo-tree-id200 . -1) 6042 (t 26133 54485 841998 205000)) nil (26133 54499 912707 225000) 0 nil])
([nil nil ((#("/" 0 1 (face font-lock-string-face syntax-table (7 . 47) fontified t)) . -6040) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) 6041) nil (26133 54499 912691 596000) 0 nil])
([nil nil ((#("*/" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t)) . -6244) (undo-tree-id195 . -2) (undo-tree-id196 . -2) 6246) nil (26133 55319 698797 803000) 0 nil])
([nil nil ((11286 . 11306) (11250 . 11270) (#("                   " 0 19 (fontified nil)) . 11250) (11284 . 11285) (t 26133 54500 1932 385000)) nil (26133 55339 859269 585000) 0 nil] [nil nil ((11306 . 11307) (t 26133 54500 1932 385000)) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 11306)) (26133 55319 697894 455000) 0 nil])
([nil nil ((11306 . 11314)) nil (26133 55339 859258 826000) 0 nil])
nil
([nil nil ((11314 . 11317)) nil (26133 55339 859252 215000) 0 nil])
([nil nil ((#("a" 0 1 (ws-butler-chg chg fontified t)) . -11316) (undo-tree-id205 . -1) 11317) nil (26133 55339 859243 993000) 0 nil])
([nil nil ((11316 . 11325)) nil (26133 55339 859231 807000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -11324) (undo-tree-id204 . -1) 11325) nil (26133 55339 859223 493000) 0 nil])
([nil nil ((11324 . 11327)) nil (26133 55339 859210 604000) 0 nil])
([nil nil ((11327 . 11348)) nil (26133 55339 859204 67000) 0 nil])
([nil nil ((11348 . 11351)) nil (26133 55339 859197 400000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg chg fontified t)) . -11349) (undo-tree-id202 . -1) (#("[" 0 1 (ws-butler-chg chg fontified t)) . -11350) (undo-tree-id203 . -1) 11351) nil (26133 55339 859187 678000) 0 nil])
([nil nil ((11349 . 11355)) nil (26133 55339 859138 623000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -11354) (undo-tree-id201 . -1) 11355) nil (26133 55339 859128 604000) 0 nil])
([nil nil ((11354 . 11359)) nil (26133 55339 859590 602000) 0 nil])
([nil nil ((#("." 0 1 (ws-butler-chg chg fontified t)) . -11358) (undo-tree-id220 . -1) 11359) nil (26133 55366 14743 795000) 0 nil] [nil nil ((11359 . 11380)) ((#("
                    " 0 21 (ws-butler-chg chg fontified t)) . 11359) (undo-tree-id206 . -21) (undo-tree-id207 . -21) (undo-tree-id208 . -1)) (26133 55339 859067 364000) 0 nil])
([nil nil ((11358 . 11359)) nil (26133 55366 14732 54000) 0 nil])
nil
([nil nil ((11359 . 11380)) nil (26133 55366 14725 906000) 0 nil])
([nil nil ((11380 . 11386)) nil (26133 55366 14719 535000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -11385) (undo-tree-id219 . -1) 11386) nil (26133 55366 14711 795000) 0 nil])
([nil nil ((11385 . 11387)) nil (26133 55366 14700 202000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t)) . -11386) (undo-tree-id218 . -1) 11387) nil (26133 55366 14692 406000) 0 nil])
([nil nil ((11386 . 11389)) nil (26133 55366 14680 721000) 0 nil])
([nil nil ((#("v" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -11388) (undo-tree-id217 . -1) 11389) nil (26133 55366 14672 684000) 0 nil])
([nil nil ((11388 . 11391)) nil (26133 55366 14661 73000) 0 nil])
([nil nil ((11391 . 11392)) nil (26133 55366 14654 702000) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t)) . -11391) (undo-tree-id216 . -1) 11392) nil (26133 55366 14646 684000) 0 nil])
([nil nil ((11391 . 11392)) nil (26133 55366 14635 110000) 0 nil])
([nil nil ((11689 . 11690)) nil (26133 55366 14628 665000) 0 nil])
([nil nil ((11690 . 11710)) nil (26133 55366 14622 202000) 0 nil])
([nil nil ((11691 . 11711) (#("                   " 0 19 (ws-butler-chg chg fontified nil)) . 11691) (undo-tree-id213 . -19) (undo-tree-id214 . -19) (undo-tree-id215 . -19) (nil rear-nonsticky nil 11795 . 11796) (nil fontified nil 11795 . 11796) (nil fontified nil 11790 . 11795) (nil fontified nil 11764 . 11790) (nil fontified nil 11762 . 11764) (nil fontified nil 11757 . 11762) (nil fontified nil 11732 . 11757) (nil fontified nil 11730 . 11732) (nil fontified nil 11720 . 11730) (nil fontified nil 11710 . 11720) (11710 . 11796)) nil (26133 55366 14612 258000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg)) . -11785) (undo-tree-id209 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -11786) (undo-tree-id210 . -1) (#("f" 0 1 (fontified t ws-butler-chg chg)) . -11787) (undo-tree-id211 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -11788) (undo-tree-id212 . -1) 11789) nil (26133 55366 14564 499000) 0 nil])
([nil nil ((11785 . 11790)) nil (26133 55366 14501 462000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-string-face fontified t)) . -4275) (undo-tree-id221 . -1) (#("0" 0 1 (face font-lock-string-face fontified t)) . -4276) (undo-tree-id222 . -1) 4277 (t 26133 55366 74016 327000)) nil (26133 55664 743952 634000) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 4275) (#("e" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 4275) (#("r" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 4275)) nil (26133 55664 743894 42000) 0 nil])
([nil nil ((4275 . 4279)) nil (26133 55664 743870 857000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -8572) (undo-tree-id239 . -1) 8573 (t 26133 55664 804689 958000)) nil (26133 56005 357432 171000) 0 nil])
([nil nil ((8572 . 8573) (t 26133 56008 974850 181000)) nil (26133 56017 686065 621000) 0 nil] [nil nil ((#("<br/>" 0 5 (fontified t)) . -9506) (undo-tree-id258 . -5) (undo-tree-id259 . -5) 9511) ((9506 . 9511)) (26133 56004 691108 411000) 0 nil] [nil nil ((#("<br/" 0 3 (fontified t) 3 4 (fontified t)) . 8568) (undo-tree-id233 . -4) (undo-tree-id235 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4)) ((8568 . 8572)) (26133 55986 763151 162000) 0 nil])
([nil nil ((#("
            <br/>" 0 1 (fontified t) 1 13 (fontified t) 13 18 (fontified t)) . 9494) (undo-tree-id260 . -18) (undo-tree-id261 . -13) (undo-tree-id262 . -13) (undo-tree-id263 . -13) (undo-tree-id264 . -18) (undo-tree-id265 . -18)) nil (26133 56017 686048 824000) 0 nil])
([nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 9493) (undo-tree-id251 . -13) (undo-tree-id253 . -13) (undo-tree-id254 . -13) (undo-tree-id255 . -13) (undo-tree-id256 . -13) (undo-tree-id257 . -13)) ((9493 . 9506) (t 26133 55998 558904 317000)) (26133 55998 495611 313000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -8555) (undo-tree-id230 . -1) (undo-tree-id232 . -1) 8556) ((nil ws-butler-chg delete 8556 . 8557) (8555 . 8556)) (26133 55985 949309 150000) 0 nil])
([nil nil ((#("width: '20%',
             height: '25vh'," 0 7 (fontified t) 7 12 (face font-lock-string-face fontified t) 12 14 (fontified t) 14 35 (fontified t) 35 36 (face font-lock-string-face fontified t) 36 40 (face font-lock-string-face fontified t) 40 41 (face font-lock-string-face fontified t) 41 42 (fontified t)) . -4239) (undo-tree-id275 . -42) (undo-tree-id276 . -40) (undo-tree-id277 . -42) (undo-tree-id278 . -14) 4281 (t 26133 56017 786804 488000)) nil (26133 56520 445102 901000) 0 nil])
nil
([nil nil ((#("            " 0 1 (ws-butler-chg delete fontified t) 1 12 (fontified t)) . -8555) (undo-tree-id223 . -12) (undo-tree-id225 . -12) (undo-tree-id227 . -12) (undo-tree-id229 . -12) 8567) ((8555 . 8567)) (26133 55985 572109 305000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4225) (undo-tree-id273 . -1) (undo-tree-id274 . -1) 4226) nil (26133 56520 445078 13000) 0 nil])
([nil nil ((#("<br/>" 0 5 (fontified t)) . -9489) (undo-tree-id247 . -5) (undo-tree-id249 . -5) 9494 (t 26133 55961 195099 667000)) ((9489 . 9494)) (26133 55985 194350 592000) 0 nil])
([nil nil ((#("             " 0 1 (ws-butler-chg delete fontified t) 1 13 (fontified t)) . -4225) (undo-tree-id266 . -13) (undo-tree-id267 . -13) (undo-tree-id268 . -13) (undo-tree-id269 . -13) (undo-tree-id270 . -13) (undo-tree-id271 . -13) (undo-tree-id272 . -13) 4238) nil (26133 56807 311362 216000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . 9477) (undo-tree-id240 . -12) (undo-tree-id241 . -12) (undo-tree-id243 . -12) (undo-tree-id244 . -12) (undo-tree-id245 . -12) 9489) ((9477 . 9489) (t 26133 55983 254984 109000)) (26133 55985 125300 600000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -7560) (undo-tree-id316 . -1) (#("r" 0 1 (fontified t)) . -7561) (undo-tree-id317 . -1) (#("g" 0 1 (fontified t)) . -7562) (undo-tree-id318 . -1) (#("i" 0 1 (fontified t)) . -7563) (undo-tree-id319 . -1) (#("n" 0 1 (fontified t)) . -7564) (undo-tree-id320 . -1) (#(":" 0 1 (fontified t)) . -7565) (undo-tree-id321 . -1) (#(" " 0 1 (fontified t)) . -7566) (undo-tree-id322 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -7567) (undo-tree-id323 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -7568) (undo-tree-id324 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -7569) (undo-tree-id325 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -7570) (undo-tree-id326 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -7571) (undo-tree-id327 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -7572) (undo-tree-id328 . -1) (#("," 0 1 (fontified t)) . -7573) (undo-tree-id329 . -1) (#(" " 0 1 (fontified t)) . -7574) (undo-tree-id330 . -1) 7575) nil (26133 56876 214733 838000) 0 nil] [nil nil ((#("margin: '1rem', width: '30%'" 0 2 (fontified t) 2 8 (fontified t) 8 9 (face font-lock-string-face fontified t) 9 13 (face font-lock-string-face fontified t) 13 14 (face font-lock-string-face fontified t) 14 23 (fontified t) 23 24 (face font-lock-string-face fontified t) 24 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t)) . -7559) (undo-tree-id305 . -28) (undo-tree-id306 . -28) 7587 (t 26133 56520 504314 785000)) ((nil ws-butler-chg delete 7587 . 7588) (7559 . 7587)) (26133 56806 924872 9000) 0 nil])
([nil nil ((9477 . 9489) 9489 (t 26133 55983 254984 109000)) ((#("            " 0 12 (ws-butler-chg chg fontified t)) . 9477) (undo-tree-id250 . -12) (t 26133 55983 254984 109000)) (26133 55985 123312 648000) 0 nil])
([nil nil ((7560 . 7566)) nil (26133 56876 214597 524000) 0 nil])
([nil nil ((#("}" 0 1 (ws-butler-chg delete fontified t)) . 7559)) ((7559 . 7560)) (26133 56806 509499 216000) 0 nil])
nil
([nil nil ((7566 . 7575)) nil (26133 56876 214591 487000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -7557) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (#(" " 0 1 (fontified t)) . -7558) (undo-tree-id303 . -1) (undo-tree-id304 . -1) 7559) ((7557 . 7559)) (26133 56806 332549 119000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -7574) (undo-tree-id315 . -1) 7575) nil (26133 56876 214584 6000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -7514) (undo-tree-id297 . -1) (#("." 0 1 (fontified t)) . -7515) (undo-tree-id298 . -1) (#("." 0 1 (fontified t)) . -7516) (undo-tree-id299 . -1) (#("." 0 1 (fontified t)) . -7517) (undo-tree-id300 . -1) 7518) ((7514 . 7518)) (26133 56806 164322 630000) 0 nil])
([nil nil ((7574 . 7575)) nil (26133 56876 214572 469000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -7587) (undo-tree-id293 . -1) (#("." 0 1 (fontified t)) . -7588) (undo-tree-id294 . -1) (#("." 0 1 (fontified t)) . -7589) (undo-tree-id295 . -1) (#("." 0 1 (fontified t)) . -7590) (undo-tree-id296 . -1) 7591) ((7587 . 7591)) (26133 56805 983874 254000) 0 nil])
([nil nil ((7575 . 7580)) nil (26133 56876 214566 413000) 0 nil])
([nil nil ((#(", margin: '1rem', width: '30%'}" 0 10 (fontified t) 10 11 (face font-lock-string-face fontified t) 11 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 25 (fontified t) 25 26 (face font-lock-string-face fontified t) 26 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (fontified t)) . -7628) (undo-tree-id291 . -31) (undo-tree-id292 . -31) 7659) ((7628 . 7659)) (26133 56805 826859 786000) 0 nil])
([nil nil ((#("h" 0 1 (ws-butler-chg delete fontified t)) . 7580) (#("t" 0 1 (ws-butler-chg delete fontified t)) . 7580) (#("d" 0 1 (ws-butler-chg delete fontified t)) . 7580) (#("i" 0 1 (ws-butler-chg delete fontified t)) . 7580) (#("w" 0 1 (ws-butler-chg delete fontified t)) . 7580)) nil (26133 56876 214557 895000) 0 nil])
([nil nil ((#(", margin: '1rem', width: '30%'}" 0 10 (fontified t) 10 11 (face font-lock-string-face fontified t) 11 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 25 (fontified t) 25 26 (face font-lock-string-face fontified t) 26 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (fontified t)) . -7710) (undo-tree-id289 . -31) (undo-tree-id290 . -31) 7741) ((7710 . 7741)) (26133 56805 639984 829000) 0 nil])
([nil nil ((7580 . 7586)) nil (26133 56876 214548 561000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -7663) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (#("." 0 1 (fontified t)) . -7664) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (#("." 0 1 (fontified t)) . -7665) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (#("." 0 1 (fontified t)) . -7666) (undo-tree-id288 . -1) 7667) ((7663 . 7667) (t 26133 56581 20025 833000)) (26133 56580 917951 430000) 0 nil])
([nil nil ((#("3" 0 1 (face font-lock-string-face fontified t)) . -7589) (undo-tree-id312 . -1) (#("0" 0 1 (face font-lock-string-face fontified t)) . -7590) (undo-tree-id313 . -1) (#("%" 0 1 (face font-lock-string-face fontified t)) . -7591) (undo-tree-id314 . -1) 7592) nil (26133 56876 214539 469000) 0 nil])
nil
([nil nil ((7589 . 7590)) nil (26133 56876 214518 432000) 0 nil])
([nil nil ((7590 . 7593)) nil (26133 56876 214511 987000) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -7592) (undo-tree-id311 . -1) 7593) nil (26133 56876 214503 543000) 0 nil])
([nil nil ((7592 . 7593)) nil (26133 56876 214491 432000) 0 nil])
([nil nil ((#(", margin: '1rem', width: '30%'});" 0 10 (fontified t) 10 11 (face font-lock-string-face fontified t) 11 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 25 (fontified t) 25 26 (face font-lock-string-face fontified t) 26 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t)) . -7674) (undo-tree-id309 . -33) (undo-tree-id310 . -33) 7707) nil (26133 56876 214482 914000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7713 . 7714) (nil fontified nil 7713 . 7714) (nil fontified nil 7712 . 7713) (nil fontified nil 7711 . 7712) (nil fontified nil 7710 . 7711) (nil fontified nil 7706 . 7710) (nil fontified nil 7705 . 7706) (nil fontified nil 7704 . 7705) (nil fontified nil 7703 . 7704) (nil fontified nil 7696 . 7703) (nil fontified nil 7691 . 7696) (nil fontified nil 7677 . 7691) (nil fontified nil 7676 . 7677) (nil fontified nil 7675 . 7676) (nil fontified nil 7674 . 7675) (7674 . 7714)) nil (26133 56876 214463 969000) 0 nil])
([nil nil ((#(", margin: '1rem', width: '30%'})" 0 10 (fontified t) 10 11 (face font-lock-string-face fontified t) 11 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 25 (fontified t) 25 26 (face font-lock-string-face fontified t) 26 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (fontified t) 31 32 (fontified t)) . -7794) (undo-tree-id307 . -32) (undo-tree-id308 . -32) 7826) nil (26133 56876 214442 469000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7833 . 7834) (nil fontified nil 7833 . 7834) (nil fontified nil 7832 . 7833) (nil fontified nil 7831 . 7832) (nil fontified nil 7830 . 7831) (nil fontified nil 7826 . 7830) (nil fontified nil 7825 . 7826) (nil fontified nil 7824 . 7825) (nil fontified nil 7823 . 7824) (nil fontified nil 7816 . 7823) (nil fontified nil 7811 . 7816) (nil fontified nil 7797 . 7811) (nil fontified nil 7796 . 7797) (nil fontified nil 7795 . 7796) (nil fontified nil 7794 . 7795) (7794 . 7834)) nil (26133 56876 214385 747000) 0 nil])
([nil nil ((#("b" 0 1 (ws-butler-chg delete fontified t)) . 7565) (#("-" 0 1 (fontified t)) . 7565) (t 26133 56876 718632 522000)) nil (26133 56893 450361 999000) 0 nil])
([nil nil ((7565 . 7566)) nil (26133 56893 450354 73000) 0 nil])
([nil nil ((#("b" 0 1 (ws-butler-chg delete fontified t)) . 7681) (#("-" 0 1 (fontified t)) . 7681)) nil (26133 56893 450346 332000) 0 nil])
([nil nil ((7681 . 7682)) nil (26133 56893 450339 17000) 0 nil])
([nil nil ((#("b" 0 1 (ws-butler-chg delete fontified t)) . 7800) (#("-" 0 1 (fontified t)) . 7800)) nil (26133 56893 450329 499000) 0 nil])
([nil nil ((7800 . 7801)) nil (26133 56893 450310 332000) 0 nil])
([nil nil ((7578 . 7579) (t 26133 56893 514554 107000)) nil (26133 56903 670704 832000) 0 nil])
([nil nil ((7695 . 7696)) nil (26133 56903 670696 332000) 0 nil])
([nil nil ((7815 . 7816)) nil (26133 56903 670678 332000) 0 nil])
([nil nil ((#("
     \"seeHome\": false" 0 1 (fontified t) 1 6 (fontified t) 6 15 (face font-lock-string-face fontified t) 15 17 (fontified t) 17 22 (face font-lock-constant-face fontified t)) . 1244) (undo-tree-id336 . -22) (undo-tree-id337 . -22) (undo-tree-id338 . -22) (t 26133 56903 730506 442000)) nil (26133 58329 986703 863000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -1243) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) 1244) nil (26133 58402 601711 128000) 0 nil] [nil nil ((#("," 0 1 (fontified t)) . -1243) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) 1244) ((nil ws-butler-chg delete 1244 . 1245) (1243 . 1244)) (26133 58329 986251 531000) 0 nil])
([nil nil ((4265 . 4286)) nil (26133 58402 601692 517000) 0 nil])
nil
([nil nil ((4286 . 4290)) nil (26133 58402 601686 202000) 0 nil])
([nil nil ((4289 . 4290)) nil (26133 58402 601679 962000) 0 nil])
([nil nil ((#("}" 0 1 (ws-butler-chg chg fontified t)) . -4289) (undo-tree-id381 . -1) 4290) nil (26133 58402 601672 591000) 0 nil])
([nil nil ((4289 . 4291)) nil (26133 58402 601661 147000) 0 nil])
([nil nil ((#("{" 0 1 (ws-butler-chg chg fontified t)) . -4290) (undo-tree-id380 . -1) 4291) nil (26133 58402 601653 536000) 0 nil])
([nil nil ((4290 . 4291)) nil (26133 58402 601642 17000) 0 nil])
([nil nil ((4290 . 4293)) nil (26133 58402 601635 332000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -4292) (undo-tree-id379 . -1) 4293) nil (26133 58402 601627 795000) 0 nil])
([nil nil ((4292 . 4305)) nil (26133 58402 601616 481000) 0 nil])
([nil nil ((4307 . 4309)) nil (26133 58402 601610 129000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified nil)) . 4309) (4309 . 4313) (4308 . 4310)) nil (26133 58402 601603 277000) 0 nil])
([nil nil ((4309 . 4313)) nil (26133 58402 601595 221000) 0 nil])
([nil nil ((4313 . 4322)) nil (26133 58402 601589 73000) 0 nil])
([nil nil ((#("<" 0 1 (ws-butler-chg chg fontified t)) . -4321) (undo-tree-id378 . -1) 4322) nil (26133 58402 601581 610000) 0 nil])
([nil nil ((4320 . 4325)) nil (26133 58402 601569 610000) 0 nil])
([nil nil ((4322 . 4334)) nil (26133 58402 876165 365000) 0 nil])
([nil nil ((#("player.on('waiting', ()=> {
            setState({...state, 'seeHome': false})})

        " 0 10 (fontified t) 10 19 (face font-lock-string-face fontified t) 19 20 (fontified t) 20 28 (fontified t) 28 60 (fontified t) 60 69 (face font-lock-string-face fontified t) 69 71 (fontified t) 71 72 (face font-lock-constant-face fontified t) 72 73 (face font-lock-constant-face fontified t) 73 74 (face font-lock-constant-face fontified t) 74 75 (face font-lock-constant-face fontified t) 75 76 (face font-lock-constant-face fontified t) 76 77 (fontified t) 77 81 (fontified t) 81 90 (fontified t)) . -5870) (undo-tree-id404 . -90) (undo-tree-id405 . -90) 5960) nil (26133 58457 399726 768000) 0 nil] [nil nil ((4324 . 4335) (#("           " 0 11 (ws-butler-chg chg fontified nil)) . 4323) (4323 . 4334) (4323 . 4324) (#("           " 0 11 (ws-butler-chg chg fontified t)) . 4323) (undo-tree-id376 . -11) (undo-tree-id377 . -11) 4334) ((nil ws-butler-chg delete 4334 . 4335) (4323 . 4334) (#("
" 0 1 (fontified nil)) . 4323) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (#("           " 0 11 (ws-butler-chg chg fontified nil)) . 4323) (undo-tree-id387 . -11) (undo-tree-id388 . -11) (nil ws-butler-chg delete 4334 . 4335) (4323 . 4334) (#("           " 0 11 (ws-butler-chg chg fontified t)) . 4324)) (26133 58402 603154 381000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -5927) (undo-tree-id389 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -5928) (undo-tree-id390 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -5929) (undo-tree-id391 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -5930) (undo-tree-id392 . -1) (#("H" 0 1 (face font-lock-string-face fontified t)) . -5931) (undo-tree-id393 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -5932) (undo-tree-id394 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -5933) (undo-tree-id395 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -5934) (undo-tree-id396 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -5935) (undo-tree-id397 . -1) (#(":" 0 1 (fontified t)) . -5936) (undo-tree-id398 . -1) (#(" " 0 1 (fontified t)) . -5937) (undo-tree-id399 . -1) (#("t" 0 1 (fontified t)) . -5938) (undo-tree-id400 . -1) (#("r" 0 1 (fontified t)) . -5939) (undo-tree-id401 . -1) (#("u" 0 1 (fontified t)) . -5940) (undo-tree-id402 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -5941) (undo-tree-id403 . -1) 5942) nil (26133 58457 399700 8000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t)) . -6202) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("H" 0 1 (face font-lock-string-face fontified t)) . -6203) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -6204) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -6205) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -6206) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -6207) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -6208) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -6209) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (#(":" 0 1 (fontified t)) . -6210) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#("t" 0 1 (fontified t)) . -6211) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (#("r" 0 1 (fontified t)) . -6212) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (#("u" 0 1 (fontified t)) . -6213) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -6214) (undo-tree-id375 . -1) 6215) ((6203 . 6215) (nil ws-butler-chg delete 6203 . 6204) (6202 . 6203)) (26133 58402 601514 92000) 0 nil])
([nil nil ((5927 . 5935)) nil (26133 58457 399596 805000) 0 nil])
nil
([nil nil ((5934 . 5943)) nil (26133 58457 399578 620000) 0 nil])
([nil nil ((#("const timeout = setTimeout(()=>{
                setState({...state, 'page': 'home',
                          'vote':null,
                          'seeHeader':true})
            }, 90000)" 0 1 (face font-lock-keyword-face fontified t) 1 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 13 (face font-lock-variable-name-face fontified t) 13 33 (fontified t) 33 47 (fontified t) 47 49 (fontified t) 49 50 (fontified t) 50 69 (fontified t) 69 75 (face font-lock-string-face fontified t) 75 77 (fontified t) 77 81 (face font-lock-string-face fontified t) 81 83 (face font-lock-string-face fontified t) 83 85 (fontified t) 85 99 (fontified t) 99 111 (fontified t) 111 112 (face font-lock-string-face fontified t) 112 117 (face font-lock-string-face fontified t) 117 118 (fontified t) 118 122 (face font-lock-constant-face fontified t) 122 124 (fontified t) 124 138 (fontified t) 138 150 (fontified t) 150 151 (face font-lock-string-face fontified t) 151 153 (face font-lock-string-face fontified t) 153 154 (face font-lock-string-face fontified t) 154 155 (face font-lock-string-face fontified t) 155 156 (face font-lock-string-face fontified t) 156 157 (face font-lock-string-face fontified t) 157 158 (face font-lock-string-face fontified t) 158 159 (face font-lock-string-face fontified t) 159 160 (face font-lock-string-face fontified t) 160 161 (face font-lock-string-face fontified t) 161 162 (fontified t) 162 163 (face font-lock-constant-face fontified t) 163 164 (face font-lock-constant-face fontified t) 164 165 (face font-lock-constant-face fontified t) 165 166 (face font-lock-constant-face fontified t) 166 167 (fontified t) 167 169 (fontified t) 169 181 (fontified t) 181 190 (fontified t)) . 5960) (undo-tree-id474 . -190) (undo-tree-id475 . -190) 6150 (t 26133 58457 471808 593000)) nil (26133 58530 494460 895000) 0 nil])
([nil nil ((4308 . 4313)) nil (26133 58530 494444 766000) 0 nil])
([nil nil ((4313 . 4314)) nil (26133 58530 494438 154000) 0 nil])
([nil nil ((4314 . 4321)) nil (26133 58530 494431 655000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t)) . -4316) (undo-tree-id469 . -1) (#("f" 0 1 (ws-butler-chg chg fontified t)) . -4317) (undo-tree-id470 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -4318) (undo-tree-id471 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t)) . -4319) (undo-tree-id472 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -4320) (undo-tree-id473 . -1) 4321) nil (26133 58530 494421 80000) 0 nil])
([nil nil ((4316 . 4324)) nil (26133 58530 494353 951000) 0 nil])
([nil nil ((4323 . 4327)) nil (26133 58530 494347 599000) 0 nil])
([nil nil ((#("useEffect(, [])" 0 15 (ws-butler-chg chg fontified t)) . 4313) (undo-tree-id467 . -15) (undo-tree-id468 . -15)) nil (26133 58530 494339 970000) 0 nil])
([nil nil ((#("        " 0 8 (fontified nil ws-butler-chg chg)) . -4462) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . -4439) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . -4408) (#("        " 0 6 (fontified nil ws-butler-chg chg) 6 8 (fontified nil ws-butler-chg chg)) . -4354) (nil rear-nonsticky nil 4502 . 4503) (nil fontified nil 4494 . 4503) (nil fontified nil 4482 . 4494) (nil fontified nil 4480 . 4482) (nil fontified nil 4479 . 4480) (nil fontified nil 4478 . 4479) (nil fontified nil 4477 . 4478) (nil fontified nil 4476 . 4477) (nil fontified nil 4475 . 4476) (nil fontified nil 4474 . 4475) (nil fontified nil 4473 . 4474) (nil fontified nil 4472 . 4473) (nil fontified nil 4471 . 4472) (nil fontified nil 4470 . 4471) (nil fontified nil 4469 . 4470) (nil fontified nil 4468 . 4469) (nil fontified nil 4467 . 4468) (nil fontified nil 4466 . 4467) (nil fontified nil 4464 . 4466) (nil fontified nil 4463 . 4464) (nil fontified nil 4451 . 4463) (nil fontified nil 4437 . 4451) (nil fontified nil 4435 . 4437) (nil fontified nil 4431 . 4435) (nil fontified nil 4430 . 4431) (nil fontified nil 4425 . 4430) (nil fontified nil 4424 . 4425) (nil fontified nil 4412 . 4424) (nil fontified nil 4398 . 4412) (nil fontified nil 4396 . 4398) (nil fontified nil 4394 . 4396) (nil fontified nil 4390 . 4394) (nil fontified nil 4388 . 4390) (nil fontified nil 4382 . 4388) (nil fontified nil 4363 . 4382) (nil fontified nil 4362 . 4363) (nil fontified nil 4360 . 4362) (nil fontified nil 4346 . 4360) (nil fontified nil 4326 . 4346) (nil fontified nil 4319 . 4326) (nil fontified nil 4318 . 4319) (nil fontified nil 4314 . 4318) (nil fontified nil 4313 . 4314) (4313 . 4503)) nil (26133 58530 494317 285000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -6122) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (#("
" 0 1 (fontified t ws-butler-chg delete)) . -6123) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) 6124) nil (26133 58530 494269 637000) 0 nil])
([nil nil ((#("

           " 0 1 (fontified t) 1 2 (fontified t) 2 13 (fontified t)) . 6109) (undo-tree-id452 . -13) (undo-tree-id453 . -13) (undo-tree-id454 . -13) (undo-tree-id455 . -13) (undo-tree-id456 . -13) (undo-tree-id457 . -13) (undo-tree-id458 . -13)) nil (26133 58530 494229 896000) 0 nil])
([nil nil ((#("<div className='StartOver-Page'>
             <h1>\"the real answer is:\"</h1>
             <h2>\"we don't know what happened yet\"</h2>
             <p> \"our paleontologists are uncovering new evidence every day. They may revise or discard a hypothesis when it no longer fits the fossil evidence. Stay tuned for updates!\" </p>
            <div
             onClick={(event)=>setState({...state, 'page': 'home',
                                         'vote':null,
                                         'seeHeader':true})}
            style={styler(locales.startOverImage[state.locale])}
             ></div>
            </div>
            " 0 5 (fontified t) 5 15 (fontified t) 15 16 (face font-lock-string-face fontified t) 16 30 (face font-lock-string-face fontified t) 30 31 (face font-lock-string-face fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 39 (fontified t) 39 49 (fontified t) 49 50 (fontified t) 50 51 (face font-lock-string-face fontified t) 51 70 (face font-lock-string-face fontified t) 70 71 (face font-lock-string-face fontified t) 71 72 (fontified t) 72 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 94 (fontified t) 94 95 (face font-lock-string-face fontified t) 95 98 (face font-lock-string-face fontified t) 98 101 (face font-lock-string-face fontified t) 101 102 (face font-lock-string-face fontified t) 102 123 (face font-lock-string-face fontified t) 123 126 (face font-lock-string-face fontified t) 126 127 (face font-lock-string-face fontified t) 127 128 (fontified t) 128 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 150 (fontified t) 150 151 (face font-lock-string-face fontified t) 151 180 (face font-lock-string-face fontified t) 180 186 (face font-lock-string-face fontified t) 186 189 (face font-lock-string-face fontified t) 189 190 (face font-lock-string-face fontified t) 190 198 (face font-lock-string-face fontified t) 198 222 (face font-lock-string-face fontified t) 222 305 (face font-lock-string-face fontified t) 305 308 (face font-lock-string-face fontified t) 308 317 (face font-lock-string-face fontified t) 317 318 (face font-lock-string-face fontified t) 318 319 (fontified t) 319 323 (fontified t) 323 324 (fontified t) 324 330 (fontified t) 330 331 (fontified t) 331 332 (fontified t) 332 336 (fontified t) 336 340 (fontified t) 340 341 (fontified t) 341 345 (fontified t) 345 363 (fontified t) 363 392 (fontified t) 392 393 (face font-lock-string-face fontified t) 393 397 (face font-lock-string-face fontified t) 397 398 (face font-lock-string-face fontified t) 398 400 (fontified t) 400 401 (face font-lock-string-face fontified t) 401 405 (face font-lock-string-face fontified t) 405 406 (face font-lock-string-face fontified t) 406 408 (fontified t) 408 436 (fontified t) 436 437 (fontified t) 437 449 (fontified t) 449 450 (face font-lock-string-face fontified t) 450 454 (face font-lock-string-face fontified t) 454 455 (face font-lock-string-face fontified t) 455 456 (fontified t) 456 460 (face font-lock-constant-face fontified t) 460 462 (fontified t) 462 503 (fontified t) 503 504 (face font-lock-string-face fontified t) 504 513 (face font-lock-string-face fontified t) 513 514 (face font-lock-string-face fontified t) 514 515 (fontified t) 515 519 (face font-lock-constant-face fontified t) 519 523 (fontified t) 523 533 (fontified t) 533 535 (fontified t) 535 561 (fontified t) 561 577 (fontified t) 577 588 (fontified t) 588 600 (fontified t) 600 601 (fontified t) 601 607 (fontified t) 607 608 (fontified t) 608 609 (fontified t) 609 621 (fontified t) 621 627 (fontified t) 627 628 (fontified t) 628 633 (fontified t) 633 635 (fontified t) 635 640 (fontified t)) . 6279) (undo-tree-id440 . -32) (undo-tree-id441 . -131) (undo-tree-id442 . -131) (undo-tree-id443 . -131) (undo-tree-id444 . -132) (undo-tree-id445 . -30) (undo-tree-id446 . -608) (undo-tree-id447 . -340) (undo-tree-id448 . -640) (undo-tree-id449 . -640) (undo-tree-id450 . -628) (undo-tree-id451 . -640) 6919) nil (26133 58530 494193 600000) 0 nil])
([nil nil ((#("{state.seeHome &&

             }
            " 0 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 21 (fontified t) 21 32 (fontified t) 32 33 (ws-butler-chg delete fontified t) 33 34 (fontified t) 34 46 (fontified t)) . -6247) (undo-tree-id423 . -32) (undo-tree-id424 . -32) (undo-tree-id425 . -32) (undo-tree-id426 . -32) (undo-tree-id427 . -17) (undo-tree-id428 . -32) (undo-tree-id429 . -32) (undo-tree-id430 . -18) (undo-tree-id431 . -32) (undo-tree-id432 . -32) (undo-tree-id433 . -46) (undo-tree-id434 . -32) (undo-tree-id435 . -32) (undo-tree-id436 . -32) (undo-tree-id437 . -32) (undo-tree-id438 . -46) (undo-tree-id439 . -34) 6293) nil (26133 58530 494844 5000) 0 nil])
([nil nil ((4485 . 4497)) nil (26133 58581 260786 644000) 0 nil] [nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 6234) (undo-tree-id406 . -13) (undo-tree-id407 . -13) (undo-tree-id408 . -13) (undo-tree-id409 . -13) (undo-tree-id410 . -13) (undo-tree-id411 . -13) (undo-tree-id412 . -13) (undo-tree-id413 . -13) (undo-tree-id414 . -13) (undo-tree-id415 . -13) (undo-tree-id416 . -13) (undo-tree-id417 . -13) (undo-tree-id418 . -13) (undo-tree-id419 . -13) (undo-tree-id420 . -13) (undo-tree-id421 . -13) (undo-tree-id422 . -13)) ((nil ws-butler-chg delete 6247 . 6248) (6234 . 6247)) (26133 58530 493787 583000) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t fontified nil ws-butler-chg chg)) . -5119) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -5101) (#("  " 0 1 (fontified nil ws-butler-chg chg) 1 2 (fontified nil ws-butler-chg chg)) . -5082) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -5018) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -4987) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -4935) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -4842) (#(" " 0 1 (fontified nil ws-butler-chg chg)) . -4826) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -4637) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -4583) (#("  " 0 2 (fontified nil ws-butler-chg chg)) . -4541) (nil rear-nonsticky nil 5136 . 5137) (nil fontified nil 5132 . 5137) (nil fontified nil 5130 . 5132) (nil fontified nil 5125 . 5130) (nil fontified nil 5124 . 5125) (nil fontified nil 5118 . 5124) (nil fontified nil 5106 . 5118) (nil fontified nil 5105 . 5106) (nil fontified nil 5104 . 5105) (nil fontified nil 5098 . 5104) (nil fontified nil 5097 . 5098) (nil fontified nil 5085 . 5097) (nil fontified nil 5074 . 5085) (nil fontified nil 5058 . 5074) (nil fontified nil 5032 . 5058) (nil fontified nil 5030 . 5032) (nil fontified nil 5020 . 5030) (nil fontified nil 5016 . 5020) (nil fontified nil 5012 . 5016) (nil fontified nil 5011 . 5012) (nil fontified nil 5010 . 5011) (nil fontified nil 5001 . 5010) (nil fontified nil 5000 . 5001) (nil fontified nil 4959 . 5000) (nil fontified nil 4957 . 4959) (nil fontified nil 4953 . 4957) (nil fontified nil 4952 . 4953) (nil fontified nil 4951 . 4952) (nil fontified nil 4947 . 4951) (nil fontified nil 4946 . 4947) (nil fontified nil 4934 . 4946) (nil fontified nil 4933 . 4934) (nil fontified nil 4905 . 4933) (nil fontified nil 4903 . 4905) (nil fontified nil 4902 . 4903) (nil fontified nil 4898 . 4902) (nil fontified nil 4897 . 4898) (nil fontified nil 4895 . 4897) (nil fontified nil 4894 . 4895) (nil fontified nil 4890 . 4894) (nil fontified nil 4889 . 4890) (nil fontified nil 4860 . 4889) (nil fontified nil 4842 . 4860) (nil fontified nil 4838 . 4842) (nil fontified nil 4837 . 4838) (nil fontified nil 4833 . 4837) (nil fontified nil 4829 . 4833) (nil fontified nil 4828 . 4829) (nil fontified nil 4827 . 4828) (nil fontified nil 4821 . 4827) (nil fontified nil 4820 . 4821) (nil fontified nil 4816 . 4820) (nil fontified nil 4815 . 4816) (nil fontified nil 4814 . 4815) (nil fontified nil 4805 . 4814) (nil fontified nil 4802 . 4805) (nil fontified nil 4719 . 4802) (nil fontified nil 4695 . 4719) (nil fontified nil 4687 . 4695) (nil fontified nil 4686 . 4687) (nil fontified nil 4683 . 4686) (nil fontified nil 4677 . 4683) (nil fontified nil 4648 . 4677) (nil fontified nil 4647 . 4648) (nil fontified nil 4630 . 4647) (nil fontified nil 4629 . 4630) (nil fontified nil 4628 . 4629) (nil fontified nil 4625 . 4628) (nil fontified nil 4624 . 4625) (nil fontified nil 4623 . 4624) (nil fontified nil 4620 . 4623) (nil fontified nil 4599 . 4620) (nil fontified nil 4598 . 4599) (nil fontified nil 4595 . 4598) (nil fontified nil 4592 . 4595) (nil fontified nil 4591 . 4592) (nil fontified nil 4574 . 4591) (nil fontified nil 4573 . 4574) (nil fontified nil 4572 . 4573) (nil fontified nil 4569 . 4572) (nil fontified nil 4568 . 4569) (nil fontified nil 4567 . 4568) (nil fontified nil 4548 . 4567) (nil fontified nil 4547 . 4548) (nil fontified nil 4546 . 4547) (nil fontified nil 4536 . 4546) (nil fontified nil 4530 . 4536) (nil fontified nil 4529 . 4530) (nil fontified nil 4528 . 4529) (nil fontified nil 4527 . 4528) (nil fontified nil 4513 . 4527) (nil fontified nil 4512 . 4513) (nil fontified nil 4502 . 4512) (nil fontified nil 4497 . 4502) (4497 . 5137)) nil (26133 58581 260757 830000) 0 nil])
nil
([nil nil ((#("
           " 0 1 (fontified t ws-butler-chg chg) 1 6 (fontified t ws-butler-chg chg) 6 8 (fontified t ws-butler-chg chg) 8 12 (fontified t ws-butler-chg chg)) . 5107) (undo-tree-id480 . -12) (undo-tree-id481 . -12) (undo-tree-id482 . -12)) nil (26133 58581 260673 256000) 0 nil])
([nil nil ((10495 . 10504)) nil (26133 58581 260654 812000) 0 nil])
([nil nil ((10504 . 10508)) nil (26133 58581 260648 941000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . -10500) 10508) nil (26133 58581 260642 145000) 0 nil])
([nil nil ((10504 . 10506)) nil (26133 58581 260634 460000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -10504) (undo-tree-id478 . -1) (#(" " 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -10505) (undo-tree-id479 . -1) 10506) nil (26133 58581 260626 53000) 0 nil])
([nil nil ((10504 . 10517)) nil (26133 58581 260608 923000) 0 nil])
([nil nil ((10517 . 10526)) nil (26133 58581 260602 905000) 0 nil])
([nil nil ((10526 . 10534)) nil (26133 58581 260597 53000) 0 nil])
([nil nil ((10533 . 10554)) nil (26133 58581 260591 368000) 0 nil])
([nil nil ((10554 . 10561)) nil (26133 58581 260585 219000) 0 nil])
([nil nil ((#("E" 0 1 (ws-butler-chg chg fontified t)) . -10559) (undo-tree-id476 . -1) (#("}" 0 1 (ws-butler-chg chg fontified t)) . -10560) (undo-tree-id477 . -1) 10561) nil (26133 58581 260575 164000) 0 nil])
([nil nil ((10559 . 10570)) nil (26133 58581 260533 831000) 0 nil])
([nil nil ((10570 . 10581)) nil (26133 58581 260526 812000) 0 nil])
([nil nil ((10582 . 10583)) nil (26133 58581 260509 849000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -6716) (undo-tree-id483 . -1) 6717 (t 26133 58581 327282 675000)) nil (26133 58599 811000 563000) 0 nil])
([nil nil ((6716 . 6717)) nil (26133 58599 810950 896000) 0 nil])
([nil nil ((10581 . 10583) (t 26133 58599 875203 437000)) nil (26133 58612 436140 952000) 0 nil])
([nil nil ((10833 . 10846) (t 26133 58612 503149 424000)) nil (26133 58791 781446 61000) 0 nil])
([nil nil ((10859 . 10863) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . -10842) (10846 . 10863)) nil (26133 58791 781437 894000) 0 nil])
([nil nil ((10863 . 10867)) nil (26133 58791 781430 172000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg chg fontified t)) . -10866) (undo-tree-id497 . -1) 10867) nil (26133 58791 781423 6000) 0 nil])
([nil nil ((10866 . 10868)) nil (26133 58791 781411 987000) 0 nil])
([nil nil ((10867 . 10875)) nil (26133 58791 781405 913000) 0 nil])
([nil nil ((10875 . 10890)) nil (26133 58791 781400 43000) 0 nil])
([nil nil ((10889 . 10901)) nil (26133 58791 781393 858000) 0 nil])
([nil nil ((10902 . 10916)) nil (26133 58791 781387 617000) 0 nil])
([nil nil ((#("\"the real answer is:\"" 0 1 (face font-lock-string-face fontified t) 1 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t)) . 4545) (undo-tree-id495 . -21) (undo-tree-id496 . -21) 4566) nil (26133 58791 781380 24000) 0 nil])
([nil nil ((#("<h1></h1>" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 5 (ws-butler-chg delete fontified t) 5 8 (fontified t) 8 9 (fontified t)) . -4541) (undo-tree-id493 . -9) (undo-tree-id494 . -9) 4550) nil (26133 58791 781363 395000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -4529) (undo-tree-id492 . -1) 4530) nil (26133 58791 781346 302000) 0 nil])
([nil nil ((#("           " 0 1 (ws-butler-chg delete fontified t) 1 6 (fontified t) 6 11 (fontified t)) . -4529) (undo-tree-id489 . -11) (undo-tree-id490 . -11) (undo-tree-id491 . -11) 4540) nil (26133 58791 781332 988000) 0 nil])
([nil nil ((#("h" 0 1 (face font-lock-string-face fontified t)) . -1174) (undo-tree-id485 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -1175) (undo-tree-id486 . -1) (#("m" 0 1 (face font-lock-string-face fontified t)) . -1176) (undo-tree-id487 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -1177) (undo-tree-id488 . -1) 1178) nil (26133 58791 781309 414000) 0 nil])
([nil nil ((1174 . 1178)) nil (26133 58791 781282 284000) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -1177) (undo-tree-id484 . -1) 1178) nil (26133 58791 781273 62000) 0 nil])
([nil nil ((1177 . 1183)) nil (26133 58791 781225 858000) 0 nil])
([nil nil ((4049 . 4054) (t 26133 58791 846377 391000)) nil (26133 58834 575664 670000) 0 nil])
([nil nil ((4054 . 4068)) nil (26133 58834 575657 744000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4067) (undo-tree-id504 . -1) 4068) nil (26133 58834 575650 355000) 0 nil])
([nil nil ((4067 . 4068)) nil (26133 58834 575639 189000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4067) (undo-tree-id503 . -1) 4068) nil (26133 58834 575631 744000) 0 nil])
([nil nil ((4067 . 4072)) nil (26133 58834 575620 318000) 0 nil])
([nil nil ((4070 . 4071)) nil (26133 58834 575614 355000) 0 nil])
([nil nil ((4072 . 4076)) nil (26133 58834 575608 133000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4074) (undo-tree-id501 . -1) (#("d" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4075) (undo-tree-id502 . -1) 4076) nil (26133 58834 575599 633000) 0 nil])
([nil nil ((4074 . 4076)) nil (26133 58834 575582 485000) 0 nil])
([nil nil ((#("b" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4074) (undo-tree-id499 . -1) (#("\"" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4075) (undo-tree-id500 . -1) 4076) nil (26133 58834 575574 78000) 0 nil])
([nil nil ((4074 . 4078)) nil (26133 58834 575556 374000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4098 . 4099) (nil fontified nil 4098 . 4099) (nil fontified nil 4079 . 4098) (nil fontified nil 4078 . 4079) (4078 . 4099)) nil (26133 58834 575549 263000) 0 nil])
([nil nil ((4099 . 4100)) nil (26133 58834 575539 708000) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t)) . -4099) (undo-tree-id498 . -1) 4100) nil (26133 58834 575530 245000) 0 nil])
([nil nil ((4099 . 4100)) nil (26133 58834 575493 930000) 0 nil])
([nil nil ((4100 . 4122)) nil (26133 58834 575487 263000) 0 nil])
([nil nil ((4129 . 4130) (4122 . 4123) (4122 . 4128)) nil (26133 58834 575479 652000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4150 . 4151) (nil fontified nil 4150 . 4151) (nil fontified nil 4131 . 4150) (nil fontified nil 4130 . 4131) (4130 . 4151)) nil (26133 58834 575460 23000) 0 nil])
([nil nil ((4152 . 4157) (t 26133 58834 642191 993000)) nil (26133 58929 847736 67000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 4153) (undo-tree-id551 . -4) 4157) nil (26133 58929 847727 993000) 0 nil])
([nil nil ((4152 . 4153)) nil (26133 58929 847717 67000) 0 nil])
([nil nil ((4153 . 4158)) nil (26133 58929 847711 178000) 0 nil])
([nil nil ((4158 . 4161)) nil (26133 58929 847705 234000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4160) (undo-tree-id550 . -1) 4161) nil (26133 58929 847698 30000) 0 nil])
([nil nil ((4160 . 4180)) nil (26133 58929 847687 104000) 0 nil])
([nil nil ((4179 . 4181)) nil (26133 58929 847680 863000) 0 nil])
([nil nil ((4181 . 4182)) nil (26133 58929 847675 49000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4181) (undo-tree-id549 . -1) 4182) nil (26133 58929 847668 49000) 0 nil])
([nil nil ((4181 . 4187)) nil (26133 58929 847656 938000) 0 nil])
([nil nil ((4187 . 4212)) nil (26133 58929 847651 234000) 0 nil])
([nil nil ((4218 . 4220) (4212 . 4213) (4212 . 4217)) nil (26133 58929 847644 882000) 0 nil])
([nil nil ((4185 . 4195)) nil (26133 58929 847637 197000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4194) (undo-tree-id548 . -1) 4195) nil (26133 58929 847630 123000) 0 nil])
([nil nil ((4194 . 4196)) nil (26133 58929 847619 123000) 0 nil])
([nil nil ((#("j" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4194) (undo-tree-id546 . -1) (#("n" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4195) (undo-tree-id547 . -1) 4196) nil (26133 58929 847611 419000) 0 nil])
([nil nil ((4194 . 4197)) nil (26133 58929 847596 253000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4194) (undo-tree-id543 . -1) (#("k" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4195) (undo-tree-id544 . -1) (#("n" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4196) (undo-tree-id545 . -1) 4197) nil (26133 58929 847587 604000) 0 nil])
([nil nil ((4194 . 4197)) nil (26133 58929 847568 68000) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4196) (undo-tree-id542 . -1) 4197) nil (26133 58929 847560 956000) 0 nil])
([nil nil ((4196 . 4216)) nil (26133 58929 847549 753000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t)) . -4766) (undo-tree-id521 . -1) (#("w" 0 1 (face font-lock-string-face fontified t)) . -4767) (undo-tree-id522 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -4768) (undo-tree-id523 . -1) (#("w" 0 1 (face font-lock-string-face fontified t)) . -4769) (undo-tree-id524 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -4770) (undo-tree-id525 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -4771) (undo-tree-id526 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -4772) (undo-tree-id527 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -4773) (undo-tree-id528 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -4774) (undo-tree-id529 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -4775) (undo-tree-id530 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -4776) (undo-tree-id531 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -4777) (undo-tree-id532 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -4778) (undo-tree-id533 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -4779) (undo-tree-id534 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -4780) (undo-tree-id535 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -4781) (undo-tree-id536 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -4782) (undo-tree-id537 . -1) (#("y" 0 1 (face font-lock-string-face fontified t)) . -4783) (undo-tree-id538 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -4784) (undo-tree-id539 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -4785) (undo-tree-id540 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -4786) (undo-tree-id541 . -1) 4787) nil (26133 58929 847530 68000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -4754) (undo-tree-id509 . -1) (#("w" 0 1 (face font-lock-string-face fontified t)) . -4755) (undo-tree-id510 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -4756) (undo-tree-id511 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -4757) (undo-tree-id512 . -1) (#("d" 0 1 (face font-lock-string-face fontified t)) . -4758) (undo-tree-id513 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -4759) (undo-tree-id514 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -4760) (undo-tree-id515 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -4761) (undo-tree-id516 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -4762) (undo-tree-id517 . -1) (#(" " 0 1 (face font-lock-string-face fontified t)) . -4763) (undo-tree-id518 . -1) (#("k" 0 1 (face font-lock-string-face fontified t)) . -4764) (undo-tree-id519 . -1) (#("n" 0 1 (face font-lock-string-face fontified t)) . -4765) (undo-tree-id520 . -1) 4766) nil (26133 58929 847428 290000) 0 nil])
([nil nil ((4754 . 4756)) nil (26133 58929 847302 976000) 0 nil])
([nil nil ((4755 . 4776)) nil (26133 58929 847296 958000) 0 nil])
([nil nil ((4776 . 4779)) nil (26133 58929 847290 532000) 0 nil])
([nil nil ((#("J" 0 1 (ws-butler-chg chg fontified t)) . -4775) (undo-tree-id505 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -4776) (undo-tree-id506 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -4777) (undo-tree-id507 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -4778) (undo-tree-id508 . -1) 4779) nil (26133 58929 847278 772000) 0 nil])
([nil nil ((4775 . 4781)) nil (26133 58929 847227 273000) 0 nil])
([nil nil ((4780 . 4792)) nil (26133 58929 847209 51000) 0 nil])
([nil nil ((4517 . 4522) (t 26133 58929 913777 946000)) nil (26133 58944 462708 313000) 0 nil])
([nil nil ((4522 . 4524)) nil (26133 58944 462700 443000) 0 nil])
([nil nil ((4687 . 4692)) nil (26133 58944 462692 702000) 0 nil])
([nil nil ((4692 . 4694)) nil (26133 58944 462675 869000) 0 nil])
([nil nil ((4252 . 4257) (t 26133 58944 525714 298000)) nil (26133 59026 707330 262000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . 4253) (undo-tree-id557 . -4) 4257) nil (26133 59026 707322 151000) 0 nil])
([nil nil ((4252 . 4253)) nil (26133 59026 707310 540000) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t)) . -4252) (undo-tree-id556 . -1) 4253) nil (26133 59026 707302 984000) 0 nil])
([nil nil ((4252 . 4253)) nil (26133 59026 707117 782000) 0 nil])
([nil nil ((4253 . 4258)) nil (26133 59026 707111 874000) 0 nil])
([nil nil ((4258 . 4276)) nil (26133 59026 707105 578000) 0 nil])
([nil nil ((4275 . 4281)) nil (26133 59026 707099 411000) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t)) . -4280) (undo-tree-id555 . -1) 4281) nil (26133 59026 707091 708000) 0 nil])
([nil nil ((4280 . 4283)) nil (26133 59026 707080 337000) 0 nil])
([nil nil ((4283 . 4304)) nil (26133 59026 707074 263000) 0 nil])
([nil nil ((4310 . 4312) (4304 . 4305) (4304 . 4309)) nil (26133 59026 707067 856000) 0 nil])
([nil nil ((4184 . 4185)) nil (26133 59026 707060 356000) 0 nil])
([nil nil ((4250 . 4251)) nil (26133 59026 707054 393000) 0 nil])
([nil nil ((4282 . 4283)) nil (26133 59026 707048 115000) 0 nil])
([nil nil ((4313 . 4314)) nil (26133 59026 707041 689000) 0 nil])
([nil nil ((#("\"our paleontologists are uncovering new evidence every day. They may revise or discard a hypothesis when it no longer fits the fossil evidence. Stay tuned for updates!" 0 1 (face font-lock-string-face fontified t) 1 30 (face font-lock-string-face fontified t) 30 36 (face font-lock-string-face fontified t) 36 39 (face font-lock-string-face fontified t) 39 40 (face font-lock-string-face fontified t) 40 48 (face font-lock-string-face fontified t) 48 72 (face font-lock-string-face fontified t) 72 155 (face font-lock-string-face fontified t) 155 158 (face font-lock-string-face fontified t) 158 167 (face font-lock-string-face fontified t)) . 4895) (undo-tree-id553 . -167) (undo-tree-id554 . -167) 5062) nil (26133 59026 707034 97000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 4895)) nil (26133 59026 707017 134000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -4283) (undo-tree-id552 . -1) 4284) nil (26133 59026 707006 560000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4449 . 4450) (nil fontified nil 4441 . 4450) (nil fontified nil 4438 . 4441) (nil fontified nil 4355 . 4438) (nil fontified nil 4331 . 4355) (nil fontified nil 4323 . 4331) (nil fontified nil 4322 . 4323) (nil fontified nil 4319 . 4322) (nil fontified nil 4313 . 4319) (nil fontified nil 4284 . 4313) (nil fontified nil 4283 . 4284) (4283 . 4450)) nil (26133 59026 706955 356000) 0 nil])
([nil nil ((5061 . 5082) (t 26133 59026 773355 399000)) nil (26133 59043 183425 246000) 0 nil])
([nil nil ((5082 . 5097)) nil (26133 59043 183418 172000) 0 nil])
([nil nil ((#("[" 0 1 (ws-butler-chg chg fontified t)) . -5096) (undo-tree-id560 . -1) (undo-tree-id561 . -1) 5097) nil (26133 59043 183410 98000) 0 nil])
([nil nil ((5096 . 5097)) nil (26133 59043 183393 709000) 0 nil])
([nil nil ((#("[" 0 1 (ws-butler-chg chg fontified t)) . -5096) (undo-tree-id558 . -1) (undo-tree-id559 . -1) 5097) nil (26133 59043 183384 894000) 0 nil])
([nil nil ((5096 . 5097)) nil (26133 59043 183334 98000) 0 nil])
([nil nil ((5097 . 5098) (t 26133 59043 249283 384000)) nil (26133 59051 108182 742000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -4997) (undo-tree-id576 . -1) (#("2" 0 1 (fontified t)) . -4998) (undo-tree-id577 . -1) 4999 (t 26133 59051 173248 735000)) nil (26133 59110 834622 58000) 0 nil])
([nil nil ((4997 . 5012)) nil (26133 59110 834605 706000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -5011) (undo-tree-id575 . -1) 5012) nil (26133 59110 834598 576000) 0 nil])
([nil nil ((5011 . 5012)) nil (26133 59110 834587 484000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t)) . -5011) (undo-tree-id574 . -1) 5012) nil (26133 59110 834580 132000) 0 nil])
([nil nil ((5011 . 5027)) nil (26133 59110 834569 225000) 0 nil])
([nil nil ((5027 . 5030)) nil (26133 59110 834563 354000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -5089) (undo-tree-id573 . -1) 5090) nil (26133 59110 834556 76000) 0 nil])
([nil nil ((5089 . 5092)) nil (26133 59110 834544 965000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t)) . -5089) (undo-tree-id570 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -5090) (undo-tree-id571 . -1) (#("v" 0 1 (ws-butler-chg chg fontified t)) . -5091) (undo-tree-id572 . -1) 5092) nil (26133 59110 834536 317000) 0 nil])
([nil nil ((5089 . 5092)) nil (26133 59110 834516 577000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t)) . -5091) (undo-tree-id569 . -1) 5092) nil (26133 59110 834509 391000) 0 nil])
([nil nil ((5091 . 5106)) nil (26133 59110 834498 373000) 0 nil])
([nil nil ((5106 . 5119)) nil (26133 59110 834492 558000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t)) . -5073) (undo-tree-id567 . -1) (#("2" 0 1 (fontified t)) . -5074) (undo-tree-id568 . -1) 5075) nil (26133 59110 834484 466000) 0 nil])
([nil nil ((5073 . 5076)) nil (26133 59110 834468 688000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t)) . -5074) (undo-tree-id565 . -1) (#("v" 0 1 (ws-butler-chg chg fontified t)) . -5075) (undo-tree-id566 . -1) 5076) nil (26133 59110 834460 447000) 0 nil])
([nil nil ((5074 . 5075)) nil (26133 59110 834444 170000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t)) . -5073) (undo-tree-id563 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -5074) (undo-tree-id564 . -1) 5075) nil (26133 59110 834435 873000) 0 nil])
([nil nil ((5073 . 5076)) nil (26133 59110 834417 966000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -5162) (undo-tree-id562 . -1) 5163) nil (26133 59110 834408 762000) 0 nil])
([nil nil ((5162 . 5165)) nil (26133 59110 834359 892000) 0 nil])
([nil nil ((4982 . 4984) (t 26133 59110 904987 286000)) nil (26133 59236 467572 310000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4982) (undo-tree-id0 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -4983) (undo-tree-id1 . -1) 4984) nil (26133 59236 467562 69000) 0 nil])
([nil nil ((4982 . 4995)) nil (26133 59236 467481 755000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -5038) (undo-tree-id5 . -1) 5039 (t 26133 59236 536436 44000)) nil (26133 59331 909991 107000) 0 nil])
([nil nil ((5038 . 5039)) nil (26133 59331 909978 422000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t face font-lock-string-face)) . -5031) (undo-tree-id4 . -1) 5032) nil (26133 59331 909970 533000) 0 nil])
([nil nil ((5031 . 5032)) nil (26133 59331 909958 274000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5031) (undo-tree-id3 . -1) 5032) nil (26133 59331 909950 15000) 0 nil])
([nil nil ((5031 . 5033)) nil (26133 59331 909936 533000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5032) (undo-tree-id2 . -1) 5033) nil (26133 59331 909921 570000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . 4079) (t 26133 59331 984016 226000)) nil (26133 59418 544809 911000) 0 nil])
([nil nil ((4079 . 4080)) nil (26133 59418 544802 226000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face font-lock-string-face)) . -4186) (undo-tree-id6 . -1) 4187) nil (26133 59418 544793 4000) 0 nil])
([nil nil ((4186 . 4187)) nil (26133 59418 544757 301000) 0 nil])
([nil nil ((4217 . 4218)) nil (26133 59418 544739 727000) 0 nil])
([nil nil ((4218 . 4219) (t 26133 59418 619634 545000)) nil (26133 59868 353524 896000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-string-face)) . -4286) (undo-tree-id7 . -1) 4287) nil (26133 59868 353514 730000) 0 nil])
([nil nil ((4286 . 4287)) nil (26133 59868 353468 767000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-string-face)) . -4218) (undo-tree-id8 . -1) 4219 (t 26133 59868 421817 533000)) nil (26133 59874 727134 355000) 0 nil])
([nil nil ((4484 . 4485) (t 26133 59874 793802 624000)) nil (26133 59966 899195 189000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . -4484) (undo-tree-id20 . -1) 4485) nil (26133 59966 899186 763000) 0 nil])
([nil nil ((4484 . 4485)) nil (26133 59966 899174 893000) 0 nil])
([nil nil ((4485 . 4490)) nil (26133 59966 899168 726000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4712 . 4713) (nil fontified nil 4712 . 4713) (nil fontified nil 4710 . 4712) (nil fontified nil 4708 . 4710) (nil fontified nil 4704 . 4708) (nil fontified nil 4683 . 4704) (nil fontified nil 4681 . 4683) (nil fontified nil 4635 . 4681) (nil fontified nil 4516 . 4635) (nil fontified nil 4515 . 4516) (nil fontified nil 4514 . 4515) (nil fontified nil 4513 . 4514) (nil fontified nil 4511 . 4513) (nil fontified nil 4507 . 4511) (nil fontified nil 4505 . 4507) (nil fontified nil 4490 . 4505) (4490 . 4713)) nil (26133 59966 899159 763000) 0 nil])
([nil nil ((4713 . 4718)) nil (26133 59966 899141 670000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4940 . 4941) (nil fontified nil 4940 . 4941) (nil fontified nil 4938 . 4940) (nil fontified nil 4936 . 4938) (nil fontified nil 4932 . 4936) (nil fontified nil 4911 . 4932) (nil fontified nil 4909 . 4911) (nil fontified nil 4863 . 4909) (nil fontified nil 4744 . 4863) (nil fontified nil 4743 . 4744) (nil fontified nil 4742 . 4743) (nil fontified nil 4741 . 4742) (nil fontified nil 4739 . 4741) (nil fontified nil 4735 . 4739) (nil fontified nil 4733 . 4735) (nil fontified nil 4718 . 4733) (4718 . 4941)) nil (26133 59966 899133 171000) 0 nil])
([nil nil ((4713 . 4714)) nil (26133 59966 899114 930000) 0 nil])
([nil nil ((4942 . 4943)) nil (26133 59966 899108 856000) 0 nil])
([nil nil ((4275 . 4276)) nil (26133 59966 899103 4000) 0 nil])
([nil nil ((4505 . 4506)) nil (26133 59966 899096 393000) 0 nil])
([nil nil ((4735 . 4736)) nil (26133 59966 899089 856000) 0 nil])
([nil nil ((#("They may revise or discard a hypothesis when it no longer fits the fossil evidence. Stay tuned for updates!" 0 62 (fontified t face font-lock-string-face) 62 107 (fontified t face font-lock-string-face)) . -4345) (undo-tree-id18 . -107) (undo-tree-id19 . -107) 4452) nil (26133 59966 899081 948000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -4344) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 4345) nil (26133 59966 899066 115000) 0 nil])
([nil nil ((#("Our paleontologists are uncovering new evidence every day." 0 1 (ws-butler-chg chg fontified t face font-lock-string-face) 1 2 (ws-butler-chg chg fontified t face font-lock-string-face) 2 58 (ws-butler-chg chg fontified t face font-lock-string-face)) . 4408) (undo-tree-id14 . -58) (undo-tree-id15 . -58)) nil (26133 59966 899049 467000) 0 nil])
([nil nil ((#(" Stay tuned for updates!" 0 24 (ws-butler-chg chg fontified t face font-lock-string-face)) . -4492) (undo-tree-id12 . -24) (undo-tree-id13 . -24) 4516) nil (26133 59966 899032 652000) 0 nil])
([nil nil ((#("Our paleontologists are uncovering new evidence every day. They may revise or discard a hypothesis when it no longer fits the fossil evidence. " 0 1 (ws-butler-chg chg fontified t face font-lock-string-face) 1 2 (ws-butler-chg chg fontified t face font-lock-string-face) 2 121 (ws-butler-chg chg fontified t face font-lock-string-face) 121 143 (ws-butler-chg chg fontified t face font-lock-string-face)) . 4556) (undo-tree-id9 . -143) (undo-tree-id10 . -143) (undo-tree-id11 . -143)) nil (26133 59966 898804 42000) 0 nil])
([nil nil ((5309 . 5321) (t 26133 59966 969572 541000)) nil (26133 59993 79380 793000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5397 . 5398) (nil fontified nil 5352 . 5398) (nil fontified nil 5336 . 5352) (nil fontified nil 5321 . 5336) (5321 . 5398)) nil (26133 59993 79372 942000) 0 nil])
([nil nil ((5398 . 5410)) nil (26133 59993 79363 34000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5486 . 5487) (nil fontified nil 5441 . 5487) (nil fontified nil 5425 . 5441) (nil fontified nil 5410 . 5425) (5410 . 5487)) nil (26133 59993 79355 923000) 0 nil])
([nil nil ((5487 . 5488)) nil (26133 59993 79346 294000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -5487) (undo-tree-id21 . -1) 5488) nil (26133 59993 79337 775000) 0 nil])
([nil nil ((5465 . 5466)) nil (26133 59993 79301 405000) 0 nil])
([nil nil ((5376 . 5377)) nil (26133 59993 79294 553000) 0 nil])
([nil nil ((5287 . 5288)) nil (26133 59993 79276 609000) 0 nil])
([nil nil ((5506 . 5512) (t 26133 59993 145502 670000)) nil (26133 60125 426094 752000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -5507) (undo-tree-id24 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -5508) (undo-tree-id25 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5509) (undo-tree-id26 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -5510) (undo-tree-id27 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -5511) (undo-tree-id28 . -1) 5512) nil (26133 60125 426082 733000) 0 nil])
([nil nil ((5702 . 5704)) nil (26133 60125 426051 881000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t ws-butler-chg chg)) . -5702) (undo-tree-id22 . -1) (#("." 0 1 (fontified t ws-butler-chg chg)) . -5703) (undo-tree-id23 . -1) 5704) nil (26133 60126 585667 125000) 0 nil])
([nil nil ((5702 . 5703)) nil (26133 60222 339863 735000) 0 nil] [nil nil ((5702 . 5706)) ((#("{..." 0 4 (fontified t ws-butler-chg chg)) . 5702)) (26133 60125 426346 306000) 0 nil])
([nil nil ((5748 . 5749)) nil (26133 60222 339852 606000) 0 nil])
([nil nil ((5751 . 5752)) ((#("}" 0 1 (fontified t ws-butler-chg chg)) . 5751)) (26133 60125 425985 233000) 0 nil])
([nil nil ((5702 . 5704)) nil (26133 60222 339841 698000) 0 nil])
nil
([nil nil ((#("{" 0 1 (fontified t)) . -5701) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#("." 0 1 (fontified t ws-butler-chg chg)) . -5702) (undo-tree-id44 . -1) (#("." 0 1 (fontified t ws-butler-chg chg)) . -5703) (undo-tree-id45 . -1) 5704) nil (26133 60222 339824 754000) 0 nil])
([nil nil ((5701 . 5702)) nil (26133 60222 339774 809000) 0 nil])
([nil nil ((5703 . 5705)) nil (26133 60222 339763 513000) 0 nil])
([nil nil ((5705 . 5706)) nil (26133 60222 339751 680000) 0 nil])
([nil nil ((5751 . 5753)) nil (26133 60222 339740 143000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -5751) (undo-tree-id39 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5752) (undo-tree-id40 . -1) 5753) nil (26133 60222 339724 791000) 0 nil])
([nil nil ((5750 . 5751)) nil (26133 60222 339695 680000) 0 nil])
([nil nil ((5751 . 5753)) nil (26133 60222 339684 532000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -5752) (undo-tree-id38 . -1) 5753) nil (26133 60222 339671 13000) 0 nil])
([nil nil ((5752 . 5757)) nil (26133 60222 339649 328000) 0 nil])
([nil nil ((#("H" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5753) (undo-tree-id34 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5754) (undo-tree-id35 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5755) (undo-tree-id36 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5756) (undo-tree-id37 . -1) 5757) nil (26133 60222 339630 847000) 0 nil])
([nil nil ((5753 . 5761)) nil (26133 60222 339584 569000) 0 nil])
([nil nil ((5761 . 5775)) nil (26133 60222 339573 69000) 0 nil])
([nil nil ((5775 . 5778)) nil (26133 60222 339561 829000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5775) (undo-tree-id31 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5776) (undo-tree-id32 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5777) (undo-tree-id33 . -1) 5778) nil (26133 60222 339544 847000) 0 nil])
([nil nil ((5775 . 5786)) nil (26133 60222 339506 236000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . 5506) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 5786) nil (26133 60222 339481 440000) 0 nil])
([nil nil ((5785 . 5786) (t 26133 60222 444821 955000)) nil (26133 60235 182922 940000) 0 nil])
([nil nil ((5781 . 5782)) nil (26133 60235 182915 773000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . 5781)) nil (26133 60235 182907 884000) 0 nil])
([nil nil ((5781 . 5782)) nil (26133 60235 182901 421000) 0 nil])
([nil nil ((5765 . 5766)) nil (26133 60235 182893 996000) 0 nil])
([nil nil ((5761 . 5762)) nil (26133 60235 182875 884000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t face font-lock-comment-face)) . -5054) (undo-tree-id63 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -5055) (undo-tree-id64 . -1) 5056 (t 26133 60235 256780 869000)) nil (26133 60288 26431 35000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t ws-butler-chg delete)) . 4884) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 4884)) nil (26133 60288 26413 664000) 0 nil])
([nil nil ((#("
    " 0 1 (fontified t) 1 5 (fontified t)) . 4879) (undo-tree-id61 . -5) (undo-tree-id62 . -5)) nil (26133 60288 26404 665000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 5043) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4)) nil (26133 60288 26389 257000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5042) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 5043) nil (26133 60288 26369 757000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -1174) (undo-tree-id46 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1175) (undo-tree-id47 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1176) (undo-tree-id48 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -1177) (undo-tree-id49 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1178) (undo-tree-id50 . -1) (#("O" 0 1 (fontified t face font-lock-string-face)) . -1179) (undo-tree-id51 . -1) (#("v" 0 1 (fontified t face font-lock-string-face)) . -1180) (undo-tree-id52 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1181) (undo-tree-id53 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -1182) (undo-tree-id54 . -1) 1183) nil (26133 60288 26342 831000) 0 nil])
([nil nil ((1174 . 1178)) nil (26133 60288 26122 740000) 0 nil])
([nil nil ((7431 . 7432) (t 26133 60288 100608 605000)) nil (26133 60381 546534 984000) 0 nil])
([nil nil ((7432 . 7454)) nil (26133 60381 546527 281000) 0 nil])
([nil nil ((7454 . 7456)) nil (26133 60381 546520 3000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -7454) (undo-tree-id65 . -1) (#("." 0 1 (fontified t ws-butler-chg chg)) . -7455) (undo-tree-id66 . -1) 7456) nil (26133 60381 546510 95000) 0 nil])
([nil nil ((7465 . 7468) (7454 . 7455) (7454 . 7464)) nil (26133 60381 546467 855000) 0 nil])
([nil nil ((7468 . 7470)) nil (26133 60381 546447 744000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-string-face)) . -1174) (undo-tree-id67 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1175) (undo-tree-id68 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -1176) (undo-tree-id69 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1177) (undo-tree-id70 . -1) 1178 (t 26133 60381 620293 768000)) nil (26133 61136 757386 71000) 0 nil])
([nil nil ((1174 . 1183)) nil (26133 61136 757311 238000) 0 nil])
([nil nil ((4879 . 4884) (t 26133 61136 829475 122000)) nil (26133 61354 863859 781000) 0 nil])
([nil nil ((4884 . 4886)) nil (26133 61354 863852 484000) 0 nil])
([nil nil ((5049 . 5054)) nil (26133 61354 863845 114000) 0 nil])
([nil nil ((5054 . 5056)) nil (26133 61354 863827 707000) 0 nil])
([nil nil ((5623 . 5663) (t 26133 61354 940614 346000)) nil (26133 61430 737606 836000) 0 nil])
([nil nil ((#("                                       " 0 39 (fontified t ws-butler-chg chg)) . 5624) (undo-tree-id76 . -39) (undo-tree-id77 . -39) (undo-tree-id78 . -39) (undo-tree-id79 . -39) (undo-tree-id80 . -39) 5663) nil (26133 61430 737597 484000) 0 nil])
([nil nil ((5751 . 5771) (#(" " 0 1 (fontified t)) . 5751) (undo-tree-id75 . -1) 5752) nil (26133 61430 737569 818000) 0 nil])
([nil nil ((5788 . 5808) (#(" " 0 1 (fontified t)) . 5788) (undo-tree-id74 . -1) 5789) nil (26133 61430 737556 58000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t face font-lock-string-face)) . -5782) (undo-tree-id72 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -5783) (undo-tree-id73 . -1) 5784) nil (26133 61430 737541 77000) 0 nil])
([nil nil ((5782 . 5783)) nil (26133 61430 737523 355000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t face font-lock-string-face)) . -5822) (undo-tree-id71 . -1) 5823) nil (26133 61430 737514 96000) 0 nil])
([nil nil ((5822 . 5823)) nil (26133 61430 737460 114000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t face font-lock-string-face)) . -5782) (undo-tree-id81 . -1) 5783 (t 26133 61430 812312 631000)) nil (26133 61452 465312 590000) 0 nil])
([nil nil ((5782 . 5783)) nil (26133 61452 465265 683000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t face font-lock-string-face)) . -5822) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -5823) (undo-tree-id85 . -1) 5824 (t 26133 61452 540226 51000)) nil (26133 61581 357655 875000) 0 nil])
([nil nil ((5822 . 5824)) nil (26133 61581 357595 598000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t face font-lock-string-face)) . -5782) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 5783 (t 26133 61581 431711 60000)) nil (26133 61585 538197 210000) 0 nil])
([nil nil ((5782 . 5784)) nil (26133 61585 538147 7000) 0 nil])
([nil nil ((5400 . 5412) (t 26133 61585 615694 307000)) nil (26133 61608 235690 494000) 0 nil])
([nil nil ((5412 . 5417)) nil (26133 61608 235671 864000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -5413) (undo-tree-id105 . -1) (#("r" 0 1 (fontified t)) . -5414) (undo-tree-id106 . -1) (#("/" 0 1 (fontified t)) . -5415) (undo-tree-id107 . -1) (#(">" 0 1 (fontified t)) . -5416) (undo-tree-id108 . -1) 5417 (t 26133 61608 315603 377000)) nil (26133 61643 327334 350000) 0 nil])
([nil nil ((5413 . 5424)) nil (26133 61643 327308 499000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -5413) (undo-tree-id94 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -5414) (undo-tree-id95 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5415) (undo-tree-id96 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -5416) (undo-tree-id97 . -1) (#(">" 0 1 (fontified t ws-butler-chg chg)) . -5417) (undo-tree-id98 . -1) (#("<" 0 1 (fontified t ws-butler-chg chg)) . -5418) (undo-tree-id99 . -1) (#("/" 0 1 (fontified t ws-butler-chg chg)) . -5419) (undo-tree-id100 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -5420) (undo-tree-id101 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -5421) (undo-tree-id102 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5422) (undo-tree-id103 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -5423) (undo-tree-id104 . -1) 5424) nil (26133 61643 327293 406000) 0 nil])
([nil nil ((5413 . 5414)) nil (26133 61643 327178 295000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -5412) (undo-tree-id92 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -5413) (undo-tree-id93 . -1) 5414) nil (26133 61643 327169 203000) 0 nil])
([nil nil ((nil fontified nil 5489 . 5490) (nil fontified nil 5443 . 5489) (nil fontified nil 5427 . 5443) (nil fontified nil 5412 . 5427) (5412 . 5490)) nil (26133 61643 327151 795000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5401)) nil (26133 61643 327141 18000) 0 nil])
([nil nil ((5411 . 5412) 5401) nil (26133 61643 327133 481000) 0 nil])
([nil nil ((#("{locales.startOverText2[state.locale]} " 0 39 (ws-butler-chg chg fontified t)) . -5445) (undo-tree-id88 . -39) (undo-tree-id89 . -39) (undo-tree-id90 . -39) (undo-tree-id91 . -39) 5484) nil (26133 61643 327115 573000) 0 nil])
([nil nil ((#("<div className='StartOver-Text'> </div>" 0 15 (fontified t) 15 31 (fontified t face font-lock-string-face) 31 33 (fontified t) 33 34 (fontified t) 34 38 (fontified t) 38 39 (rear-nonsticky t fontified t)) . -5412) (undo-tree-id114 . -39) (undo-tree-id115 . -39) 5451 (t 26133 61643 399462 728000)) nil (26133 61653 795169 508000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5400) (undo-tree-id113 . -1) 5401) nil (26133 61836 166243 552000) 0 nil])
([nil nil ((5454 . 5466)) nil (26133 61876 425069 789000) 0 nil] [nil nil ((#("           " 0 1 (fontified t ws-butler-chg delete) 1 10 (fontified t) 10 11 (fontified t)) . -5400) (undo-tree-id109 . -11) (undo-tree-id111 . -11) (undo-tree-id112 . -11) 5411) ((5400 . 5411) (t 26133 61653 871420 720000)) (26133 61836 128000 725000) 0 nil])
([nil nil ((5466 . 5474)) nil (26133 61876 425063 919000) 0 nil])
([nil nil ((5991 . 5992) (5991 . 5992) (t 26133 61653 871420 720000)) ((#("
" 0 1 (fontified nil ws-butler-chg chg)) . 5991) (undo-tree-id116 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg)) . 5991)) (26133 61836 126990 932000) 0 nil])
([nil nil ((5473 . 5481)) nil (26133 61876 425057 586000) 0 nil])
nil
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -5479) (undo-tree-id126 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -5480) (undo-tree-id127 . -1) 5481) nil (26133 61876 425049 234000) 0 nil])
([nil nil ((5479 . 5485)) nil (26133 61876 425032 827000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg chg)) . -5479) (undo-tree-id120 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5480) (undo-tree-id121 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -5481) (undo-tree-id122 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -5482) (undo-tree-id123 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg)) . -5483) (undo-tree-id124 . -1) (#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5484) (undo-tree-id125 . -1) 5485) nil (26133 61876 425021 475000) 0 nil])
([nil nil ((5479 . 5482)) nil (26133 61876 424987 457000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t ws-butler-chg chg)) . -5480) (undo-tree-id118 . -1) (#("{" 0 1 (fontified t ws-butler-chg chg)) . -5481) (undo-tree-id119 . -1) 5482) nil (26133 61876 424978 679000) 0 nil])
([nil nil ((5480 . 5482)) nil (26133 61876 424961 309000) 0 nil])
([nil nil ((5473 . 5474)) nil (26133 61876 424954 883000) 0 nil])
([nil nil ((5483 . 5484)) nil (26133 61876 424948 216000) 0 nil])
([nil nil ((5483 . 5487)) nil (26133 61876 424941 957000) 0 nil])
([nil nil ((5486 . 5487)) nil (26133 61876 424935 364000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5486) (undo-tree-id117 . -1) 5487) nil (26133 61876 424926 772000) 0 nil])
([nil nil ((5486 . 5490)) nil (26133 61876 424892 494000) 0 nil])
([nil nil ((#("           " 0 1 (fontified t ws-butler-chg delete) 1 10 (fontified t) 10 11 (fontified t)) . 5400) 5490) nil (26133 61876 424873 365000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t face font-lock-string-face)) . -5475) (undo-tree-id128 . -1) (#("0" 0 1 (fontified t face font-lock-string-face)) . -5476) (undo-tree-id129 . -1) (#("v" 0 1 (fontified t face font-lock-string-face)) . -5477) (undo-tree-id130 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -5478) (undo-tree-id131 . -1) 5479 (t 26133 61876 502464 761000)) nil (26133 61912 583323 125000) 0 nil])
([nil nil ((5475 . 5478)) nil (26133 61912 583218 737000) 0 nil])
([nil nil ((#("
    */" 0 1 (fontified t face font-lock-comment-face c-in-sws t) 1 7 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 5049) (undo-tree-id135 . -7) (undo-tree-id136 . -7) (t 26133 61912 658262 765000)) nil (26133 61922 529853 12000) 0 nil])
([nil nil ((#("
    /*" 0 1 (fontified t) 1 5 (fontified t c-in-sws t c-is-sws t) 5 6 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 6 7 (fontified t face font-lock-comment-delimiter-face c-in-sws t)) . 4879) (undo-tree-id132 . -7) (undo-tree-id133 . -7) (undo-tree-id134 . -7)) nil (26133 61922 529828 364000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t face font-lock-string-face)) . -1179) (undo-tree-id142 . -1) (#("v" 0 1 (fontified t face font-lock-string-face)) . -1180) (undo-tree-id143 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1181) (undo-tree-id144 . -1) 1182 (t 26133 61922 602207 798000)) nil (26133 61972 883014 714000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 1179)) nil (26133 61972 882994 844000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -1174) (undo-tree-id137 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1175) (undo-tree-id138 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1176) (undo-tree-id139 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -1177) (undo-tree-id140 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1178) (undo-tree-id141 . -1) 1179) nil (26133 61972 882984 177000) 0 nil])
([nil nil ((1174 . 1178)) nil (26133 61972 882912 11000) 0 nil])
([nil nil ((3092 . 3096) (t 26133 61972 953933 127000)) nil (26137 44952 5819 306000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 3096)) nil (26137 44973 199174 740000) 0 nil] [nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . 3096)) ((nil ws-butler-chg delete 3097 . 3098) (3096 . 3097)) (26137 44952 5427 492000) 0 nil])
([nil nil ((3092 . 3093)) nil (26137 44973 199168 981000) 0 nil])
nil
([nil nil ((3108 . 3113)) nil (26137 44973 199163 277000) 0 nil])
([nil nil ((3109 . 3110)) nil (26137 44973 199156 796000) 0 nil])
([nil nil ((#("," 0 1 (ws-butler-chg chg fontified t)) . -3109) (undo-tree-id0 . -1) 3110) nil (26137 44973 199147 944000) 0 nil])
([nil nil ((3109 . 3115)) nil (26137 44973 199086 870000) 0 nil])
([nil nil ((3115 . 3119)) nil (26137 44973 199068 352000) 0 nil])
([nil nil ((8912 . 8922) (t 26137 44973 278438 237000)) nil (26137 45082 595736 27000) 0 nil])
([nil nil ((8921 . 8925)) nil (26137 45082 595682 824000) 0 nil])
([nil nil ((8925 . 8933)) nil (26137 45082 595677 213000) 0 nil])
([nil nil ((8933 . 8936)) nil (26137 45082 595671 361000) 0 nil])
([nil nil ((8936 . 8941)) nil (26137 45082 595665 361000) 0 nil])
([nil nil ((#("u" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8939) (undo-tree-id1 . -1) (#("c" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8940) (undo-tree-id2 . -1) 8941) nil (26137 45082 595656 731000) 0 nil])
([nil nil ((8939 . 8944)) nil (26137 45082 595618 46000) 0 nil])
([nil nil ((8944 . 8948)) nil (26137 45082 595611 398000) 0 nil])
([nil nil ((8948 . 8959)) nil (26137 45082 595593 509000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t)) . -3107) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -3108) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("." 0 1 (fontified t)) . -3109) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("i" 0 1 (fontified t)) . -3110) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("t" 0 1 (fontified t)) . -3111) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("a" 0 1 (fontified t)) . -3112) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("l" 0 1 (fontified t)) . -3113) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("i" 0 1 (fontified t)) . -3114) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("c" 0 1 (fontified t)) . -3115) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("s" 0 1 (fontified t)) . -3116) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("(" 0 1 (fontified t)) . -3117) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (#(")" 0 1 (fontified t)) . -3118) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#(" " 0 1 (fontified t)) . -3119) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#("+" 0 1 (fontified t)) . -3120) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t)) . -3121) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -3122) (undo-tree-id48 . -1) 3123 (t 26137 45082 678073 825000)) nil (26137 45109 117152 710000) 0 nil])
([nil nil ((3107 . 3108)) nil (26137 45117 193573 933000) 0 nil] [nil nil ((3107 . 3108)) ((#("s" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . 3107)) (26137 45109 116532 693000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified t)) . -3093) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("+" 0 1 (fontified t)) . -3094) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#(" " 0 1 (fontified t)) . -3095) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . -3096) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 3097) nil (26137 45117 193552 562000) 0 nil])
nil
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -8902) (undo-tree-id72 . -1) (#("T" 0 1 (face font-lock-string-face fontified t)) . -8903) (undo-tree-id73 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -8904) (undo-tree-id74 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -8905) (undo-tree-id75 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -8906) (undo-tree-id76 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -8907) (undo-tree-id77 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -8908) (undo-tree-id78 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -8909) (undo-tree-id79 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -8910) (undo-tree-id80 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -8911) (undo-tree-id81 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -8912) (undo-tree-id82 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -8913) (undo-tree-id83 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -8914) (undo-tree-id84 . -1) 8915 (t 26137 45117 269957 564000)) nil (26137 45173 578542 327000) 0 nil])
([nil nil ((8902 . 8903)) nil (26137 45173 578483 142000) 0 nil])
([nil nil ((#("\\" 0 1 (ws-butler-chg chg fontified t)) . -8902) (undo-tree-id71 . -1) 8903) nil (26137 45173 578474 513000) 0 nil])
([nil nil ((8902 . 8914)) nil (26137 45173 578437 902000) 0 nil])
([nil nil ((8914 . 8916)) nil (26137 45184 677995 878000) 0 nil])
([nil nil ((2985 . 2986) (t 26137 45185 469727 83000)) nil (26137 45328 118711 743000) 0 nil] [nil nil ((8918 . 8919) (t 26137 45173 653767 128000)) ((#("{" 0 1 (fontified t)) . 8918)) (26137 45184 528569 385000) 0 nil])
([nil nil ((3198 . 3202) (3149 . 3150) (3196 . 3197)) nil (26137 45328 118704 798000) 0 nil])
([nil nil ((8943 . 8944)) ((#("}" 0 1 (fontified t)) . 8943) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (t 26137 45180 445744 115000)) (26137 45180 372546 993000) 0 nil])
([nil nil ((3377 . 3378) (nil rear-nonsticky nil 3423 . 3424) (nil fontified nil 3422 . 3424) (nil fontified nil 3383 . 3422) (nil fontified nil 3381 . 3383) (nil fontified nil 3377 . 3381) (nil fontified nil 3359 . 3377) (nil fontified nil 3357 . 3359) (nil fontified nil 3356 . 3357) (nil fontified nil 3334 . 3356) (nil fontified nil 3333 . 3334) (nil fontified nil 3332 . 3333) (nil fontified nil 3325 . 3332) (nil fontified nil 3323 . 3325) (nil fontified nil 3322 . 3323) (nil fontified nil 3321 . 3322) (nil fontified nil 3223 . 3321) (nil fontified nil 3221 . 3223) (nil fontified nil 3217 . 3221) (nil fontified nil 3215 . 3217) (nil fontified nil 3214 . 3215) (nil fontified nil 3213 . 3214) (nil fontified nil 3202 . 3213) (3202 . 3424)) nil (26137 45328 118693 113000) 0 nil])
nil
([nil nil ((3425 . 3430)) nil (26137 45328 118671 261000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -3425) (undo-tree-id93 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -3426) (undo-tree-id94 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -3427) (undo-tree-id95 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -3428) (undo-tree-id96 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -3429) (undo-tree-id97 . -1) 3430) nil (26137 45328 118661 95000) 0 nil])
([nil nil ((#("The dinosaurs may not have died at the same time. The tyrannosaur could have been scavenging on a Triceratops " 0 97 (face font-lock-string-face fontified t ws-butler-chg chg) 97 98 (face font-lock-string-face fontified t ws-butler-chg chg) 98 99 (face font-lock-string-face fontified t ws-butler-chg chg) 99 101 (face font-lock-string-face fontified t ws-butler-chg chg) 101 108 (face font-lock-string-face fontified t ws-butler-chg chg) 108 109 (face font-lock-string-face fontified t ws-butler-chg chg) 109 110 (face font-lock-string-face fontified t ws-butler-chg chg)) . 3224) (undo-tree-id91 . -110) (undo-tree-id92 . -110)) nil (26137 45328 118633 502000) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-string-face fontified t ws-butler-chg chg)) . -3213) (undo-tree-id90 . -1) 3214) nil (26137 45328 118618 984000) 0 nil])
([nil nil ((3213 . 3214)) nil (26137 45328 118606 243000) 0 nil])
([nil nil ((#("Triceratops that was already dead" 0 1 (face font-lock-string-face fontified t) 1 3 (face font-lock-string-face fontified t) 3 10 (face font-lock-string-face fontified t) 10 11 (face font-lock-string-face fontified t) 11 12 (face font-lock-string-face fontified t) 12 33 (face font-lock-string-face fontified t)) . -3094) (undo-tree-id88 . -33) (undo-tree-id89 . -33) 3127) nil (26137 45454 735353 790000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face fontified t)) . -3093) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 3094) nil (26137 45529 455068 686000) 0 nil] [nil nil ((#("." 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 3094)) ((3094 . 3095)) (26137 45454 548374 702000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-string-face ws-butler-chg delete fontified t)) . 3093)) nil (26137 45529 455052 983000) 0 nil])
([nil nil ((3190 . 3191)) ((#(" " 0 1 (face font-lock-string-face fontified t)) . 3190)) (26137 45454 370184 194000) 0 nil])
([nil nil ((#(".replace(/Triceratops/i, 'Triceratops'.italics())" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (face font-lock-string-face fontified t syntax-table (7 . 47)) 10 11 (face font-lock-string-face fontified t) 11 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t) 13 14 (face font-lock-string-face fontified t) 14 15 (face font-lock-string-face fontified t) 15 16 (face font-lock-string-face fontified t) 16 17 (face font-lock-string-face fontified t) 17 18 (face font-lock-string-face fontified t) 18 19 (face font-lock-string-face fontified t) 19 20 (face font-lock-string-face fontified t) 20 21 (face font-lock-string-face fontified t) 21 22 (face font-lock-string-face fontified t syntax-table (7 . 47)) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (face font-lock-string-face fontified t) 26 27 (face font-lock-string-face fontified t) 27 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (face font-lock-string-face fontified t) 31 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face fontified t) 33 34 (face font-lock-string-face fontified t) 34 35 (face font-lock-string-face fontified t) 35 36 (face font-lock-string-face fontified t) 36 37 (face font-lock-string-face fontified t) 37 38 (face font-lock-string-face fontified t) 38 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 49 (fontified t)) . -8978) (undo-tree-id278 . -49) (undo-tree-id279 . -49) 9027) nil (26137 45529 455045 205000) 0 nil])
([nil nil ((8775 . 8796) (t 26137 45328 197240 84000)) ((#("0 + 'Triceratops'.ita" 0 1 (fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (face font-lock-string-face ws-butler-chg chg fontified t) 5 6 (face font-lock-string-face ws-butler-chg chg fontified t) 6 7 (face font-lock-string-face ws-butler-chg chg fontified t) 7 8 (face font-lock-string-face ws-butler-chg chg fontified t) 8 9 (face font-lock-string-face ws-butler-chg chg fontified t) 9 10 (face font-lock-string-face ws-butler-chg chg fontified t) 10 11 (face font-lock-string-face ws-butler-chg chg fontified t) 11 12 (face font-lock-string-face ws-butler-chg chg fontified t) 12 13 (face font-lock-string-face ws-butler-chg chg fontified t) 13 14 (face font-lock-string-face ws-butler-chg chg fontified t) 14 15 (face font-lock-string-face ws-butler-chg chg fontified t) 15 16 (face font-lock-string-face ws-butler-chg chg fontified t) 16 17 (face font-lock-string-face ws-butler-chg chg fontified t) 17 18 (ws-butler-chg chg fontified t) 18 19 (ws-butler-chg chg fontified t) 19 20 (ws-butler-chg chg fontified t) 20 21 (ws-butler-chg chg fontified t)) . 8775) (undo-tree-id262 . -21) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -21)) (26137 45454 173565 594000) 0 nil])
([nil nil ((#("that was already dead" 0 1 (face font-lock-string-face fontified t) 1 21 (face font-lock-string-face fontified t)) . 3189) (undo-tree-id276 . -21) (undo-tree-id277 . -21) 3210) nil (26137 45529 455030 150000) 0 nil])
([nil nil ((8796 . 8797)) ((#("c" 0 1 (ws-butler-chg chg fontified t)) . 8796) (undo-tree-id260 . -1) (undo-tree-id261 . -1)) (26137 45454 6231 470000) 0 nil])
([nil nil ((3093 . 3105)) nil (26137 45529 455015 909000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -8796) (undo-tree-id184 . -1) 8797) ((8796 . 8797)) (26137 45453 827630 657000) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -3104) (undo-tree-id275 . -1) 3105) nil (26137 45529 455008 317000) 0 nil])
([nil nil ((8796 . 8805)) ((#("lics() + " 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t) 8 9 (ws-butler-chg chg fontified t)) . 8796) (undo-tree-id258 . -9) (undo-tree-id259 . -9)) (26137 45453 659515 362000) 0 nil])
([nil nil ((3104 . 3106)) nil (26137 45529 454996 817000) 0 nil])
([nil nil ((8805 . 8813)) ((#("locales." 0 1 (ws-butler-chg chg fontified t) 1 2 (ws-butler-chg chg fontified t) 2 3 (ws-butler-chg chg fontified t) 3 4 (ws-butler-chg chg fontified t) 4 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t)) . 8805) (undo-tree-id256 . -8) (undo-tree-id257 . -8)) (26137 45453 495441 158000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3126 . 3127) (nil fontified nil 3107 . 3127) (nil fontified nil 3106 . 3107) (3106 . 3127)) nil (26137 45529 454990 150000) 0 nil])
([nil nil ((#("." 0 1 (ws-butler-chg chg fontified t)) . -8792) (undo-tree-id163 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -8793) (undo-tree-id164 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -8794) (undo-tree-id165 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -8795) (undo-tree-id166 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -8796) (undo-tree-id167 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -8797) (undo-tree-id168 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t)) . -8798) (undo-tree-id169 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -8799) (undo-tree-id170 . -1) (#("(" 0 1 (ws-butler-chg chg fontified t)) . -8800) (undo-tree-id171 . -1) (#(")" 0 1 (ws-butler-chg chg fontified t)) . -8801) (undo-tree-id172 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8802) (undo-tree-id173 . -1) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8803) (undo-tree-id174 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8804) (undo-tree-id175 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -8805) (undo-tree-id176 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -8806) (undo-tree-id177 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t)) . -8807) (undo-tree-id178 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -8808) (undo-tree-id179 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -8809) (undo-tree-id180 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -8810) (undo-tree-id181 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -8811) (undo-tree-id182 . -1) (#("." 0 1 (ws-butler-chg chg fontified t)) . -8812) (undo-tree-id183 . -1) 8813) ((8792 . 8813)) (26137 45453 224007 839000) 0 nil])
([nil nil ((3127 . 3128)) nil (26137 45529 454981 521000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -8776) (undo-tree-id147 . -1) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -8777) (undo-tree-id148 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -8778) (undo-tree-id149 . -1) (#("'" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8779) (undo-tree-id150 . -1) (#("T" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8780) (undo-tree-id151 . -1) (#("r" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8781) (undo-tree-id152 . -1) (#("i" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8782) (undo-tree-id153 . -1) (#("c" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8783) (undo-tree-id154 . -1) (#("e" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8784) (undo-tree-id155 . -1) (#("r" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8785) (undo-tree-id156 . -1) (#("a" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8786) (undo-tree-id157 . -1) (#("t" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8787) (undo-tree-id158 . -1) (#("o" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8788) (undo-tree-id159 . -1) (#("p" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8789) (undo-tree-id160 . -1) (#("s" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8790) (undo-tree-id161 . -1) (#("'" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -8791) (undo-tree-id162 . -1) 8792) ((8776 . 8792)) (26137 45452 799809 938000) 0 nil])
([nil nil ((#("\"dinnerText1\":{\"en\": \".\",
                   \"es\": \"ESP<This is placeholder Dinner Text.>\"}," 0 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t) 13 15 (fontified t) 15 19 (face font-lock-string-face fontified t) 19 21 (fontified t) 21 22 (face font-lock-string-face fontified t) 22 23 (face font-lock-string-face fontified t ws-butler-chg delete) 23 24 (face font-lock-string-face fontified t) 24 26 (fontified t) 26 45 (fontified t) 45 49 (face font-lock-string-face fontified t) 49 51 (fontified t) 51 90 (face font-lock-string-face fontified t) 90 91 (fontified t) 91 92 (fontified t rear-nonsticky t)) . -3202) (undo-tree-id273 . -92) (undo-tree-id274 . -92) 3294) nil (26137 45529 454973 688000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-string-face fontified t)) . -9009) (undo-tree-id126 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -9010) (undo-tree-id127 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -9011) (undo-tree-id128 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -9012) (undo-tree-id129 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -9013) (undo-tree-id130 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -9014) (undo-tree-id131 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -9015) (undo-tree-id132 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -9016) (undo-tree-id133 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -9017) (undo-tree-id134 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -9018) (undo-tree-id135 . -1) (#("." 0 1 (fontified t)) . -9019) (undo-tree-id136 . -1) (#("i" 0 1 (fontified t)) . -9020) (undo-tree-id137 . -1) (#("t" 0 1 (fontified t)) . -9021) (undo-tree-id138 . -1) (#("a" 0 1 (fontified t)) . -9022) (undo-tree-id139 . -1) (#("l" 0 1 (fontified t)) . -9023) (undo-tree-id140 . -1) (#("i" 0 1 (fontified t)) . -9024) (undo-tree-id141 . -1) (#("c" 0 1 (fontified t)) . -9025) (undo-tree-id142 . -1) (#("s" 0 1 (fontified t)) . -9026) (undo-tree-id143 . -1) (#("(" 0 1 (fontified t)) . -9027) (undo-tree-id144 . -1) (#(")" 0 1 (fontified t)) . -9028) (undo-tree-id145 . -1) (#(")" 0 1 (fontified t)) . -9029) (undo-tree-id146 . -1) 9030) ((9009 . 9030)) (26137 45452 585640 278000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3197) (undo-tree-id272 . -1) 3198) nil (26137 45529 454958 410000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -8988) (undo-tree-id105 . -1) (#("(" 0 1 (fontified t)) . -8989) (undo-tree-id106 . -1) (#("/" 0 1 (face font-lock-string-face syntax-table (7 . 47) fontified t)) . -8990) (undo-tree-id107 . -1) (#("T" 0 1 (face font-lock-string-face fontified t)) . -8991) (undo-tree-id108 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -8992) (undo-tree-id109 . -1) (#("i" 0 1 (face font-lock-string-face fontified t)) . -8993) (undo-tree-id110 . -1) (#("c" 0 1 (face font-lock-string-face fontified t)) . -8994) (undo-tree-id111 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -8995) (undo-tree-id112 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -8996) (undo-tree-id113 . -1) (#("a" 0 1 (face font-lock-string-face fontified t)) . -8997) (undo-tree-id114 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -8998) (undo-tree-id115 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -8999) (undo-tree-id116 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -9000) (undo-tree-id117 . -1) (#("s" 0 1 (face font-lock-string-face fontified t)) . -9001) (undo-tree-id118 . -1) (#("/" 0 1 (face font-lock-string-face syntax-table (7 . 47) fontified t)) . -9002) (undo-tree-id119 . -1) (#("i" 0 1 (fontified t)) . -9003) (undo-tree-id120 . -1) (#("," 0 1 (fontified t)) . -9004) (undo-tree-id121 . -1) (#(" " 0 1 (fontified t)) . -9005) (undo-tree-id122 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -9006) (undo-tree-id123 . -1) (#("T" 0 1 (face font-lock-string-face fontified t)) . -9007) (undo-tree-id124 . -1) (#("r" 0 1 (face font-lock-string-face fontified t)) . -9008) (undo-tree-id125 . -1) 9009) ((8988 . 9009)) (26137 45452 407358 37000) 0 nil])
([nil nil ((#("    " 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t)) . -3197) (undo-tree-id269 . -4) (undo-tree-id270 . -4) (undo-tree-id271 . -4) 3201) nil (26137 45529 454944 225000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -8981) (undo-tree-id98 . -1) (#("r" 0 1 (fontified t)) . -8982) (undo-tree-id99 . -1) (#("e" 0 1 (fontified t)) . -8983) (undo-tree-id100 . -1) (#("p" 0 1 (fontified t)) . -8984) (undo-tree-id101 . -1) (#("l" 0 1 (fontified t)) . -8985) (undo-tree-id102 . -1) (#("a" 0 1 (fontified t)) . -8986) (undo-tree-id103 . -1) (#("c" 0 1 (fontified t)) . -8987) (undo-tree-id104 . -1) 8988) ((8981 . 8988)) (26137 45452 46519 820000) 0 nil])
([nil nil ((9194 . 9204)) nil (26137 45529 454900 263000) 0 nil])
([nil nil ((8720 . 8722)) ((#("[]" 0 2 (fontified t)) . 8720) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1)) (26137 45451 860169 418000) 0 nil])
([nil nil ((9203 . 9210)) nil (26137 45529 454893 948000) 0 nil])
([nil nil ((8721 . 8733)) ((#("state.locale" 0 12 (fontified t)) . 8721)) (26137 45451 693233 408000) 0 nil])
([nil nil ((9210 . 9215)) nil (26137 45529 454887 226000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -8978) (undo-tree-id192 . -1) (#("(" 0 1 (fontified t)) . -8979) (undo-tree-id193 . -1) (#(")" 0 1 (fontified t)) . -8980) (undo-tree-id194 . -1) (#("[" 0 1 (fontified t)) . -8981) (undo-tree-id195 . -1) (#("s" 0 1 (fontified t)) . -8982) (undo-tree-id196 . -1) (#("t" 0 1 (fontified t)) . -8983) (undo-tree-id197 . -1) (#("a" 0 1 (fontified t)) . -8984) (undo-tree-id198 . -1) (#("t" 0 1 (fontified t)) . -8985) (undo-tree-id199 . -1) (#("e" 0 1 (fontified t)) . -8986) (undo-tree-id200 . -1) (#("." 0 1 (fontified t)) . -8987) (undo-tree-id201 . -1) (#("l" 0 1 (fontified t)) . -8988) (undo-tree-id202 . -1) (#("o" 0 1 (fontified t)) . -8989) (undo-tree-id203 . -1) (#("c" 0 1 (fontified t)) . -8990) (undo-tree-id204 . -1) (#("a" 0 1 (fontified t)) . -8991) (undo-tree-id205 . -1) (#("l" 0 1 (fontified t)) . -8992) (undo-tree-id206 . -1) (#("e" 0 1 (fontified t)) . -8993) (undo-tree-id207 . -1) (#("]" 0 1 (fontified t)) . -8994) (undo-tree-id208 . -1) 8995) ((8978 . 8995)) (26137 45451 558387 315000) 0 nil] [nil nil ((8733 . 8783)) ((#("
                                                 " 0 50 (ws-butler-chg chg fontified t)) . 8733) (undo-tree-id185 . -50) (undo-tree-id186 . -50) (undo-tree-id187 . -1)) (26137 45379 40323 878000) 0 nil])
([nil nil ((9215 . 9230)) nil (26137 45529 454879 763000) 0 nil])
([nil nil ((8978 . 8981)) ((#("t()" 0 3 (fontified t)) . 8978)) (26137 45451 344681 394000) 0 nil])
nil
([nil nil ((9230 . 9241)) nil (26137 45529 454860 467000) 0 nil])
([nil nil ((8790 . 8792)) ((#("[]" 0 2 (fontified t)) . 8790) (undo-tree-id244 . -1) (undo-tree-id245 . -2) (undo-tree-id246 . -2) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -1) (undo-tree-id252 . -1)) (26137 45451 158606 229000) 0 nil])
([nil nil ((#("0" 0 1 (face font-lock-string-face fontified t)) . -2985) (undo-tree-id282 . -1) 2986 (t 26137 45529 539417 901000)) nil (26137 45554 290107 781000) 0 nil])
([nil nil ((8791 . 8803)) ((#("state.locale" 0 12 (fontified t)) . 8791)) (26137 45450 970404 188000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg delete fontified t)) . 9147) (#("<" 0 1 (fontified t)) . 9147) (t 26137 45554 371104 273000)) nil (26137 45624 359144 179000) 0 nil])
([nil nil ((8862 . 8864)) ((#("[]" 0 2 (fontified t)) . 8862) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1)) (26137 45450 793100 810000) 0 nil])
([nil nil ((9147 . 9151)) nil (26137 45624 359135 828000) 0 nil])
([nil nil ((8863 . 8875)) ((#("state.locale" 0 12 (fontified t)) . 8863)) (26137 45450 624003 927000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -9246) (undo-tree-id285 . -1) 9247) nil (26137 45624 359128 13000) 0 nil])
([nil nil ((8804 . 8821)) ((#(" + 'Ticeratops' _" 0 3 (fontified t) 3 15 (face font-lock-string-face fontified t) 15 16 (fontified t) 16 17 (fontified t ws-butler-chg chg)) . 8804) (undo-tree-id234 . -17) (undo-tree-id235 . -16) (undo-tree-id236 . -16) (undo-tree-id237 . -16) (undo-tree-id238 . -16) (undo-tree-id239 . -16) (undo-tree-id240 . -17)) (26137 45450 437680 214000) 0 nil])
([nil nil ((9246 . 9249)) nil (26137 45624 359115 791000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg)) . -8820) (undo-tree-id191 . -1) 8821) ((8820 . 8821)) (26137 45450 269512 114000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -9321) (undo-tree-id284 . -1) 9322) nil (26137 45624 359107 717000) 0 nil])
([nil nil ((8820 . 8839)) ((#("+ locales.dinnerSuv" 0 18 (fontified t) 18 19 (fontified t ws-butler-chg chg)) . 8820) (undo-tree-id227 . -19) (undo-tree-id228 . -18) (undo-tree-id229 . -18) (undo-tree-id230 . -18) (undo-tree-id231 . -18) (undo-tree-id232 . -18) (undo-tree-id233 . -19)) (26137 45450 110687 493000) 0 nil])
([nil nil ((9321 . 9324)) nil (26137 45624 359094 828000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg)) . -8838) (undo-tree-id190 . -1) 8839) ((8838 . 8839)) (26137 45449 941229 635000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -9323) (undo-tree-id283 . -1) 9324) nil (26137 45624 359086 236000) 0 nil])
([nil nil ((8838 . 8844)) ((#("bText-" 0 5 (fontified t) 5 6 (fontified t ws-butler-chg chg)) . 8838) (undo-tree-id220 . -6) (undo-tree-id221 . -5) (undo-tree-id222 . -5) (undo-tree-id223 . -5) (undo-tree-id224 . -5) (undo-tree-id225 . -5) (undo-tree-id226 . -6)) (26137 45449 782133 188000) 0 nil])
([nil nil ((9323 . 9324)) nil (26137 45624 359049 366000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg chg)) . -8843) (undo-tree-id189 . -1) 8844) ((8843 . 8844)) (26137 45449 613938 554000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 9282)) nil (26137 45624 359041 125000) 0 nil])
([nil nil ((8843 . 8847)) ((#("1[]B" 0 3 (fontified t) 3 4 (fontified t ws-butler-chg chg)) . 8843) (undo-tree-id213 . -4) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -4)) (26137 45449 462798 975000) 0 nil])
([nil nil ((9282 . 9285)) nil (26137 45624 359422 232000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t ws-butler-chg chg)) . -8846) (undo-tree-id188 . -1) 8847) ((8846 . 8847)) (26137 45449 314815 277000) 0 nil])
([nil nil ((9250 . 9263) (t 26137 45654 141932 732000)) nil (26137 45738 825433 146000) 0 nil] [nil nil ((9285 . 9298)) ((#("
            " 0 13 (ws-butler-chg chg fontified t)) . 9285) (undo-tree-id286 . -13) (undo-tree-id287 . -13) (undo-tree-id288 . -1)) (26137 45624 359015 884000) 0 nil])
([nil nil ((8845 . 8857)) ((#("state.locale" 0 12 (fontified t)) . 8845) (undo-tree-id209 . -12) (undo-tree-id210 . -12) (undo-tree-id211 . -12) (undo-tree-id212 . -12) (t 26137 45421 580900 310000)) (26137 45421 495532 621000) 0 nil])
([nil nil ((9263 . 9270)) nil (26137 45738 825425 998000) 0 nil])
nil
nil
([nil nil ((#("r" 0 1 (ws-butler-chg chg fontified t)) . -9269) (undo-tree-id291 . -1) 9270) nil (26137 45738 825418 257000) 0 nil])
([nil nil ((9269 . 9280)) nil (26137 45738 825406 313000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -9279) (undo-tree-id290 . -1) 9280) nil (26137 45738 825399 146000) 0 nil])
([nil nil ((9279 . 9292)) nil (26137 45738 825385 869000) 0 nil])
([nil nil ((9292 . 9296)) nil (26137 45738 825379 350000) 0 nil])
([nil nil ((#("d" 0 1 (ws-butler-chg chg fontified t)) . -9295) (undo-tree-id289 . -1) 9296) nil (26137 45738 825369 924000) 0 nil])
([nil nil ((9295 . 9308)) nil (26137 45738 825320 314000) 0 nil])
([nil nil ((#("<div> this is <i> italicizes </i> text </div>" 0 6 (fontified t) 6 10 (face font-lock-constant-face fontified t) 10 45 (fontified t)) . -9263) (undo-tree-id314 . -45) (undo-tree-id315 . -45) 9308 (t 26137 45738 909034 762000)) nil (26137 45881 282682 613000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -9250) (undo-tree-id313 . -1) 9251) nil (26137 45881 282666 150000) 0 nil])
([nil nil ((#("            " 0 1 (ws-butler-chg delete fontified t) 1 12 (fontified t)) . -9250) (undo-tree-id311 . -12) (undo-tree-id312 . -12) 9262) nil (26137 45881 282654 58000) 0 nil])
([nil nil ((8765 . 8770)) nil (26137 45881 282639 558000) 0 nil])
([nil nil ((8770 . 8773)) nil (26137 45881 282633 335000) 0 nil])
([nil nil ((8773 . 8794)) nil (26137 45881 282627 206000) 0 nil])
([nil nil ((8794 . 8796)) nil (26137 45881 282621 299000) 0 nil])
([nil nil ((8796 . 8798)) nil (26137 45881 282615 280000) 0 nil])
([nil nil ((8797 . 8802)) nil (26137 45881 282609 336000) 0 nil])
([nil nil ((8799 . 8803) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . 8798) (8798 . 8806) (8798 . 8799) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 8798) (undo-tree-id310 . -4) 8802) nil (26137 45881 282600 632000) 0 nil])
([nil nil ((8798 . 8806)) nil (26137 45881 282544 707000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9000 . 9001) (nil fontified nil 8992 . 9001) (nil fontified nil 8989 . 8992) (nil fontified nil 8965 . 8989) (nil fontified nil 8959 . 8965) (nil fontified nil 8957 . 8959) (nil fontified nil 8947 . 8957) (nil fontified nil 8946 . 8947) (nil fontified nil 8942 . 8946) (nil fontified nil 8934 . 8942) (nil fontified nil 8932 . 8934) (nil fontified nil 8931 . 8932) (nil fontified nil 8908 . 8931) (nil fontified nil 8902 . 8908) (nil fontified nil 8900 . 8902) (nil fontified nil 8892 . 8900) (nil fontified nil 8891 . 8892) (nil fontified nil 8887 . 8891) (nil fontified nil 8879 . 8887) (nil fontified nil 8876 . 8879) (nil fontified nil 8855 . 8876) (nil fontified nil 8849 . 8855) (nil fontified nil 8846 . 8849) (nil fontified nil 8840 . 8846) (nil fontified nil 8839 . 8840) (nil fontified nil 8835 . 8839) (nil fontified nil 8827 . 8835) (nil fontified nil 8812 . 8827) (nil fontified nil 8806 . 8812) (8806 . 9001)) nil (26137 45881 282533 225000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t ws-butler-chg chg)) . -8869) (undo-tree-id303 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -8870) (undo-tree-id304 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg)) . -8871) (undo-tree-id305 . -1) (#("T" 0 1 (fontified t ws-butler-chg chg)) . -8872) (undo-tree-id306 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -8873) (undo-tree-id307 . -1) (#("x" 0 1 (fontified t ws-butler-chg chg)) . -8874) (undo-tree-id308 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8875) (undo-tree-id309 . -1) 8876) nil (26137 45881 282500 707000) 0 nil])
([nil nil ((8869 . 8875)) nil (26137 45881 282466 59000) 0 nil])
([nil nil ((8874 . 8878)) nil (26137 45881 282459 522000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -8874) (undo-tree-id299 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8875) (undo-tree-id300 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -8876) (undo-tree-id301 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -8877) (undo-tree-id302 . -1) 8878) nil (26137 45881 282450 115000) 0 nil])
([nil nil ((8874 . 8878)) nil (26137 45881 282425 448000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -8877) (undo-tree-id298 . -1) 8878) nil (26137 45881 282417 689000) 0 nil])
([nil nil ((8877 . 8886)) nil (26137 45881 282405 652000) 0 nil])
([nil nil ((8942 . 8944)) nil (26137 45881 282399 652000) 0 nil])
([nil nil ((8943 . 8955)) nil (26137 45881 282393 652000) 0 nil])
([nil nil ((#("p" 0 1 (fontified nil ws-butler-chg chg)) . -8955) (8955 . 8956)) nil (26137 45881 282386 449000) 0 nil])
([nil nil ((9014 . 9015)) nil (26137 45881 282378 893000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -9014) (undo-tree-id297 . -1) 9015) nil (26137 45881 282371 319000) 0 nil])
([nil nil ((9014 . 9017)) nil (26137 45881 282360 134000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -9014) (undo-tree-id294 . -1) (#("[" 0 1 (fontified t ws-butler-chg chg)) . -9015) (undo-tree-id295 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -9016) (undo-tree-id296 . -1) 9017) nil (26137 45881 282350 801000) 0 nil])
([nil nil ((9014 . 9016)) nil (26137 45881 282329 320000) 0 nil])
([nil nil ((9015 . 9027)) nil (26137 45881 282323 116000) 0 nil])
([nil nil ((#("locales[state.vote + \"Text\"][state.locale].replace(\"Triceratops\", \"Triceratops\".italics())" 0 21 (fontified t) 21 27 (face font-lock-string-face fontified t) 27 39 (fontified t) 39 41 (fontified t) 41 42 (fontified t) 42 51 (fontified t) 51 58 (face font-lock-string-face fontified t) 58 64 (face font-lock-string-face fontified t) 64 66 (fontified t) 66 79 (face font-lock-string-face fontified t) 79 89 (fontified t) 89 90 (fontified t)) . -9434) (undo-tree-id292 . -90) (undo-tree-id293 . -90) 9524) nil (26137 45881 282949 740000) 0 nil])
([nil nil ((8857 . 8862)) nil (26137 45897 423279 896000) 0 nil] [nil nil ((9434 . 9435)) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 9434) (undo-tree-id316 . -1)) (26137 45881 282260 376000) 0 nil])
([nil nil ((8892 . 8898)) nil (26137 45897 423272 971000) 0 nil])
nil
([nil nil ((8967 . 8973)) nil (26137 45897 423651 652000) 0 nil])
([nil nil ((9045 . 9051)) nil (26137 45918 865985 423000) 0 nil] [nil nil ((8973 . 9004)) ((#("
                              " 0 31 (fontified t ws-butler-chg chg)) . 8973) (undo-tree-id317 . -31) (undo-tree-id318 . -31) (undo-tree-id319 . -1)) (26137 45897 423246 656000) 0 nil])
([nil nil ((9008 . 9013)) nil (26137 45918 865978 923000) 0 nil])
nil
([nil nil ((8932 . 8933)) nil (26137 45918 865973 34000) 0 nil])
([nil nil ((8933 . 8937)) nil (26137 45918 865966 571000) 0 nil])
([nil nil ((#("<div>{}</div>" 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t ws-butler-chg delete) 7 9 (fontified t) 9 12 (fontified t) 12 13 (fontified t)) . -9461) (undo-tree-id322 . -13) (undo-tree-id323 . -13) (undo-tree-id324 . -6) (undo-tree-id325 . -13) 9474) nil (26137 45918 865957 849000) 0 nil])
([nil nil ((9461 . 9463)) nil (26137 45918 865872 535000) 0 nil])
([nil nil ((9462 . 9466)) nil (26137 45918 865865 757000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t)) . -9465) (undo-tree-id321 . -1) 9466) nil (26137 45918 865858 424000) 0 nil])
([nil nil ((9465 . 9472)) nil (26137 45918 865845 591000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -9471) (undo-tree-id320 . -1) 9472) nil (26137 45918 865836 813000) 0 nil])
([nil nil ((9471 . 9472)) nil (26137 45918 865800 554000) 0 nil])
([nil nil ((9472 . 9475)) nil (26137 45918 865781 17000) 0 nil])
([nil nil ((8862 . 8863) (t 26137 45918 947362 301000)) nil (26137 45945 76087 426000) 0 nil])
([nil nil ((8893 . 8894)) nil (26137 45945 76080 167000) 0 nil])
([nil nil ((8974 . 8975)) nil (26137 45945 76074 0) 0 nil])
([nil nil ((8939 . 8940)) nil (26137 45945 76067 352000) 0 nil])
([nil nil ((9022 . 9023)) nil (26137 45945 76059 704000) 0 nil])
([nil nil ((9060 . 9061)) nil (26137 45945 76040 593000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -8954) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#("u" 0 1 (fontified t)) . -8955) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#("b" 0 1 (fontified t)) . -8956) (undo-tree-id339 . -1) 8957 (t 26137 45945 159140 787000)) nil (26137 45967 311274 971000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -9036) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (#("u" 0 1 (fontified t)) . -9037) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (#("b" 0 1 (fontified t)) . -9038) (undo-tree-id332 . -1) 9039) nil (26137 45986 937439 181000) 0 nil])
([nil nil ((3196 . 3200) (#(" " 0 1 (fontified nil)) . -3148) (3196 . 3197) (t 26137 45967 390956 669000)) nil (26137 46020 724894 410000) 0 nil] [nil nil ((3129 . 3148) (t 26137 45967 390956 669000)) ((#("
                  " 0 19 (ws-butler-chg chg fontified t)) . 3129) (undo-tree-id340 . -19) (undo-tree-id341 . -19) (undo-tree-id342 . -1)) (26137 45986 936365 152000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil ws-butler-chg chg)) . -3374) (nil rear-nonsticky nil 3421 . 3422) (nil fontified nil 3420 . 3422) (nil fontified nil 3381 . 3420) (nil fontified nil 3379 . 3381) (nil fontified nil 3375 . 3379) (nil fontified nil 3374 . 3375) (nil fontified nil 3356 . 3374) (nil fontified nil 3355 . 3356) (nil fontified nil 3354 . 3355) (nil fontified nil 3353 . 3354) (nil fontified nil 3352 . 3353) (nil fontified nil 3351 . 3352) (nil fontified nil 3332 . 3351) (nil fontified nil 3331 . 3332) (nil fontified nil 3318 . 3331) (nil fontified nil 3220 . 3318) (nil fontified nil 3218 . 3220) (nil fontified nil 3214 . 3218) (nil fontified nil 3212 . 3214) (nil fontified nil 3211 . 3212) (nil fontified nil 3200 . 3211) (3200 . 3422)) nil (26137 46020 724881 503000) 0 nil])
nil
([nil nil ((3211 . 3212)) nil (26137 46020 724858 855000) 0 nil])
([nil nil ((2985 . 2986)) nil (26137 46020 724852 984000) 0 nil])
([nil nil ((#("1" 0 1 (face font-lock-string-face ws-butler-chg chg fontified t)) . -2985) (undo-tree-id348 . -1) 2986) nil (26137 46020 724845 521000) 0 nil])
([nil nil ((2985 . 2986)) nil (26137 46020 724834 40000) 0 nil])
([nil nil ((#("Triceratops that was already dead." 0 12 (face font-lock-string-face fontified t) 12 13 (face font-lock-string-face fontified t) 13 32 (face font-lock-string-face fontified t) 32 33 (face font-lock-string-face rear-nonsticky t fontified t) 33 34 (face font-lock-string-face fontified t)) . -3094) (undo-tree-id346 . -34) (undo-tree-id347 . -34) 3128) nil (26137 46020 724825 836000) 0 nil])
([nil nil ((#("The dinosaurs may not have died at the same time. The tyrannosaur could have been scavenging on a Triceratops" 0 97 (face font-lock-string-face fontified t ws-butler-chg chg) 97 109 (face font-lock-string-face fontified t ws-butler-chg chg)) . 3189) (undo-tree-id343 . -109) (undo-tree-id344 . -109) (undo-tree-id345 . -109)) nil (26137 46020 724801 466000) 0 nil])
([nil nil ((9042 . 9043) (t 26137 46020 806527 490000)) nil (26137 46068 955178 745000) 0 nil])
([nil nil ((9058 . 9066)) nil (26137 46068 955171 523000) 0 nil])
([nil nil ((9062 . 9064)) nil (26137 46068 955165 60000) 0 nil])
([nil nil ((9064 . 9069)) nil (26137 46068 955158 449000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -9068) (undo-tree-id351 . -1) 9069) nil (26137 46068 955150 931000) 0 nil])
([nil nil ((9068 . 9073)) nil (26137 46068 955138 986000) 0 nil])
([nil nil ((9077 . 9109)) nil (26137 46068 955132 227000) 0 nil])
([nil nil ((9079 . 9110) (#("                               " 0 31 (ws-butler-chg chg fontified nil)) . 9078) (9078 . 9109) (9078 . 9079) (#("                               " 0 31 (ws-butler-chg chg fontified t)) . 9078) (undo-tree-id349 . -31) (undo-tree-id350 . -31) 9109) nil (26137 46068 955122 42000) 0 nil])
([nil nil ((9078 . 9109)) nil (26137 46068 955072 616000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9143 . 9144) (nil fontified nil 9143 . 9144) (nil fontified nil 9142 . 9143) (nil fontified nil 9129 . 9142) (nil fontified nil 9128 . 9129) (nil fontified nil 9125 . 9128) (nil fontified nil 9124 . 9125) (nil fontified nil 9110 . 9124) (nil fontified nil 9109 . 9110) (9109 . 9144)) nil (26137 46068 955005 987000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -9128) (undo-tree-id352 . -1) 9129 (t 26137 46069 38154 745000)) nil (26137 46098 81305 728000) 0 nil])
([nil nil ((9128 . 9129)) nil (26137 46098 81125 581000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -9060) (undo-tree-id354 . -1) 9061 (t 26137 46098 165935 876000)) nil (26137 46113 349393 261000) 0 nil])
([nil nil ((9060 . 9062)) nil (26137 46113 349380 168000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -9076) (undo-tree-id353 . -1) 9077) nil (26137 46113 349371 224000) 0 nil])
([nil nil ((9076 . 9078)) nil (26137 46113 349322 205000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -9076) (undo-tree-id358 . -1) (#("m" 0 1 (fontified t)) . -9077) (undo-tree-id359 . -1) 9078 (t 26137 46113 433822 917000)) nil (26137 46168 449544 584000) 0 nil])
([nil nil ((9076 . 9078)) nil (26137 46168 449527 918000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t)) . -9077) (undo-tree-id357 . -1) 9078) nil (26137 46168 449520 288000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -9060) (undo-tree-id355 . -1) (#("m" 0 1 (fontified t)) . -9061) (undo-tree-id356 . -1) 9062) nil (26137 46168 449504 529000) 0 nil])
([nil nil ((9060 . 9061)) nil (26137 46168 449443 363000) 0 nil])
([nil nil ((9650 . 9663) (t 26137 46168 533424 729000)) nil (26137 47367 653116 548000) 0 nil])
([nil nil ((9663 . 9672)) nil (26137 47367 653109 437000) 0 nil])
([nil nil ((9669 . 9670)) nil (26137 47367 653103 159000) 0 nil])
([nil nil ((9671 . 9685)) nil (26137 47367 653096 826000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg)) . -9673) (undo-tree-id26 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -9674) (undo-tree-id27 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -9675) (undo-tree-id28 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -9676) (undo-tree-id29 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg)) . -9677) (undo-tree-id30 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -9678) (undo-tree-id31 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -9679) (undo-tree-id32 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -9680) (undo-tree-id33 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -9681) (undo-tree-id34 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -9682) (undo-tree-id35 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg)) . -9683) (undo-tree-id36 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -9684) (undo-tree-id37 . -1) 9685) nil (26137 47367 653081 400000) 0 nil])
([nil nil ((#("style={{bo}}>" 0 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg delete) 11 12 (fontified t ws-butler-chg chg) 12 13 (fontified t)) . -9663) (undo-tree-id24 . -13) (undo-tree-id25 . -13) 9676) nil (26137 47367 653027 141000) 0 nil])
([nil nil ((9282 . 9287)) nil (26137 47367 653011 67000) 0 nil])
([nil nil ((9287 . 9308)) nil (26137 47367 653004 864000) 0 nil])
([nil nil ((9308 . 9313)) nil (26137 47367 652998 512000) 0 nil])
([nil nil ((9313 . 9317)) nil (26137 47367 652992 345000) 0 nil])
([nil nil ((9316 . 9321)) nil (26137 47367 652986 197000) 0 nil])
([nil nil ((9316 . 9325)) nil (26137 47367 652980 308000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9519 . 9520) (nil fontified nil 9484 . 9520) (nil fontified nil 9478 . 9484) (nil fontified nil 9476 . 9478) (nil fontified nil 9466 . 9476) (nil fontified nil 9465 . 9466) (nil fontified nil 9461 . 9465) (nil fontified nil 9427 . 9461) (nil fontified nil 9421 . 9427) (nil fontified nil 9419 . 9421) (nil fontified nil 9411 . 9419) (nil fontified nil 9410 . 9411) (nil fontified nil 9406 . 9410) (nil fontified nil 9374 . 9406) (nil fontified nil 9368 . 9374) (nil fontified nil 9365 . 9368) (nil fontified nil 9359 . 9365) (nil fontified nil 9358 . 9359) (nil fontified nil 9354 . 9358) (nil fontified nil 9331 . 9354) (nil fontified nil 9325 . 9331) (9325 . 9520)) nil (26137 47367 652970 86000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t)) . -9376) (undo-tree-id5 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -9377) (undo-tree-id6 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t)) . -9378) (undo-tree-id7 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -9379) (undo-tree-id8 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -9380) (undo-tree-id9 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -9381) (undo-tree-id10 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -9382) (undo-tree-id11 . -1) (#("." 0 1 (ws-butler-chg chg fontified t)) . -9383) (undo-tree-id12 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -9384) (undo-tree-id13 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -9385) (undo-tree-id14 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -9386) (undo-tree-id15 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -9387) (undo-tree-id16 . -1) (#("S" 0 1 (ws-butler-chg chg fontified t)) . -9388) (undo-tree-id17 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -9389) (undo-tree-id18 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t)) . -9390) (undo-tree-id19 . -1) (#("T" 0 1 (ws-butler-chg chg fontified t)) . -9391) (undo-tree-id20 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -9392) (undo-tree-id21 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t)) . -9393) (undo-tree-id22 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -9394) (undo-tree-id23 . -1) 9395) nil (26137 47367 652934 401000) 0 nil])
([nil nil ((9376 . 9378)) nil (26137 47367 652793 457000) 0 nil])
([nil nil ((9377 . 9382)) nil (26137 47367 652787 606000) 0 nil])
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t)) . -9377) (undo-tree-id0 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -9378) (undo-tree-id1 . -1) (#("y" 0 1 (ws-butler-chg chg fontified t)) . -9379) (undo-tree-id2 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -9380) (undo-tree-id3 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -9381) (undo-tree-id4 . -1) 9382) nil (26137 47367 652775 939000) 0 nil])
([nil nil ((9377 . 9387)) nil (26137 47367 652695 754000) 0 nil])
([nil nil ((9387 . 9397)) nil (26137 47367 653436 287000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t)) . -9432) (undo-tree-id45 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -9433) (undo-tree-id46 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t)) . -9434) (undo-tree-id47 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -9435) (undo-tree-id48 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -9436) (undo-tree-id49 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -9437) (undo-tree-id50 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -9438) (undo-tree-id51 . -1) (#("." 0 1 (ws-butler-chg chg fontified t)) . -9439) (undo-tree-id52 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -9440) (undo-tree-id53 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -9441) (undo-tree-id54 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -9442) (undo-tree-id55 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -9443) (undo-tree-id56 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -9444) (undo-tree-id57 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t)) . -9445) (undo-tree-id58 . -1) (#("S" 0 1 (ws-butler-chg chg fontified t)) . -9446) (undo-tree-id59 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -9447) (undo-tree-id60 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t)) . -9448) (undo-tree-id61 . -1) (#("T" 0 1 (ws-butler-chg chg fontified t)) . -9449) (undo-tree-id62 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -9450) (undo-tree-id63 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t)) . -9451) (undo-tree-id64 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -9452) (undo-tree-id65 . -1) 9453) nil (26137 47384 324159 874000) 0 nil] [nil nil ((9397 . 9398)) ((#("'" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . 9397) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1)) (26137 47367 652672 143000) 0 nil])
([nil nil ((9432 . 9434)) nil (26137 47384 324007 5000) 0 nil])
nil
([nil nil ((#("P" 0 1 (ws-butler-chg chg fontified t)) . -9432) (undo-tree-id43 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -9433) (undo-tree-id44 . -1) 9434) nil (26137 47384 323998 782000) 0 nil])
([nil nil ((9432 . 9434)) nil (26137 47384 323983 79000) 0 nil])
([nil nil ((9433 . 9434)) nil (26137 47384 323976 745000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -9433) (undo-tree-id42 . -1) 9434) nil (26137 47384 323967 783000) 0 nil])
([nil nil ((9433 . 9435)) nil (26137 47384 323934 838000) 0 nil])
([nil nil ((9435 . 9450)) nil (26137 47386 913558 159000) 0 nil])
([nil nil ((#("o" 0 1 (ws-butler-chg chg fontified t)) . -9391) (undo-tree-id93 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t)) . -9392) (undo-tree-id94 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -9393) (undo-tree-id95 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -9394) (undo-tree-id96 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t)) . -9395) (undo-tree-id97 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -9396) (undo-tree-id98 . -1) 9397) nil (26137 47430 952457 875000) 0 nil] [nil nil ((9450 . 9451)) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 9450)) (26137 47386 913301 771000) 0 nil] [nil nil ((9450 . 9451)) ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 9450) (undo-tree-id66 . -1)) (26137 47384 323909 449000) 0 nil])
([nil nil ((9391 . 9396)) nil (26137 47430 952426 320000) 0 nil])
nil
nil
([nil nil ((9395 . 9397)) nil (26137 47430 952420 450000) 0 nil])
([nil nil ((9396 . 9405)) nil (26137 47430 952414 320000) 0 nil])
([nil nil ((#("r" 0 1 (ws-butler-chg chg fontified t)) . -9457) (undo-tree-id90 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -9458) (undo-tree-id91 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -9459) (undo-tree-id92 . -1) 9460) nil (26137 47430 952405 283000) 0 nil])
([nil nil ((9457 . 9463)) nil (26137 47430 952386 227000) 0 nil])
([nil nil ((9462 . 9471)) nil (26137 47430 952379 653000) 0 nil])
([nil nil ((9472 . 9473)) nil (26137 47430 952373 524000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -9511) (undo-tree-id69 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -9512) (undo-tree-id70 . -1) (#("l" 0 1 (ws-butler-chg chg fontified t)) . -9513) (undo-tree-id71 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -9514) (undo-tree-id72 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -9515) (undo-tree-id73 . -1) (#("." 0 1 (ws-butler-chg chg fontified t)) . -9516) (undo-tree-id74 . -1) (#("d" 0 1 (ws-butler-chg chg fontified t)) . -9517) (undo-tree-id75 . -1) (#("i" 0 1 (ws-butler-chg chg fontified t)) . -9518) (undo-tree-id76 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -9519) (undo-tree-id77 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t)) . -9520) (undo-tree-id78 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -9521) (undo-tree-id79 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -9522) (undo-tree-id80 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -9523) (undo-tree-id81 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t)) . -9524) (undo-tree-id82 . -1) (#("S" 0 1 (ws-butler-chg chg fontified t)) . -9525) (undo-tree-id83 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t)) . -9526) (undo-tree-id84 . -1) (#("b" 0 1 (ws-butler-chg chg fontified t)) . -9527) (undo-tree-id85 . -1) (#("T" 0 1 (ws-butler-chg chg fontified t)) . -9528) (undo-tree-id86 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -9529) (undo-tree-id87 . -1) (#("x" 0 1 (ws-butler-chg chg fontified t)) . -9530) (undo-tree-id88 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -9531) (undo-tree-id89 . -1) 9532) nil (26137 47430 952351 654000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t)) . -9509) (undo-tree-id67 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -9510) (undo-tree-id68 . -1) 9511) nil (26137 47430 952247 691000) 0 nil])
([nil nil ((9509 . 9511)) nil (26137 47430 952208 451000) 0 nil])
([nil nil ((9510 . 9531)) nil (26137 47430 952202 191000) 0 nil])
([nil nil ((9531 . 9540)) nil (26137 47430 952716 281000) 0 nil])
([nil nil ((9940 . 9949)) nil (26137 47440 864911 554000) 0 nil] [nil nil ((9927 . 9928)) ((#(">" 0 1 (fontified t ws-butler-chg chg)) . 9927) (undo-tree-id99 . -1)) (26137 47430 952177 914000) 0 nil])
([nil nil ((9947 . 9951)) nil (26137 47440 864905 294000) 0 nil])
nil
([nil nil ((#("s" 0 1 (ws-butler-chg chg fontified t)) . -9950) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 9951) nil (26137 47440 864896 998000) 0 nil])
([nil nil ((9950 . 9954)) nil (26137 47440 864874 517000) 0 nil])
([nil nil ((9947 . 9960) (#("content" 0 7 (ws-butler-chg chg fontified t)) . -9947) (undo-tree-id100 . -7) (undo-tree-id101 . -3) (undo-tree-id102 . -7) 9954) nil (26137 47440 864863 924000) 0 nil])
([nil nil ((9960 . 9962)) nil (26137 47470 83750 326000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg delete)) . 9380) (#("d" 0 1 (fontified t)) . 9380) (t 26137 47440 950241 239000)) nil (26137 47478 874061 967000) 0 nil] [nil nil ((#("d" 0 1 (fontified t)) . 9380) (t 26137 47440 950241 239000)) ((nil ws-butler-chg delete 9381 . 9382) (9380 . 9381)) (26137 47470 82724 606000) 0 nil])
([nil nil ((9380 . 9382)) nil (26137 47478 874054 4000) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t)) . -9383) (undo-tree-id107 . -1) (#("c" 0 1 (fontified t)) . -9384) (undo-tree-id108 . -1) 9385) nil (26137 47478 874045 207000) 0 nil])
([nil nil ((9383 . 9384)) nil (26137 47478 873971 263000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg delete)) . 9448) (#("-" 0 1 (fontified t)) . 9448)) nil (26137 47478 873963 356000) 0 nil])
([nil nil ((9448 . 9449)) nil (26137 47478 873955 337000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg delete)) . 9514) (#("-" 0 1 (fontified t)) . 9514)) nil (26137 47478 873946 430000) 0 nil])
([nil nil ((9514 . 9515)) nil (26137 47478 873928 134000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-string-face)) . -9397) (undo-tree-id116 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9398) (undo-tree-id117 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -9399) (undo-tree-id118 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -9400) (undo-tree-id119 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -9401) (undo-tree-id120 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9402) (undo-tree-id121 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -9403) (undo-tree-id122 . -1) 9404 (t 26137 47478 958085 341000)) nil (26137 47513 988364 685000) 0 nil])
([nil nil ((9397 . 9406)) nil (26137 47513 988327 999000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-string-face)) . -9530) (undo-tree-id109 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9531) (undo-tree-id110 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -9532) (undo-tree-id111 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -9533) (undo-tree-id112 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -9534) (undo-tree-id113 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9535) (undo-tree-id114 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -9536) (undo-tree-id115 . -1) 9537) nil (26137 47513 988314 907000) 0 nil])
([nil nil ((9530 . 9538)) nil (26137 47862 215279 644000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . -9404) (undo-tree-id158 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -9405) (undo-tree-id159 . -1) 9406 (t 26137 47514 74014 152000)) nil (26137 47882 906283 131000) 0 nil] [nil nil ((9538 . 9539) (9538 . 9539) (t 26137 47514 74014 152000)) ((#("
" 0 1 (fontified nil ws-butler-chg chg face font-lock-string-face)) . 9538) (undo-tree-id123 . -1) (#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 9538)) (26137 47862 213621 261000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -9397) (undo-tree-id151 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -9398) (undo-tree-id152 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -9399) (undo-tree-id153 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -9400) (undo-tree-id154 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -9401) (undo-tree-id155 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -9402) (undo-tree-id156 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -9403) (undo-tree-id157 . -1) 9404) nil (26137 47882 906261 854000) 0 nil])
nil
([nil nil ((9397 . 9400)) nil (26137 47882 906210 391000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -9399) (undo-tree-id150 . -1) 9400) nil (26137 47882 906202 983000) 0 nil])
([nil nil ((9399 . 9404)) nil (26137 47882 906191 706000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -9401) (undo-tree-id147 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -9402) (undo-tree-id148 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -9403) (undo-tree-id149 . -1) 9404) nil (26137 47882 906182 854000) 0 nil])
([nil nil ((9401 . 9407)) nil (26137 47882 906164 317000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . -9466) (undo-tree-id141 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -9467) (undo-tree-id142 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -9468) (undo-tree-id143 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -9469) (undo-tree-id144 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9470) (undo-tree-id145 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -9471) (undo-tree-id146 . -1) 9472) nil (26137 47882 906152 798000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-string-face)) . -9465) (undo-tree-id140 . -1) 9466) nil (26137 47882 906007 280000) 0 nil])
([nil nil ((9465 . 9474)) nil (26137 47882 905995 910000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -9533) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -9534) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9535) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -9536) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -9537) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -9538) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9539) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -9540) (undo-tree-id138 . -1) (undo-tree-id139 . -1) 9541) nil (26137 47882 905980 947000) 0 nil])
([nil nil ((9533 . 9545)) nil (26137 47882 905879 225000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face font-lock-string-face)) . -9532) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -9533) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -9534) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -9535) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -9536) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -9537) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -9538) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -9539) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9540) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("B" 0 1 (fontified t face font-lock-string-face)) . -9541) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -9542) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -9543) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -9544) (undo-tree-id228 . -1) (undo-tree-id229 . -1) 9545 (t 26137 47882 992984 825000)) nil (26137 48005 671211 743000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 9532)) nil (26137 48005 671008 485000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-string-face)) . -9527) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -9528) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9529) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("(" 0 1 (fontified t face font-lock-string-face)) . -9530) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -9531) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) 9532) nil (26137 48005 670993 318000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9533 . 9534) (nil fontified nil 9527 . 9534) (9527 . 9534)) nil (26137 48005 671487 20000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . -9393) (undo-tree-id274 . -1) (#("(" 0 1 (fontified t face font-lock-string-face)) . -9394) (undo-tree-id275 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -9395) (undo-tree-id276 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -9396) (undo-tree-id277 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -9397) (undo-tree-id278 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -9398) (undo-tree-id279 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -9399) (undo-tree-id280 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -9400) (undo-tree-id281 . -1) (#("O" 0 1 (fontified t face font-lock-string-face)) . -9401) (undo-tree-id282 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9402) (undo-tree-id283 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -9403) (undo-tree-id284 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -9404) (undo-tree-id285 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -9405) (undo-tree-id286 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -9406) (undo-tree-id287 . -1) (#(")" 0 1 (fontified t face font-lock-string-face)) . -9407) (undo-tree-id288 . -1) 9408) nil (26137 48040 622801 549000) 0 nil] [nil nil ((9467 . 9468)) ((#("
" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 9467) (undo-tree-id230 . -1)) (26137 48005 670811 708000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 9393)) nil (26137 48040 622726 845000) 0 nil])
nil
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -9390) (undo-tree-id271 . -1) (#("v" 0 1 (fontified t face font-lock-string-face)) . -9391) (undo-tree-id272 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -9392) (undo-tree-id273 . -1) 9393) nil (26137 48040 622717 438000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9396 . 9397) (nil fontified nil 9390 . 9397) (9390 . 9397)) nil (26137 48040 622697 438000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -9446) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (#("v" 0 1 (fontified t face font-lock-string-face)) . -9447) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -9448) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9449) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (#("(" 0 1 (fontified t face font-lock-string-face)) . -9450) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -9451) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -9452) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -9453) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -9454) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -9455) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -9456) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -9457) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -9458) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (#("R" 0 1 (fontified t face font-lock-string-face)) . -9459) (undo-tree-id267 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -9460) (undo-tree-id268 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -9461) (undo-tree-id269 . -1) (#(")" 0 1 (fontified t face font-lock-string-face)) . -9462) (undo-tree-id270 . -1) 9463) nil (26137 48040 622677 642000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 9446)) nil (26137 48040 622561 809000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9452 . 9453) (nil fontified nil 9446 . 9453) (9446 . 9453)) nil (26137 48040 622554 605000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -9503) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("#" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9504) (undo-tree-id234 . -1) (#("f" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9505) (undo-tree-id235 . -1) (#("5" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9506) (undo-tree-id236 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9507) (undo-tree-id237 . -1) (#("c" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9508) (undo-tree-id238 . -1) (#("2" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -9509) (undo-tree-id239 . -1) (#("8" 0 1 (ws-butler-chg chg rear-nonsticky t fontified t face font-lock-string-face)) . -9510) (undo-tree-id240 . -1) 9511) nil (26137 48040 622540 198000) 0 nil])
([nil nil ((#("'" 0 1 (ws-butler-chg delete fontified t face font-lock-string-face)) . 9503)) nil (26137 48040 622454 143000) 0 nil])
([nil nil ((nil rear-nonsticky nil 9511 . 9512) (nil fontified nil 9511 . 9512) (nil fontified nil 9510 . 9511) (nil fontified nil 9504 . 9510) (nil fontified nil 9503 . 9504) (9503 . 9512)) nil (26137 48040 622446 217000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t rear-nonsticky t)) . -9511) (undo-tree-id231 . -1) 9512) nil (26137 48040 622427 217000) 0 nil])
([nil nil ((9511 . 9512) (t 26137 48040 712435 94000)) nil (26137 48061 482238 623000) 0 nil])
([nil nil ((9504 . 9505)) nil (26137 48061 482231 49000) 0 nil])
([nil nil ((9446 . 9447)) nil (26137 48061 482224 179000) 0 nil])
([nil nil ((9454 . 9455)) nil (26137 48061 482217 364000) 0 nil])
([nil nil ((9390 . 9391)) nil (26137 49887 724031 739000) 0 nil])
([nil nil ((9398 . 9399)) nil (26137 49901 902758 316000) 0 nil] [nil nil ((9398 . 9399)) ((#("'" 0 1 (face font-lock-string-face)) . 9398) (undo-tree-id290 . -1) (t 26137 48061 568359 30000)) (26137 49887 650686 387000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face font-lock-string-face)) . -1174) (undo-tree-id291 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1175) (undo-tree-id292 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -1176) (undo-tree-id293 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1177) (undo-tree-id294 . -1) 1178) nil (26137 50060 786884 465000) 0 nil])
([nil nil ((1725 . 1726) (1725 . 1726) (1725 . 1726) (1725 . 1726) (1725 . 1726) (1725 . 1726) (t 26137 48061 568359 30000)) ((#("
" 0 1 (ws-butler-chg chg fontified nil)) . 1725) (undo-tree-id289 . -1) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . 1725) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . 1725) (#("
" 0 1 (ws-butler-chg chg fontified nil)) . 1725) (#("
" 0 1 (fontified nil ws-butler-chg chg)) . 1725) (#("
" 0 1 (fontified t ws-butler-chg chg)) . 1725)) (26137 49887 649390 466000) 0 nil])
([nil nil ((1174 . 1183)) nil (26137 50078 952432 616000) 0 nil] [nil nil ((1174 . 1183)) ((#("startOver" 0 9 (fontified t face font-lock-string-face)) . 1174)) (26137 50060 584050 72000) 0 nil])
nil
([nil nil ((5599 . 5611) (t 26137 50064 712404 596000)) nil (26137 50107 168210 209000) 0 nil] [nil nil ((4699 . 4700) (t 26137 50064 712404 596000)) ((#("v" 0 1 (fontified t ws-butler-chg chg)) . 4699) (undo-tree-id416 . -1)) (26137 50078 951493 878000) 0 nil])
([nil nil ((5599 . 5611) (t 26137 49901 988997 325000)) ((#("
           " 0 1 (fontified t) 1 12 (fontified t)) . 5599) (undo-tree-id410 . -12) (undo-tree-id411 . -12) (undo-tree-id412 . -12) (undo-tree-id413 . -12) (undo-tree-id414 . -12) (undo-tree-id415 . -12)) (26137 50060 406108 753000) 0 nil])
([nil nil ((5601 . 5612) (#("           " 0 11 (fontified nil ws-butler-chg chg)) . 5600) (5600 . 5611) (5600 . 5601) (#("           " 0 11 (fontified t ws-butler-chg chg)) . 5600) (undo-tree-id451 . -11) (undo-tree-id452 . -11) 5611) nil (26137 50126 387290 900000) 0 nil])
nil
([nil nil ((5970 . 5982)) ((#("
           " 0 1 (ws-butler-chg chg fontified t) 1 12 (fontified t ws-butler-chg chg)) . 5970) (undo-tree-id406 . -12) (undo-tree-id407 . -1) (undo-tree-id408 . -12) (undo-tree-id409 . -1)) (26137 50060 237974 157000) 0 nil] [nil nil ((#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6214) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6196) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6183) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6124) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6111) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6090) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6007) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5945) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5901) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5882) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5802) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5743) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5699) (nil rear-nonsticky nil 6232 . 6233) (nil fontified nil 6100 . 6233) (nil fontified nil 6080 . 6100) (nil fontified nil 6072 . 6080) (nil fontified nil 6068 . 6072) (nil fontified nil 6063 . 6068) (nil fontified nil 6061 . 6063) (nil fontified nil 6050 . 6061) (nil fontified nil 6048 . 6050) (nil fontified nil 6041 . 6048) (nil fontified nil 6040 . 6041) (nil fontified nil 6034 . 6040) (nil fontified nil 6002 . 6034) (nil fontified nil 5987 . 6002) (nil fontified nil 5984 . 5987) (nil fontified nil 5956 . 5984) (nil fontified nil 5950 . 5956) (nil fontified nil 5943 . 5950) (nil fontified nil 5939 . 5943) (nil fontified nil 5938 . 5939) (nil fontified nil 5921 . 5938) (nil fontified nil 5919 . 5921) (nil fontified nil 5870 . 5919) (nil fontified nil 5866 . 5870) (nil fontified nil 5865 . 5866) (nil fontified nil 5864 . 5865) (nil fontified nil 5860 . 5864) (nil fontified nil 5859 . 5860) (nil fontified nil 5857 . 5859) (nil fontified nil 5856 . 5857) (nil fontified nil 5852 . 5856) (nil fontified nil 5851 . 5852) (nil fontified nil 5849 . 5851) (nil fontified nil 5848 . 5849) (nil fontified nil 5844 . 5848) (nil fontified nil 5843 . 5844) (nil fontified nil 5793 . 5843) (nil fontified nil 5784 . 5793) (nil fontified nil 5732 . 5784) (nil fontified nil 5715 . 5732) (nil fontified nil 5684 . 5715) (nil fontified nil 5683 . 5684) (nil fontified nil 5679 . 5683) (nil fontified nil 5678 . 5679) (nil fontified nil 5677 . 5678) (nil fontified nil 5676 . 5677) (nil fontified nil 5669 . 5676) (nil fontified nil 5668 . 5669) (nil fontified nil 5659 . 5668) (nil fontified nil 5626 . 5659) (nil fontified nil 5611 . 5626) (5611 . 6233)) ((#("<div className=\"VotePage-Buttons flex-container\" style={{'display':'flex'}}>
            <div className=\"VotePage-Button\"
            style={styler(locales.backImage[state.locale])}
            onClick={(event)=>setState({...state, 'page': 'home', 'vote':null})}
            ></div>
            <div className=\"VotePage-Button\"
            onClick={()=> {logVote(state.vote);
                           setState({...state, 'page':'video', 'seeHeader': false});
                          }
                    }
            style={styler(locales.voteImage[state.locale])}
            >
            </div>
            </div>" 0 15 (fontified nil) 15 18 (fontified nil face font-lock-string-face) 18 19 (ws-butler-chg chg fontified nil face font-lock-string-face) 19 20 (ws-butler-chg chg fontified nil face font-lock-string-face) 20 21 (ws-butler-chg chg fontified nil face font-lock-string-face) 21 22 (ws-butler-chg chg fontified nil face font-lock-string-face) 22 23 (ws-butler-chg chg fontified nil face font-lock-string-face) 23 24 (ws-butler-chg chg fontified nil face font-lock-string-face) 24 25 (fontified nil face font-lock-string-face) 25 48 (fontified nil face font-lock-string-face) 48 57 (fontified nil) 57 58 (fontified nil face font-lock-string-face) 58 65 (fontified nil face font-lock-string-face) 65 66 (fontified nil face font-lock-string-face) 66 67 (fontified nil) 67 68 (fontified nil face font-lock-string-face) 68 72 (fontified nil face font-lock-string-face) 72 73 (fontified nil face font-lock-string-face) 73 76 (fontified nil) 76 77 (ws-butler-chg chg fontified nil) 77 88 (ws-butler-chg chg fontified nil) 88 89 (ws-butler-chg chg fontified nil) 89 90 (fontified nil) 90 104 (ws-butler-chg chg fontified nil) 104 121 (ws-butler-chg chg fontified nil face font-lock-string-face) 121 122 (ws-butler-chg chg fontified nil) 122 133 (ws-butler-chg chg fontified nil) 133 134 (ws-butler-chg chg fontified nil) 134 135 (fontified nil) 135 173 (ws-butler-chg chg fontified nil) 173 182 (ws-butler-chg chg fontified nil) 182 193 (ws-butler-chg chg fontified nil) 193 194 (ws-butler-chg chg fontified nil) 194 195 (fontified nil) 195 232 (ws-butler-chg chg fontified nil) 232 233 (ws-butler-chg chg fontified nil face font-lock-string-face) 233 237 (ws-butler-chg chg fontified nil face font-lock-string-face) 237 238 (ws-butler-chg chg fontified nil face font-lock-string-face) 238 240 (ws-butler-chg chg fontified nil) 240 241 (ws-butler-chg chg fontified nil face font-lock-string-face) 241 245 (ws-butler-chg chg fontified nil face font-lock-string-face) 245 246 (ws-butler-chg chg fontified nil face font-lock-string-face) 246 248 (ws-butler-chg chg fontified nil) 248 249 (ws-butler-chg chg fontified nil face font-lock-string-face) 249 253 (ws-butler-chg chg fontified nil face font-lock-string-face) 253 254 (ws-butler-chg chg fontified nil face font-lock-string-face) 254 255 (ws-butler-chg chg fontified nil) 255 259 (ws-butler-chg chg fontified nil face font-lock-constant-face) 259 263 (ws-butler-chg chg fontified nil) 263 274 (ws-butler-chg chg fontified nil) 274 275 (ws-butler-chg chg fontified nil) 275 276 (fontified nil) 276 282 (ws-butler-chg chg fontified nil) 282 283 (fontified nil) 283 294 (fontified nil) 294 295 (ws-butler-chg chg fontified nil) 295 296 (fontified nil) 296 308 (fontified nil) 308 310 (fontified nil) 310 327 (fontified nil face font-lock-string-face) 327 328 (fontified nil) 328 332 (fontified nil) 332 339 (fontified nil) 339 340 (ws-butler-chg chg fontified nil) 340 341 (fontified nil) 341 345 (ws-butler-chg chg fontified nil) 345 373 (ws-butler-chg chg fontified nil) 373 376 (ws-butler-chg chg fontified nil) 376 391 (ws-butler-chg chg fontified nil) 391 402 (ws-butler-chg chg fontified nil) 402 403 (ws-butler-chg chg fontified nil) 403 404 (fontified nil) 404 423 (ws-butler-chg chg fontified nil) 423 429 (ws-butler-chg chg fontified nil face font-lock-string-face) 429 430 (ws-butler-chg chg fontified nil) 430 437 (ws-butler-chg chg fontified nil face font-lock-string-face) 437 439 (ws-butler-chg chg fontified nil) 439 450 (ws-butler-chg chg fontified nil face font-lock-string-face) 450 452 (ws-butler-chg chg fontified nil) 452 457 (ws-butler-chg chg fontified nil face font-lock-constant-face) 457 461 (ws-butler-chg chg fontified nil) 461 469 (ws-butler-chg chg fontified nil) 469 486 (ws-butler-chg chg fontified nil) 486 487 (ws-butler-chg chg fontified nil) 487 488 (fontified nil) 488 489 (ws-butler-chg chg fontified nil) 489 497 (ws-butler-chg chg fontified nil) 497 508 (ws-butler-chg chg fontified nil) 508 509 (ws-butler-chg chg fontified nil) 509 510 (fontified nil) 510 511 (ws-butler-chg chg fontified nil) 511 522 (ws-butler-chg chg fontified nil) 522 523 (ws-butler-chg chg fontified nil) 523 524 (fontified nil) 524 570 (ws-butler-chg chg fontified nil) 570 571 (fontified nil) 571 582 (fontified nil) 582 583 (ws-butler-chg chg fontified nil) 583 584 (fontified nil) 584 585 (fontified nil) 585 588 (fontified nil) 588 596 (fontified nil) 596 597 (ws-butler-chg chg fontified nil) 597 598 (fontified nil) 598 604 (fontified nil) 604 615 (fontified nil) 615 616 (ws-butler-chg chg fontified nil) 616 617 (fontified nil) 617 621 (fontified nil) 621 622 (rear-nonsticky nil fontified nil)) . 5611) (undo-tree-id333 . -24) (undo-tree-id334 . -339) (undo-tree-id335 . -76) (undo-tree-id336 . -18) (undo-tree-id337 . -18) (undo-tree-id338 . -24) (undo-tree-id339 . -615) (undo-tree-id340 . -616) (undo-tree-id341 . -615) (undo-tree-id342 . -616) (undo-tree-id343 . -596) (undo-tree-id344 . -597) (undo-tree-id345 . -596) (undo-tree-id346 . -597) (undo-tree-id347 . -582) (undo-tree-id348 . -583) (undo-tree-id349 . -582) (undo-tree-id350 . -583) (undo-tree-id351 . -522) (undo-tree-id352 . -523) (undo-tree-id353 . -522) (undo-tree-id354 . -523) (undo-tree-id355 . -508) (undo-tree-id356 . -509) (undo-tree-id357 . -508) (undo-tree-id358 . -509) (undo-tree-id359 . -486) (undo-tree-id360 . -487) (undo-tree-id361 . -486) (undo-tree-id362 . -487) (undo-tree-id363 . -402) (undo-tree-id364 . -403) (undo-tree-id365 . -402) (undo-tree-id366 . -403) (undo-tree-id367 . -339) (undo-tree-id368 . -340) (undo-tree-id369 . -339) (undo-tree-id370 . -340) (undo-tree-id371 . -294) (undo-tree-id372 . -295) (undo-tree-id373 . -294) (undo-tree-id374 . -295) (undo-tree-id375 . -274) (undo-tree-id376 . -275) (undo-tree-id377 . -274) (undo-tree-id378 . -275) (undo-tree-id379 . -193) (undo-tree-id380 . -194) (undo-tree-id381 . -193) (undo-tree-id382 . -194) (undo-tree-id383 . -133) (undo-tree-id384 . -134) (undo-tree-id385 . -133) (undo-tree-id386 . -134) (undo-tree-id387 . -73) (undo-tree-id388 . -104) (undo-tree-id389 . -88) (undo-tree-id390 . -89) (undo-tree-id391 . -621) (undo-tree-id392 . -622) (nil fontified t 5687 . 5688) (nil fontified t 5684 . 5687) (nil rear-nonsticky t 6232 . 6233) (nil ws-butler-chg delete 5700 . 5701) (5699 . 5700) (nil ws-butler-chg delete 5744 . 5745) (5743 . 5744) (nil ws-butler-chg delete 5803 . 5804) (5802 . 5803) (nil ws-butler-chg delete 5883 . 5884) (5882 . 5883) (5901 . 5902) (nil ws-butler-chg delete 5946 . 5947) (5945 . 5946) (nil ws-butler-chg delete 6008 . 6009) (6007 . 6008) (nil ws-butler-chg delete 6091 . 6092) (6090 . 6091) (nil ws-butler-chg delete 6112 . 6113) (6111 . 6112) (nil ws-butler-chg delete 6125 . 6126) (6124 . 6125) (6183 . 6184) (6196 . 6197) (6214 . 6215)) (26137 50036 445630 428000) 0 nil])
([nil nil ((5612 . 5614) (t 26137 50131 960151 843000)) nil (26137 50289 794901 574000) 0 nil] [nil nil ((#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6215) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6197) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6184) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6125) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6112) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6091) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6008) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5946) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5902) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5883) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5803) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5744) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5700) (nil rear-nonsticky nil 6233 . 6234) (nil fontified nil 6101 . 6234) (nil fontified nil 6081 . 6101) (nil fontified nil 6073 . 6081) (nil fontified nil 6069 . 6073) (nil fontified nil 6064 . 6069) (nil fontified nil 6062 . 6064) (nil fontified nil 6051 . 6062) (nil fontified nil 6049 . 6051) (nil fontified nil 6042 . 6049) (nil fontified nil 6041 . 6042) (nil fontified nil 6035 . 6041) (nil fontified nil 6003 . 6035) (nil fontified nil 5988 . 6003) (nil fontified nil 5985 . 5988) (nil fontified nil 5957 . 5985) (nil fontified nil 5951 . 5957) (nil fontified nil 5944 . 5951) (nil fontified nil 5940 . 5944) (nil fontified nil 5939 . 5940) (nil fontified nil 5922 . 5939) (nil fontified nil 5920 . 5922) (nil fontified nil 5871 . 5920) (nil fontified nil 5867 . 5871) (nil fontified nil 5866 . 5867) (nil fontified nil 5865 . 5866) (nil fontified nil 5861 . 5865) (nil fontified nil 5860 . 5861) (nil fontified nil 5858 . 5860) (nil fontified nil 5857 . 5858) (nil fontified nil 5853 . 5857) (nil fontified nil 5852 . 5853) (nil fontified nil 5850 . 5852) (nil fontified nil 5849 . 5850) (nil fontified nil 5845 . 5849) (nil fontified nil 5844 . 5845) (nil fontified nil 5794 . 5844) (nil fontified nil 5785 . 5794) (nil fontified nil 5733 . 5785) (nil fontified nil 5716 . 5733) (nil fontified nil 5685 . 5716) (nil fontified nil 5684 . 5685) (nil fontified nil 5680 . 5684) (nil fontified nil 5679 . 5680) (nil fontified nil 5678 . 5679) (nil fontified nil 5677 . 5678) (nil fontified nil 5670 . 5677) (nil fontified nil 5669 . 5670) (nil fontified nil 5660 . 5669) (nil fontified nil 5627 . 5660) (nil fontified nil 5612 . 5627) (5612 . 6234)) ((#("<div className=\"VotePage-Buttons flex-container\" style={{'display':'flex'}}>
            <div className=\"VotePage-Button\"
            style={styler(locales.backImage[state.locale])}
            onClick={(event)=>setState({...state, 'page': 'home', 'vote':null})}
            ></div>
            <div className=\"VotePage-Button\"
            onClick={()=> {logVote(state.vote);
                           setState({...state, 'page':'video', 'seeHeader': false});
                          }
                    }
            style={styler(locales.voteImage[state.locale])}
            >
            </div>
            </div>" 0 15 (fontified nil) 15 48 (fontified nil face font-lock-string-face) 48 57 (fontified nil) 57 58 (fontified nil face font-lock-string-face) 58 65 (fontified nil face font-lock-string-face) 65 66 (fontified nil face font-lock-string-face) 66 67 (fontified nil) 67 68 (fontified nil face font-lock-string-face) 68 72 (fontified nil face font-lock-string-face) 72 73 (fontified nil face font-lock-string-face) 73 76 (fontified nil) 76 77 (fontified nil) 77 88 (ws-butler-chg chg fontified nil) 88 89 (ws-butler-chg chg fontified nil) 89 90 (fontified nil) 90 104 (ws-butler-chg chg fontified nil) 104 121 (ws-butler-chg chg fontified nil face font-lock-string-face) 121 122 (ws-butler-chg chg fontified nil) 122 133 (ws-butler-chg chg fontified nil) 133 134 (ws-butler-chg chg fontified nil) 134 135 (fontified nil) 135 173 (ws-butler-chg chg fontified nil) 173 182 (ws-butler-chg chg fontified nil) 182 193 (ws-butler-chg chg fontified nil) 193 194 (ws-butler-chg chg fontified nil) 194 195 (fontified nil) 195 232 (ws-butler-chg chg fontified nil) 232 233 (ws-butler-chg chg fontified nil face font-lock-string-face) 233 237 (ws-butler-chg chg fontified nil face font-lock-string-face) 237 238 (ws-butler-chg chg fontified nil face font-lock-string-face) 238 240 (ws-butler-chg chg fontified nil) 240 241 (ws-butler-chg chg fontified nil face font-lock-string-face) 241 245 (ws-butler-chg chg fontified nil face font-lock-string-face) 245 246 (ws-butler-chg chg fontified nil face font-lock-string-face) 246 248 (ws-butler-chg chg fontified nil) 248 249 (ws-butler-chg chg fontified nil face font-lock-string-face) 249 253 (ws-butler-chg chg fontified nil face font-lock-string-face) 253 254 (ws-butler-chg chg fontified nil face font-lock-string-face) 254 255 (ws-butler-chg chg fontified nil) 255 259 (ws-butler-chg chg fontified nil face font-lock-constant-face) 259 263 (ws-butler-chg chg fontified nil) 263 274 (ws-butler-chg chg fontified nil) 274 275 (ws-butler-chg chg fontified nil) 275 276 (fontified nil) 276 282 (ws-butler-chg chg fontified nil) 282 283 (fontified nil) 283 294 (fontified nil) 294 295 (ws-butler-chg chg fontified nil) 295 296 (fontified nil) 296 308 (fontified nil) 308 310 (fontified nil) 310 327 (fontified nil face font-lock-string-face) 327 328 (fontified nil) 328 332 (fontified nil) 332 339 (fontified nil) 339 340 (ws-butler-chg chg fontified nil) 340 341 (fontified nil) 341 345 (ws-butler-chg chg fontified nil) 345 373 (ws-butler-chg chg fontified nil) 373 376 (ws-butler-chg chg fontified nil) 376 391 (ws-butler-chg chg fontified nil) 391 402 (ws-butler-chg chg fontified nil) 402 403 (ws-butler-chg chg fontified nil) 403 404 (fontified nil) 404 423 (ws-butler-chg chg fontified nil) 423 429 (ws-butler-chg chg fontified nil face font-lock-string-face) 429 430 (ws-butler-chg chg fontified nil) 430 437 (ws-butler-chg chg fontified nil face font-lock-string-face) 437 439 (ws-butler-chg chg fontified nil) 439 450 (ws-butler-chg chg fontified nil face font-lock-string-face) 450 452 (ws-butler-chg chg fontified nil) 452 457 (ws-butler-chg chg fontified nil face font-lock-constant-face) 457 461 (ws-butler-chg chg fontified nil) 461 469 (ws-butler-chg chg fontified nil) 469 486 (ws-butler-chg chg fontified nil) 486 487 (ws-butler-chg chg fontified nil) 487 488 (fontified nil) 488 489 (ws-butler-chg chg fontified nil) 489 497 (ws-butler-chg chg fontified nil) 497 508 (ws-butler-chg chg fontified nil) 508 509 (ws-butler-chg chg fontified nil) 509 510 (fontified nil) 510 511 (fontified nil) 511 522 (fontified nil) 522 523 (ws-butler-chg chg fontified nil) 523 524 (fontified nil) 524 570 (ws-butler-chg chg fontified nil) 570 571 (fontified nil) 571 582 (fontified nil) 582 583 (ws-butler-chg chg fontified nil) 583 584 (fontified nil) 584 585 (fontified nil) 585 596 (fontified nil) 596 597 (ws-butler-chg chg fontified nil) 597 598 (fontified nil) 598 604 (fontified nil) 604 615 (fontified nil) 615 616 (ws-butler-chg chg fontified nil) 616 617 (fontified nil) 617 618 (fontified nil) 618 621 (fontified nil) 621 622 (rear-nonsticky nil fontified nil)) . 5612) (undo-tree-id485 . -282) (undo-tree-id486 . -77) (undo-tree-id487 . -88) (undo-tree-id488 . -339) (undo-tree-id489 . -522) (undo-tree-id490 . -622) (undo-tree-id491 . -77) (undo-tree-id492 . -73) (undo-tree-id493 . -282) (undo-tree-id494 . -621) (undo-tree-id495 . -522) (undo-tree-id496 . -570) (undo-tree-id497 . -339) (undo-tree-id498 . -510) (undo-tree-id499 . -263) (undo-tree-id500 . -615) (undo-tree-id501 . -616) (undo-tree-id502 . -615) (undo-tree-id503 . -616) (undo-tree-id504 . -596) (undo-tree-id505 . -597) (undo-tree-id506 . -596) (undo-tree-id507 . -597) (undo-tree-id508 . -582) (undo-tree-id509 . -583) (undo-tree-id510 . -582) (undo-tree-id511 . -583) (undo-tree-id512 . -522) (undo-tree-id513 . -523) (undo-tree-id514 . -508) (undo-tree-id515 . -509) (undo-tree-id516 . -486) (undo-tree-id517 . -487) (undo-tree-id518 . -402) (undo-tree-id519 . -403) (undo-tree-id520 . -339) (undo-tree-id521 . -340) (undo-tree-id522 . -294) (undo-tree-id523 . -295) (undo-tree-id524 . -294) (undo-tree-id525 . -295) (undo-tree-id526 . -274) (undo-tree-id527 . -275) (undo-tree-id528 . -193) (undo-tree-id529 . -194) (undo-tree-id530 . -133) (undo-tree-id531 . -134) (undo-tree-id532 . -88) (undo-tree-id533 . -89) (nil fontified t 5688 . 5689) (nil fontified t 5685 . 5688) (nil rear-nonsticky t 6233 . 6234) (nil ws-butler-chg delete 5701 . 5702) (5700 . 5701) (nil ws-butler-chg delete 5745 . 5746) (5744 . 5745) (nil ws-butler-chg delete 5804 . 5805) (5803 . 5804) (nil ws-butler-chg delete 5884 . 5885) (5883 . 5884) (5902 . 5903) (nil ws-butler-chg delete 5947 . 5948) (5946 . 5947) (nil ws-butler-chg delete 6009 . 6010) (6008 . 6009) (nil ws-butler-chg delete 6092 . 6093) (6091 . 6092) (nil ws-butler-chg delete 6113 . 6114) (6112 . 6113) (nil ws-butler-chg delete 6126 . 6127) (6125 . 6126) (6184 . 6185) (6197 . 6198) (6215 . 6216)) (26137 50126 168668 968000) 0 nil])
([nil nil ((#("           " 0 11 (fontified t ws-butler-chg chg)) . 5971) (undo-tree-id393 . -11) 5982) ((nil ws-butler-chg delete 5982 . 5983) (5971 . 5982)) (26137 50058 290008 150000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5629) (undo-tree-id317 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5630) (undo-tree-id318 . -1) (#("P" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5631) (undo-tree-id319 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5632) (undo-tree-id320 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5633) (undo-tree-id321 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5634) (undo-tree-id322 . -1) 5635) ((5629 . 5635)) (26137 50035 49377 132000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t ws-butler-chg chg)) . -5612) (undo-tree-id550 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg)) . -5613) (undo-tree-id551 . -1) 5614) nil (26137 50289 794892 666000) 0 nil])
([nil nil ((#("<div className=\"VotePage-Button\"
           style={styler(locales.backImage[state.locale])}
           onClick={(event)=>setState({...state, 'page': 'home', 'vote':null})}
           ></div>" 0 1 (ws-butler-chg delete fontified t) 1 15 (ws-butler-chg chg fontified t) 15 32 (ws-butler-chg chg fontified t face font-lock-string-face) 32 44 (ws-butler-chg chg fontified t) 44 45 (ws-butler-chg delete fontified t) 45 83 (ws-butler-chg chg fontified t) 83 92 (ws-butler-chg chg fontified t) 92 103 (ws-butler-chg chg fontified t) 103 104 (ws-butler-chg delete fontified t) 104 141 (ws-butler-chg chg fontified t) 141 142 (ws-butler-chg chg fontified t face font-lock-string-face) 142 146 (ws-butler-chg chg fontified t face font-lock-string-face) 146 147 (ws-butler-chg chg fontified t face font-lock-string-face) 147 149 (ws-butler-chg chg fontified t) 149 150 (ws-butler-chg chg fontified t face font-lock-string-face) 150 154 (ws-butler-chg chg fontified t face font-lock-string-face) 154 155 (ws-butler-chg chg fontified t face font-lock-string-face) 155 157 (ws-butler-chg chg fontified t) 157 158 (ws-butler-chg chg fontified t face font-lock-string-face) 158 162 (ws-butler-chg chg fontified t face font-lock-string-face) 162 163 (ws-butler-chg chg fontified t face font-lock-string-face) 163 164 (ws-butler-chg chg fontified t) 164 168 (ws-butler-chg chg fontified t face font-lock-constant-face) 168 183 (ws-butler-chg chg fontified t) 183 184 (ws-butler-chg delete fontified t) 184 190 (ws-butler-chg chg fontified t)) . -5700) (undo-tree-id449 . -190) (undo-tree-id450 . -190) 5890) ((5700 . 5890)) (26137 50125 972151 175000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5922 . 5923) (nil fontified nil 5921 . 5923) (nil fontified nil 5915 . 5921) (nil fontified nil 5913 . 5915) (nil fontified nil 5901 . 5913) (nil fontified nil 5882 . 5901) (nil fontified nil 5880 . 5882) (nil fontified nil 5874 . 5880) (nil fontified nil 5872 . 5874) (nil fontified nil 5866 . 5872) (nil fontified nil 5864 . 5866) (nil fontified nil 5777 . 5864) (nil fontified nil 5773 . 5777) (nil fontified nil 5769 . 5773) (nil fontified nil 5768 . 5769) (nil fontified nil 5757 . 5768) (nil fontified nil 5753 . 5757) (nil fontified nil 5715 . 5753) (nil fontified nil 5711 . 5715) (nil fontified nil 5710 . 5711) (nil fontified nil 5704 . 5710) (nil fontified nil 5663 . 5704) (nil fontified nil 5657 . 5663) (nil fontified nil 5655 . 5657) (nil fontified nil 5649 . 5655) (nil fontified nil 5611 . 5649) (5611 . 5923)) ((#("onClick={(event)=>setState({...state, 'page': 'home',
                                       'vote':null,

                                       'seeHeader':true})}
           style={{...styler(locales.startOverImage[state.locale]),
                   'height': '10vh',
                   'margin-top': '21vh'}}" 0 38 (ws-butler-chg chg fontified nil) 38 44 (ws-butler-chg chg fontified nil face font-lock-string-face) 44 46 (ws-butler-chg chg fontified nil) 46 52 (ws-butler-chg chg fontified nil face font-lock-string-face) 52 54 (ws-butler-chg chg fontified nil) 54 93 (ws-butler-chg chg fontified nil) 93 99 (ws-butler-chg chg fontified nil face font-lock-string-face) 99 100 (ws-butler-chg chg fontified nil) 100 104 (ws-butler-chg chg fontified nil face font-lock-constant-face) 104 107 (ws-butler-chg chg fontified nil) 107 142 (ws-butler-chg chg fontified nil) 142 146 (ws-butler-chg chg fontified nil) 146 157 (ws-butler-chg chg fontified nil face font-lock-string-face) 157 158 (ws-butler-chg chg fontified nil) 158 162 (ws-butler-chg chg fontified nil face font-lock-constant-face) 162 166 (ws-butler-chg chg fontified nil) 166 234 (ws-butler-chg chg fontified nil) 234 253 (ws-butler-chg chg fontified nil) 253 255 (ws-butler-chg chg fontified nil face font-lock-string-face) 255 261 (ws-butler-chg chg fontified nil face font-lock-string-face) 261 263 (ws-butler-chg chg fontified nil) 263 269 (ws-butler-chg chg fontified nil face font-lock-string-face) 269 271 (ws-butler-chg chg fontified nil) 271 290 (ws-butler-chg chg fontified nil) 290 302 (ws-butler-chg chg fontified nil face font-lock-string-face) 302 304 (ws-butler-chg chg fontified nil) 304 310 (ws-butler-chg chg fontified nil face font-lock-string-face) 310 311 (ws-butler-chg chg fontified nil) 311 312 (ws-butler-chg chg fontified nil rear-nonsticky nil)) . 5611) (undo-tree-id394 . -312) (undo-tree-id395 . -271) (undo-tree-id396 . -311) (undo-tree-id397 . -312) (undo-tree-id398 . -269) (undo-tree-id399 . -271) (undo-tree-id400 . -162) (undo-tree-id401 . -253) (undo-tree-id402 . -104) (undo-tree-id403 . -142) (undo-tree-id404 . -52) (undo-tree-id405 . -93) (nil fontified t 5663 . 5665) (nil fontified t 5715 . 5718) (nil fontified t 5773 . 5777) (nil fontified t 5777 . 5845) (nil fontified t 5880 . 5882) (nil rear-nonsticky t 5922 . 5923)) (26137 50058 289117 264000) 0 nil])
([nil nil ((5629 . 5631)) ((#("te" 0 2 (fontified t face font-lock-string-face)) . 5629)) (26137 50034 261534 990000) 0 nil])
([nil nil ((5612 . 5629)) nil (26137 50289 794877 629000) 0 nil])
([nil nil ((#("onClick={(event)=>setState({...state, 'page': 'home',
                                       'vote':null,

                                       'seeHeader':true})}" 0 38 (fontified t) 38 44 (fontified t face font-lock-string-face) 44 46 (fontified t) 46 52 (fontified t face font-lock-string-face) 52 93 (fontified t) 93 99 (fontified t face font-lock-string-face) 99 100 (fontified t) 100 104 (fontified t face font-lock-constant-face) 104 142 (fontified t) 142 146 (fontified t) 146 157 (face font-lock-string-face fontified t) 157 158 (fontified t) 158 162 (face font-lock-constant-face fontified t) 162 165 (fontified t)) . 6059) (undo-tree-id447 . -165) (undo-tree-id448 . -165) 6224) ((nil ws-butler-chg delete 6224 . 6225) (6059 . 6224)) (26137 50125 801663 968000) 0 nil])
nil
([nil nil ((#("<div className=\"VotePage-Button\"
           style={styler(locales.backImage[state.locale])}
           onClick={(event)=>setState({...state, 'page': 'home', 'vote':null})}
           ></div>" 0 1 (ws-butler-chg delete fontified t) 1 15 (ws-butler-chg chg fontified t) 15 32 (ws-butler-chg chg fontified t face font-lock-string-face) 32 44 (ws-butler-chg chg fontified t) 44 45 (ws-butler-chg delete fontified t) 45 83 (ws-butler-chg chg fontified t) 83 92 (ws-butler-chg chg fontified t) 92 103 (ws-butler-chg chg fontified t) 103 104 (ws-butler-chg delete fontified t) 104 141 (ws-butler-chg chg fontified t) 141 142 (ws-butler-chg chg fontified t face font-lock-string-face) 142 146 (ws-butler-chg chg fontified t face font-lock-string-face) 146 147 (ws-butler-chg chg fontified t face font-lock-string-face) 147 149 (ws-butler-chg chg fontified t) 149 150 (ws-butler-chg chg fontified t face font-lock-string-face) 150 154 (ws-butler-chg chg fontified t face font-lock-string-face) 154 155 (ws-butler-chg chg fontified t face font-lock-string-face) 155 157 (ws-butler-chg chg fontified t) 157 158 (ws-butler-chg chg fontified t face font-lock-string-face) 158 162 (ws-butler-chg chg fontified t face font-lock-string-face) 162 163 (ws-butler-chg chg fontified t face font-lock-string-face) 163 164 (ws-butler-chg chg fontified t) 164 168 (ws-butler-chg chg fontified t face font-lock-constant-face) 168 183 (ws-butler-chg chg fontified t) 183 184 (ws-butler-chg delete fontified t) 184 190 (ws-butler-chg chg fontified t)) . -5695) (undo-tree-id315 . -190) (undo-tree-id316 . -190) 5885) ((5695 . 5885)) (26137 50030 545298 24000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5626) (undo-tree-id547 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -5627) (undo-tree-id548 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5628) (undo-tree-id549 . -1) 5629) nil (26137 50289 794868 629000) 0 nil])
([nil nil ((#("onClick={()=> {logVote(state.vote);
                          setState({...state, 'page':'video', 'seeHeader': false});
                         }
                   }" 0 1 (ws-butler-chg delete fontified t) 1 5 (ws-butler-chg chg fontified t) 5 33 (ws-butler-chg chg fontified t) 33 36 (ws-butler-chg chg fontified t) 36 51 (ws-butler-chg chg fontified t) 51 62 (ws-butler-chg chg fontified t) 62 63 (ws-butler-chg delete fontified t) 63 82 (ws-butler-chg chg fontified t) 82 88 (ws-butler-chg chg fontified t face font-lock-string-face) 88 89 (ws-butler-chg chg fontified t) 89 96 (ws-butler-chg chg fontified t face font-lock-string-face) 96 98 (ws-butler-chg chg fontified t) 98 109 (ws-butler-chg chg fontified t face font-lock-string-face) 109 111 (ws-butler-chg chg fontified t) 111 116 (ws-butler-chg chg fontified t face font-lock-constant-face) 116 120 (ws-butler-chg chg fontified t) 120 128 (ws-butler-chg chg fontified t) 128 145 (ws-butler-chg chg fontified t) 145 146 (ws-butler-chg delete fontified t) 146 147 (ws-butler-chg chg fontified t) 147 155 (ws-butler-chg chg fontified t) 155 166 (ws-butler-chg chg fontified t) 166 167 (ws-butler-chg delete fontified t)) . -5756) (undo-tree-id445 . -167) (undo-tree-id446 . -167) 5923) ((5756 . 5923)) (26137 50125 627156 739000) 0 nil])
([nil nil ((#("onClick={(event)=>setState({...state, 'page': 'home',
                                       'vote':null,

                                       'seeHeader':true})}
           style={{...styler(locales.startOverImage[state.locale]),
                   'height': '10vh',
                   'margin-top': '21vh'}}" 0 38 (fontified t) 38 44 (fontified t face font-lock-string-face) 44 46 (fontified t) 46 52 (fontified t face font-lock-string-face) 52 93 (fontified t) 93 99 (fontified t face font-lock-string-face) 99 100 (fontified t) 100 104 (fontified t face font-lock-constant-face) 104 142 (fontified t) 142 146 (fontified t) 146 157 (face font-lock-string-face fontified t) 157 158 (fontified t) 158 162 (face font-lock-constant-face fontified t) 162 166 (fontified t) 166 253 (fontified t) 253 255 (fontified t face font-lock-string-face) 255 261 (fontified t face font-lock-string-face) 261 263 (fontified t) 263 269 (fontified t face font-lock-string-face) 269 271 (fontified t) 271 290 (fontified t) 290 302 (fontified t face font-lock-string-face) 302 304 (fontified t) 304 310 (fontified t face font-lock-string-face) 310 312 (fontified t)) . 6054) (undo-tree-id313 . -312) (undo-tree-id314 . -312) 6366) ((nil ws-butler-chg delete 6366 . 6367) (6054 . 6366)) (26137 50029 865453 610000) 0 nil])
([nil nil ((5626 . 5638)) nil (26137 50289 794848 852000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5920 . 5921) (nil fontified nil 5918 . 5921) (nil fontified nil 5914 . 5918) (nil fontified nil 5913 . 5914) (nil fontified nil 5902 . 5913) (nil fontified nil 5898 . 5902) (nil fontified nil 5860 . 5898) (nil fontified nil 5856 . 5860) (nil fontified nil 5855 . 5856) (nil fontified nil 5849 . 5855) (nil fontified nil 5808 . 5849) (nil fontified nil 5802 . 5808) (nil fontified nil 5800 . 5802) (nil fontified nil 5794 . 5800) (nil fontified nil 5756 . 5794) (5756 . 5921)) ((#("onClick={(event)=>setState({...state, 'page': 'home',
                                       'vote':null,

                                       'seeHeader':true})}" 0 38 (fontified nil) 38 44 (fontified nil face font-lock-string-face) 44 46 (fontified nil) 46 52 (fontified nil face font-lock-string-face) 52 54 (fontified nil) 54 93 (fontified nil) 93 99 (fontified nil face font-lock-string-face) 99 100 (fontified nil) 100 104 (fontified nil face font-lock-constant-face) 104 107 (fontified nil) 107 142 (fontified nil) 142 146 (fontified nil) 146 157 (fontified nil face font-lock-string-face) 157 158 (fontified nil) 158 162 (fontified nil face font-lock-constant-face) 162 164 (fontified nil) 164 165 (rear-nonsticky nil fontified nil)) . 5756) (undo-tree-id479 . -164) (undo-tree-id480 . -165) (undo-tree-id481 . -104) (undo-tree-id482 . -142) (undo-tree-id483 . -52) (undo-tree-id484 . -93) (nil fontified t 5808 . 5810) (nil fontified t 5860 . 5863) (nil rear-nonsticky t 5920 . 5921)) (26137 50125 439583 670000) 0 nil])
([nil nil ((#("onClick={()=> {logVote(state.vote);
                          setState({...state, 'page':'video', 'seeHeader': false});
                         }
                   }
           style={styler(locales.voteImage[state.locale])}" 0 1 (ws-butler-chg delete fontified t) 1 5 (ws-butler-chg chg fontified t) 5 33 (ws-butler-chg chg fontified t) 33 36 (ws-butler-chg chg fontified t) 36 51 (ws-butler-chg chg fontified t) 51 62 (ws-butler-chg chg fontified t) 62 63 (ws-butler-chg delete fontified t) 63 82 (ws-butler-chg chg fontified t) 82 88 (ws-butler-chg chg fontified t face font-lock-string-face) 88 89 (ws-butler-chg chg fontified t) 89 96 (ws-butler-chg chg fontified t face font-lock-string-face) 96 98 (ws-butler-chg chg fontified t) 98 109 (ws-butler-chg chg fontified t face font-lock-string-face) 109 111 (ws-butler-chg chg fontified t) 111 116 (ws-butler-chg chg fontified t face font-lock-constant-face) 116 120 (ws-butler-chg chg fontified t) 120 128 (ws-butler-chg chg fontified t) 128 145 (ws-butler-chg chg fontified t) 145 146 (ws-butler-chg delete fontified t) 146 147 (ws-butler-chg chg fontified t) 147 155 (ws-butler-chg chg fontified t) 155 166 (ws-butler-chg chg fontified t) 166 167 (ws-butler-chg delete fontified t) 167 168 (ws-butler-chg chg fontified t) 168 179 (ws-butler-chg chg fontified t) 179 180 (ws-butler-chg delete fontified t) 180 226 (ws-butler-chg chg fontified t)) . -5751) (undo-tree-id311 . -226) (undo-tree-id312 . -226) 5977) ((5751 . 5977)) (26137 50029 407796 189000) 0 nil])
([nil nil ((5638 . 5642)) nil (26137 50289 794842 777000) 0 nil])
([nil nil ((#("style={{...styler(locales.startOverImage[state.locale]),
                   'height': '10vh',
                   'margin-top': '21vh'}}" 0 76 (fontified t) 76 78 (fontified t face font-lock-string-face) 78 84 (fontified t face font-lock-string-face) 84 86 (fontified t) 86 92 (fontified t face font-lock-string-face) 92 94 (fontified t) 94 113 (fontified t) 113 125 (fontified t face font-lock-string-face) 125 127 (fontified t) 127 133 (fontified t face font-lock-string-face) 133 135 (fontified t)) . 6069) (undo-tree-id440 . -135) (undo-tree-id441 . -135) (undo-tree-id443 . -135) 6204) ((nil ws-butler-chg delete 6204 . 6205) (6069 . 6204)) (26137 50125 280397 809000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6062 . 6063) (nil fontified nil 6061 . 6063) (nil fontified nil 6055 . 6061) (nil fontified nil 6053 . 6055) (nil fontified nil 6041 . 6053) (nil fontified nil 6022 . 6041) (nil fontified nil 6020 . 6022) (nil fontified nil 6014 . 6020) (nil fontified nil 6012 . 6014) (nil fontified nil 6006 . 6012) (nil fontified nil 6004 . 6006) (nil fontified nil 5917 . 6004) (nil fontified nil 5913 . 5917) (nil fontified nil 5909 . 5913) (nil fontified nil 5908 . 5909) (nil fontified nil 5897 . 5908) (nil fontified nil 5893 . 5897) (nil fontified nil 5855 . 5893) (nil fontified nil 5851 . 5855) (nil fontified nil 5850 . 5851) (nil fontified nil 5844 . 5850) (nil fontified nil 5803 . 5844) (nil fontified nil 5797 . 5803) (nil fontified nil 5795 . 5797) (nil fontified nil 5789 . 5795) (nil fontified nil 5751 . 5789) (5751 . 6063)) ((#("onClick={(event)=>setState({...state, 'page': 'home',
                                       'vote':null,

                                       'seeHeader':true})}
           style={{...styler(locales.startOverImage[state.locale]),
                   'height': '10vh',
                   'margin-top': '21vh'}}" 0 38 (fontified nil) 38 44 (fontified nil face font-lock-string-face) 44 46 (fontified nil) 46 52 (fontified nil face font-lock-string-face) 52 54 (fontified nil) 54 93 (fontified nil) 93 99 (fontified nil face font-lock-string-face) 99 100 (fontified nil) 100 104 (fontified nil face font-lock-constant-face) 104 107 (fontified nil) 107 142 (fontified nil) 142 146 (fontified nil) 146 157 (fontified nil face font-lock-string-face) 157 158 (fontified nil) 158 162 (fontified nil face font-lock-constant-face) 162 166 (fontified nil) 166 234 (fontified nil) 234 253 (fontified nil) 253 255 (fontified nil face font-lock-string-face) 255 261 (fontified nil face font-lock-string-face) 261 263 (fontified nil) 263 269 (fontified nil face font-lock-string-face) 269 271 (fontified nil) 271 290 (fontified nil) 290 302 (fontified nil face font-lock-string-face) 302 304 (fontified nil) 304 310 (fontified nil face font-lock-string-face) 310 311 (fontified nil) 311 312 (rear-nonsticky nil fontified nil)) . 5751) (undo-tree-id323 . -311) (undo-tree-id324 . -312) (undo-tree-id325 . -269) (undo-tree-id326 . -271) (undo-tree-id327 . -162) (undo-tree-id328 . -253) (undo-tree-id329 . -104) (undo-tree-id330 . -142) (undo-tree-id331 . -52) (undo-tree-id332 . -93) (nil fontified t 5803 . 5805) (nil fontified t 5855 . 5858) (nil fontified t 5913 . 5917) (nil fontified t 5917 . 5985) (nil fontified t 6020 . 6022) (nil rear-nonsticky t 6062 . 6063)) (26137 50028 829941 9000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5639) (undo-tree-id544 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5640) (undo-tree-id545 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5641) (undo-tree-id546 . -1) 5642) nil (26137 50289 794833 555000) 0 nil])
([nil nil ((#("style={styler(locales.voteImage[state.locale])}" 0 1 (ws-butler-chg delete fontified t) 1 47 (ws-butler-chg chg fontified t)) . -5933) (undo-tree-id438 . -47) (undo-tree-id439 . -47) 5980) ((5933 . 5980)) (26137 50125 111775 188000) 0 nil])
([nil nil ((#("
           " 0 1 (ws-butler-chg chg fontified t) 1 12 (ws-butler-chg chg fontified t)) . 5683) (undo-tree-id309 . -12) (undo-tree-id310 . -12)) ((5683 . 5695)) (26137 50028 642958 940000) 0 nil])
([nil nil ((5639 . 5651)) nil (26137 50289 794812 963000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6067 . 6068) (nil fontified nil 6066 . 6068) (nil fontified nil 6060 . 6066) (nil fontified nil 6058 . 6060) (nil fontified nil 6046 . 6058) (nil fontified nil 6027 . 6046) (nil fontified nil 6025 . 6027) (nil fontified nil 6019 . 6025) (nil fontified nil 6017 . 6019) (nil fontified nil 6011 . 6017) (nil fontified nil 6009 . 6011) (nil fontified nil 5933 . 6009) (5933 . 6068)) ((#("style={{...styler(locales.startOverImage[state.locale]),
                   'height': '10vh',
                   'margin-top': '21vh'}}" 0 57 (fontified nil) 57 76 (fontified nil) 76 78 (fontified nil face font-lock-string-face) 78 84 (fontified nil face font-lock-string-face) 84 86 (fontified nil) 86 92 (fontified nil face font-lock-string-face) 92 94 (fontified nil) 94 113 (fontified nil) 113 125 (fontified nil face font-lock-string-face) 125 127 (fontified nil) 127 133 (fontified nil face font-lock-string-face) 133 134 (fontified nil) 134 135 (rear-nonsticky nil fontified nil)) . 5933) (undo-tree-id474 . -134) (undo-tree-id475 . -135) (undo-tree-id476 . -92) (undo-tree-id477 . -94) (undo-tree-id478 . -76) (nil fontified t 5933 . 5990) (nil fontified t 6025 . 6027) (nil rear-nonsticky t 6067 . 6068)) (26137 50124 979083 727000) 0 nil])
([nil nil ((#("<div
           
           ></div>" 0 3 (fontified t) 3 5 (fontified t) 5 16 (fontified t) 16 17 (ws-butler-chg delete fontified t) 17 35 (fontified t)) . -6112) (undo-tree-id306 . -35) (undo-tree-id307 . -16) (undo-tree-id308 . -35) 6147) ((nil ws-butler-chg delete 6147 . 6148) (6112 . 6147)) (26137 50028 484230 656000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5646) (undo-tree-id539 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5647) (undo-tree-id540 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5648) (undo-tree-id541 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5649) (undo-tree-id542 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5650) (undo-tree-id543 . -1) 5651) nil (26137 50289 794803 111000) 0 nil])
([nil nil ((#("<div
           
           
           ></div>" 0 3 (fontified t) 3 5 (fontified t) 5 16 (fontified t) 16 17 (ws-butler-chg delete fontified t) 17 28 (fontified t) 28 29 (ws-butler-chg delete fontified t) 29 47 (fontified t)) . -6129) (undo-tree-id429 . -47) (undo-tree-id431 . -28) (undo-tree-id433 . -28) (undo-tree-id434 . -28) (undo-tree-id436 . -47) 6176) ((6129 . 6176)) (26137 50124 836177 230000) 0 nil])
([nil nil ((#("
           </div>" 0 1 (fontified t ws-butler-chg delete) 1 18 (fontified t)) . -6112) (undo-tree-id303 . -18) (undo-tree-id304 . -18) 6130) ((6112 . 6130)) (26137 50028 142710 324000) 0 nil])
([nil nil ((5646 . 5652)) nil (26137 50289 794775 611000) 0 nil])
([nil nil ((#("           " 0 11 (fontified t)) . 6107) (undo-tree-id417 . -11) (undo-tree-id418 . -11) (undo-tree-id420 . -11) (undo-tree-id422 . -11) (undo-tree-id423 . -11) (undo-tree-id424 . -11) (undo-tree-id426 . -11) (#("           " 0 11 (ws-butler-chg chg fontified t)) . 5689) (undo-tree-id428 . -11) 6129) ((5689 . 5700) (6107 . 6118)) (26137 50124 660827 227000) 0 nil])
([nil nil ((#("
           " 0 1 (fontified t) 1 12 (fontified t)) . 6100) (undo-tree-id295 . -12) (undo-tree-id296 . -12) (undo-tree-id297 . -12) (undo-tree-id298 . -12) (undo-tree-id300 . -12) (undo-tree-id301 . -12) (undo-tree-id302 . -12)) ((6100 . 6112) (t 26137 50023 548557 240000)) (26137 50023 460741 916000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5651) (undo-tree-id538 . -1) 5652) nil (26137 50289 794768 56000) 0 nil])
([nil nil ((6107 . 6118) 6129 (t 26137 50107 580243 934000)) ((#("           " 0 11 (fontified t ws-butler-chg chg)) . 6107) (undo-tree-id473 . -11)) (26137 50124 491626 848000) 0 nil])
nil
([nil nil ((5651 . 5664)) nil (26137 50289 794756 685000) 0 nil])
([nil nil ((#("
           " 0 1 (fontified t) 1 12 (fontified t ws-butler-chg chg)) . 6106) (undo-tree-id461 . -12) (undo-tree-id463 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -12) (undo-tree-id469 . -1) (undo-tree-id471 . -12) (undo-tree-id472 . -12) (t 26137 50107 580243 934000)) ((6106 . 6118)) (26137 50124 321566 565000) 0 nil])
([nil nil ((5664 . 5665)) nil (26137 50289 794750 352000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5688) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1)) ((5688 . 5689)) (26137 50124 136118 322000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5661) (undo-tree-id534 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -5662) (undo-tree-id535 . -1) (#("y" 0 1 (fontified t ws-butler-chg chg)) . -5663) (undo-tree-id536 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -5664) (undo-tree-id537 . -1) 5665) nil (26137 50289 794739 426000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5599) (undo-tree-id453 . -1) 5600) ((5599 . 5600) (t 26137 50112 204226 507000)) (26137 50112 110953 118000) 0 nil])
([nil nil ((5661 . 5662)) nil (26137 50289 794690 445000) 0 nil])
nil
([nil nil ((6021 . 6033)) nil (26137 50289 794683 723000) 0 nil])
([nil nil ((6033 . 6038)) nil (26137 50289 794675 982000) 0 nil])
([nil nil ((6038 . 6039)) nil (26137 50289 794658 500000) 0 nil])
([nil nil ((5678 . 5690) (t 26137 50289 899544 295000)) nil (26137 50372 983682 333000) 0 nil])
([nil nil ((5690 . 5711)) nil (26137 50372 983673 999000) 0 nil])
([nil nil ((5711 . 5717)) nil (26137 50372 983655 555000) 0 nil])
([nil nil ((5717 . 5718) (t 26137 50373 79217 900000)) nil (26137 50377 709463 139000) 0 nil])
([nil nil ((#("'height': '10vh',
                   'margin-top': '21vh'" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face) 8 10 (fontified t) 10 11 (fontified t face font-lock-string-face) 11 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 18 (fontified t) 18 37 (fontified t) 37 38 (fontified t face font-lock-string-face) 38 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 51 (fontified t) 51 52 (fontified t face font-lock-string-face) 52 56 (fontified t face font-lock-string-face) 56 57 (fontified t face font-lock-string-face)) . -5983) (undo-tree-id572 . -57) (undo-tree-id573 . -57) 6040 (t 26137 50377 807199 234000)) nil (26137 50414 705983 659000) 0 nil])
([nil nil ((#("
                   " 0 1 (fontified t) 1 20 (fontified t)) . 5963) (undo-tree-id567 . -20) (undo-tree-id568 . -20) (undo-tree-id569 . -20) (undo-tree-id570 . -20) (undo-tree-id571 . -20)) nil (26137 50414 705966 825000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -5962) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) 5963) nil (26137 50414 706565 138000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -5914) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (#("." 0 1 (fontified t)) . -5915) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (#("." 0 1 (fontified t)) . -5916) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (#("." 0 1 (fontified t)) . -5917) (undo-tree-id587 . -1) 5918) nil (26137 50419 989312 543000) 0 nil] [nil nil ((#("{" 0 1 (fontified t)) . -5914) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (#("." 0 1 (fontified t)) . -5915) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (#("." 0 1 (fontified t)) . -5916) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (#("." 0 1 (fontified t)) . -5917) (undo-tree-id561 . -1) 5918) ((5915 . 5918) (nil ws-butler-chg delete 5915 . 5916) (5914 . 5915)) (26137 50414 705904 400000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t ws-butler-chg delete)) . -5958) (undo-tree-id574 . -1) 5959) nil (26137 50419 989171 451000) 0 nil])
nil
([nil nil ((5127 . 5132) (t 26137 50420 519030 107000)) nil (26137 50538 999640 577000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5492 . 5493) (nil fontified nil 5492 . 5493) (nil fontified nil 5487 . 5492) (nil fontified nil 5475 . 5487) (nil fontified nil 5469 . 5475) (nil fontified nil 5441 . 5469) (nil fontified nil 5409 . 5441) (nil fontified nil 5406 . 5409) (nil fontified nil 5401 . 5406) (nil fontified nil 5388 . 5401) (nil fontified nil 5386 . 5388) (nil fontified nil 5372 . 5386) (nil fontified nil 5322 . 5372) (nil fontified nil 5316 . 5322) (nil fontified nil 5272 . 5316) (nil fontified nil 5270 . 5272) (nil fontified nil 5266 . 5270) (nil fontified nil 5264 . 5266) (nil fontified nil 5225 . 5264) (nil fontified nil 5216 . 5225) (nil fontified nil 5209 . 5216) (nil fontified nil 5196 . 5209) (nil fontified nil 5192 . 5196) (nil fontified nil 5187 . 5192) (nil fontified nil 5183 . 5187) (nil fontified nil 5176 . 5183) (nil fontified nil 5175 . 5176) (nil fontified nil 5170 . 5175) (nil fontified nil 5162 . 5170) (nil fontified nil 5161 . 5162) (nil fontified nil 5160 . 5161) (nil fontified nil 5159 . 5160) (nil fontified nil 5155 . 5159) (nil fontified nil 5146 . 5155) (nil fontified nil 5138 . 5146) (nil fontified nil 5137 . 5138) (nil fontified nil 5132 . 5137) (5132 . 5493)) nil (26137 50538 999628 299000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t)) . -5147) (undo-tree-id607 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -5148) (undo-tree-id608 . -1) (#("g" 0 1 (ws-butler-chg chg fontified t)) . -5149) (undo-tree-id609 . -1) (#("V" 0 1 (ws-butler-chg chg fontified t)) . -5150) (undo-tree-id610 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -5151) (undo-tree-id611 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -5152) (undo-tree-id612 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -5153) (undo-tree-id613 . -1) 5154) nil (26137 50538 999589 799000) 0 nil])
([nil nil ((5147 . 5150)) nil (26137 50538 999505 189000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t)) . -5147) (undo-tree-id604 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -5148) (undo-tree-id605 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -5149) (undo-tree-id606 . -1) 5150) nil (26137 50538 999496 263000) 0 nil])
([nil nil ((5147 . 5152)) nil (26137 50538 999478 22000) 0 nil])
([nil nil ((5152 . 5154)) nil (26137 50538 999472 78000) 0 nil])
([nil nil ((#("C" 0 1 (ws-butler-chg chg fontified t)) . -5150) (undo-tree-id600 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -5151) (undo-tree-id601 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -5152) (undo-tree-id602 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -5153) (undo-tree-id603 . -1) 5154) nil (26137 50538 999462 541000) 0 nil])
([nil nil ((5150 . 5155)) nil (26137 50538 999439 911000) 0 nil])
([nil nil ((#("P" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5266) (undo-tree-id596 . -1) (#("O" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5267) (undo-tree-id597 . -1) (#("S" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5268) (undo-tree-id598 . -1) (#("T" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5269) (undo-tree-id599 . -1) 5270) nil (26137 50538 999430 337000) 0 nil])
([nil nil ((5266 . 5269)) nil (26137 50538 999407 300000) 0 nil])
([nil nil ((5216 . 5217)) nil (26137 50538 999400 893000) 0 nil])
([nil nil ((#("
                                      body: JSON.stringify({\"vote\": vote})" 0 1 (ws-butler-chg chg fontified t) 1 33 (ws-butler-chg chg fontified t) 33 61 (ws-butler-chg chg fontified t) 61 67 (ws-butler-chg chg fontified t face font-lock-string-face) 67 75 (ws-butler-chg chg fontified t)) . 5409) (undo-tree-id593 . -75) (undo-tree-id594 . -75) (undo-tree-id595 . -75)) nil (26137 50538 999392 874000) 0 nil])
([nil nil ((#("," 0 1 (ws-butler-chg chg fontified t)) . -5408) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) 5409) nil (26137 50538 999366 152000) 0 nil])
([nil nil ((5418 . 5423) (t 26137 50539 94556 288000)) nil (26137 50643 324814 529000) 0 nil])
([nil nil ((5423 . 5424)) nil (26137 50643 324807 992000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -5423) (undo-tree-id644 . -1) 5424) nil (26137 50643 324801 251000) 0 nil])
([nil nil ((5423 . 5434)) nil (26137 50643 324790 659000) 0 nil])
([nil nil ((5433 . 5443)) nil (26137 50643 324784 900000) 0 nil])
([nil nil ((5438 . 5443)) nil (26137 50643 324779 196000) 0 nil])
([nil nil ((5440 . 5444) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 5439) (5439 . 5447) (5439 . 5440) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 5439) (undo-tree-id643 . -4) 5443) nil (26137 50643 324771 140000) 0 nil])
([nil nil ((5439 . 5447)) nil (26137 50643 324757 585000) 0 nil])
([nil nil ((5447 . 5452)) nil (26137 50643 324751 770000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -5447) (undo-tree-id638 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5448) (undo-tree-id639 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5449) (undo-tree-id640 . -1) (#("V" 0 1 (fontified t ws-butler-chg chg)) . -5450) (undo-tree-id641 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -5451) (undo-tree-id642 . -1) 5452) nil (26137 50643 324741 566000) 0 nil])
([nil nil ((5418 . 5423)) nil (26137 50643 324715 66000) 0 nil])
([nil nil ((5423 . 5431)) nil (26137 50643 324709 307000) 0 nil])
([nil nil ((5430 . 5434)) nil (26137 50643 324703 289000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t ws-butler-chg chg)) . -5429) (undo-tree-id633 . -1) (#("v" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5430) (undo-tree-id634 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5431) (undo-tree-id635 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5432) (undo-tree-id636 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5433) (undo-tree-id637 . -1) 5434) nil (26137 50643 324693 622000) 0 nil])
([nil nil ((5429 . 5434)) nil (26137 50643 324668 233000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5433) (undo-tree-id632 . -1) 5434) nil (26137 50643 324661 289000) 0 nil])
([nil nil ((5433 . 5434)) nil (26137 50643 324650 215000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t ws-butler-chg delete js--pend (((nil 1 function 5138 ("getVotes") nil)) 0 function 4921 ("StartOverPage") nil))) . 5434)) nil (26137 50643 324643 900000) 0 nil])
([nil nil ((5434 . 5446)) nil (26137 50643 324638 141000) 0 nil])
([nil nil ((5445 . 5448)) nil (26137 50643 324632 48000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -5446) (undo-tree-id630 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -5447) (undo-tree-id631 . -1) 5448) nil (26137 50643 324623 696000) 0 nil])
([nil nil ((5446 . 5449)) nil (26137 50643 324608 900000) 0 nil])
([nil nil ((5450 . 5451)) nil (26137 50643 324602 826000) 0 nil])
([nil nil ((#("const votes = useAtom(null);" 0 5 (fontified t ws-butler-chg chg face font-lock-keyword-face) 5 6 (fontified t ws-butler-chg chg) 6 11 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 11 22 (fontified t ws-butler-chg chg) 22 26 (fontified t ws-butler-chg chg face font-lock-constant-face) 26 27 (fontified t ws-butler-chg delete) 27 28 (fontified t ws-butler-chg chg)) . -5423) (undo-tree-id628 . -28) (undo-tree-id629 . -28) 5451) nil (26137 50643 324595 530000) 0 nil])
([nil nil ((5452 . 5460)) nil (26137 50643 324581 826000) 0 nil])
([nil nil ((5460 . 5462)) nil (26137 50643 324575 363000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-variable-name-face)) . -5156) (undo-tree-id624 . -1) (#("o" 0 1 (fontified t face font-lock-variable-name-face)) . -5157) (undo-tree-id625 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -5158) (undo-tree-id626 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -5159) (undo-tree-id627 . -1) 5160) nil (26137 50643 324565 197000) 0 nil])
([nil nil ((5458 . 5459)) nil (26137 50643 324542 86000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t)) . -5458) (undo-tree-id623 . -1) 5459) nil (26137 50643 324534 641000) 0 nil])
([nil nil ((5458 . 5459)) nil (26137 50643 324522 975000) 0 nil])
([nil nil ((#("    " 0 4 (ws-butler-chg chg fontified t)) . -5415) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) 5419) nil (26137 50643 324514 215000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . -5414) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) 5415) nil (26137 50643 324486 882000) 0 nil])
([nil nil ((5127 . 5132) (t 26137 50643 422135 5000)) nil (26137 50671 360415 244000) 0 nil])
([nil nil ((5132 . 5133)) nil (26137 50671 360407 800000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -5132) (undo-tree-id645 . -1) 5133) nil (26137 50671 360399 114000) 0 nil])
([nil nil ((5132 . 5134)) nil (26137 50671 360364 392000) 0 nil])
([nil nil ((5472 . 5477)) nil (26137 50671 360357 392000) 0 nil])
([nil nil ((5477 . 5479)) nil (26137 50671 360339 411000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t face font-lock-comment-face)) . -5477) (undo-tree-id652 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -5478) (undo-tree-id653 . -1) 5479 (t 26137 50671 458021 199000)) nil (26137 62861 219197 60000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t ws-butler-chg delete)) . 5132) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 5132)) nil (26137 62861 219180 486000) 0 nil])
([nil nil ((5412 . 5421)) nil (26137 62861 219173 542000) 0 nil])
([nil nil ((5421 . 5426)) nil (26137 62861 219167 783000) 0 nil])
([nil nil ((5426 . 5445)) nil (26137 62861 219161 431000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-keyword-face)) . -5442) (undo-tree-id649 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5443) (undo-tree-id650 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5444) (undo-tree-id651 . -1) 5445) nil (26137 62861 219153 172000) 0 nil])
([nil nil ((5442 . 5443)) nil (26137 62861 219089 191000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5442) (undo-tree-id648 . -1) 5443) nil (26137 62861 219081 857000) 0 nil])
([nil nil ((5442 . 5449)) nil (26137 62861 219070 228000) 0 nil])
([nil nil ((5449 . 5459)) nil (26137 62861 219064 265000) 0 nil])
([nil nil ((4969 . 4970)) nil (26137 62861 219058 320000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg chg syntax-table (7 . 47) face font-lock-string-face)) . -4969) (undo-tree-id647 . -1) 4970) nil (26137 62861 219050 968000) 0 nil])
([nil nil ((4966 . 4970) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 4965) (4965 . 4969) (4965 . 4966) (#("    " 0 4 (fontified t)) . 4965) (undo-tree-id646 . -4) 4969) nil (26137 62861 219035 932000) 0 nil])
([nil nil ((4965 . 4967)) nil (26137 62861 218999 154000) 0 nil])
([nil nil ((5133 . 5135)) nil (26137 62861 218992 358000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 5521) (#("  " 0 2 (fontified t)) . 5135)) nil (26137 62861 218973 413000) 0 nil])
([nil nil ((5685 . 5697) (t 26137 62861 324770 935000)) nil (26137 63424 587812 196000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6063) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -6045) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5987) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5970) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5943) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5907) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5866) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5847) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5818) (#(" " 0 1 (ws-butler-chg chg fontified nil)) . -5776) (nil rear-nonsticky nil 6078 . 6079) (nil fontified nil 6061 . 6079) (nil fontified nil 6056 . 6061) (nil fontified nil 6050 . 6056) (nil fontified nil 6042 . 6050) (nil fontified nil 6040 . 6042) (nil fontified nil 6016 . 6040) (nil fontified nil 5983 . 6016) (nil fontified nil 5982 . 5983) (nil fontified nil 5965 . 5982) (nil fontified nil 5957 . 5965) (nil fontified nil 5956 . 5957) (nil fontified nil 5949 . 5956) (nil fontified nil 5937 . 5949) (nil fontified nil 5936 . 5937) (nil fontified nil 5935 . 5936) (nil fontified nil 5934 . 5935) (nil fontified nil 5919 . 5934) (nil fontified nil 5905 . 5919) (nil fontified nil 5903 . 5905) (nil fontified nil 5900 . 5903) (nil fontified nil 5899 . 5900) (nil fontified nil 5898 . 5899) (nil fontified nil 5895 . 5898) (nil fontified nil 5894 . 5895) (nil fontified nil 5890 . 5894) (nil fontified nil 5889 . 5890) (nil fontified nil 5885 . 5889) (nil fontified nil 5884 . 5885) (nil fontified nil 5883 . 5884) (nil fontified nil 5858 . 5883) (nil fontified nil 5807 . 5858) (nil fontified nil 5806 . 5807) (nil fontified nil 5793 . 5806) (nil fontified nil 5792 . 5793) (nil fontified nil 5765 . 5792) (nil fontified nil 5762 . 5765) (nil fontified nil 5761 . 5762) (nil fontified nil 5760 . 5761) (nil fontified nil 5756 . 5760) (nil fontified nil 5755 . 5756) (nil fontified nil 5754 . 5755) (nil fontified nil 5753 . 5754) (nil fontified nil 5746 . 5753) (nil fontified nil 5745 . 5746) (nil fontified nil 5736 . 5745) (nil fontified nil 5712 . 5736) (nil fontified nil 5697 . 5712) (5697 . 6079)) nil (26137 63424 587794 807000) 0 nil])
([nil nil ((#("n" 0 1 (ws-butler-chg chg fontified t)) . -5830) (undo-tree-id724 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -5831) (undo-tree-id725 . -1) (#("(" 0 1 (ws-butler-chg chg fontified t)) . -5832) (undo-tree-id726 . -1) 5833) nil (26137 63424 587745 992000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg delete fontified t)) . 5830)) nil (26137 63424 587682 863000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -5825) (undo-tree-id719 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -5826) (undo-tree-id720 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t)) . -5827) (undo-tree-id721 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -5828) (undo-tree-id722 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -5829) (undo-tree-id723 . -1) 5830) nil (26137 63424 587673 992000) 0 nil])
([nil nil ((5825 . 5826)) nil (26137 63424 587648 641000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -5825) (undo-tree-id718 . -1) 5826) nil (26137 63424 587641 900000) 0 nil])
([nil nil ((5825 . 5837)) nil (26137 63424 587631 270000) 0 nil])
([nil nil ((5521 . 5525)) nil (26137 63424 587625 604000) 0 nil])
([nil nil ((5525 . 5529)) nil (26137 63424 587619 807000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg)) . -5525) (undo-tree-id714 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -5526) (undo-tree-id715 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5527) (undo-tree-id716 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5528) (undo-tree-id717 . -1) 5529) nil (26137 63424 587611 307000) 0 nil])
([nil nil ((5525 . 5540)) nil (26137 63424 587589 234000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5539) (undo-tree-id713 . -1) 5540) nil (26137 63424 587582 437000) 0 nil])
([nil nil ((5539 . 5552)) nil (26137 63424 587571 400000) 0 nil])
([nil nil ((5551 . 5556)) nil (26137 63424 587565 622000) 0 nil])
([nil nil ((5553 . 5557) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 5552) (5552 . 5560) (5552 . 5553) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 5552) (undo-tree-id712 . -4) 5556) nil (26137 63424 587557 974000) 0 nil])
([nil nil ((5552 . 5560)) nil (26137 63424 587544 623000) 0 nil])
([nil nil ((#("const votesChart = () => {
        
    }" 0 5 (fontified t ws-butler-chg chg face font-lock-keyword-face) 5 6 (fontified t ws-butler-chg chg) 6 16 (fontified t ws-butler-chg chg face font-lock-variable-name-face) 16 27 (fontified t ws-butler-chg chg) 27 35 (fontified t ws-butler-chg chg) 35 36 (fontified t ws-butler-chg delete) 36 40 (ws-butler-chg chg fontified t) 40 41 (ws-butler-chg delete fontified t)) . -5525) (undo-tree-id710 . -41) (undo-tree-id711 . -41) 5566) nil (26137 63424 587537 197000) 0 nil])
([nil nil ((#("P" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5796) (undo-tree-id697 . -1) (#("r" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5797) (undo-tree-id698 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5798) (undo-tree-id699 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5799) (undo-tree-id700 . -1) (#("p" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5800) (undo-tree-id701 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5801) (undo-tree-id702 . -1) (#("-" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5802) (undo-tree-id703 . -1) (#("B" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5803) (undo-tree-id704 . -1) (#("u" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5804) (undo-tree-id705 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5805) (undo-tree-id706 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5806) (undo-tree-id707 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5807) (undo-tree-id708 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5808) (undo-tree-id709 . -1) 5809) nil (26137 63424 587515 975000) 0 nil])
([nil nil ((5796 . 5801)) nil (26137 63424 587459 679000) 0 nil])
([nil nil ((#("x" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5800) (undo-tree-id696 . -1) 5801) nil (26137 63424 587452 567000) 0 nil])
([nil nil ((5800 . 5805)) nil (26137 63424 587442 12000) 0 nil])
([nil nil ((#("j" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5803) (undo-tree-id694 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5804) (undo-tree-id695 . -1) 5805) nil (26137 63424 587434 530000) 0 nil])
([nil nil ((5803 . 5807)) nil (26137 63424 587419 790000) 0 nil])
([nil nil ((#("C" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5717) (undo-tree-id687 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5718) (undo-tree-id688 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5719) (undo-tree-id689 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5720) (undo-tree-id690 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5721) (undo-tree-id691 . -1) (#("n" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5722) (undo-tree-id692 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5723) (undo-tree-id693 . -1) 5724) nil (26137 63424 587408 808000) 0 nil])
([nil nil ((5717 . 5726)) nil (26137 63424 587328 457000) 0 nil])
([nil nil ((5726 . 5733)) nil (26137 63424 587322 809000) 0 nil])
([nil nil ((#("i" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5729) (undo-tree-id683 . -1) (#("m" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5730) (undo-tree-id684 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5731) (undo-tree-id685 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5732) (undo-tree-id686 . -1) 5733) nil (26137 63424 587314 68000) 0 nil])
([nil nil ((5729 . 5733)) nil (26137 63424 587292 216000) 0 nil])
([nil nil ((#("<div className='StartOver-Text'> {locales.startOverText0[state.locale]} </div>" 0 7 (fontified t) 7 13 (fontified t) 13 15 (fontified t) 15 31 (fontified t face font-lock-string-face) 31 50 (fontified t) 50 78 (fontified t)) . 6095) (undo-tree-id681 . -78) (undo-tree-id682 . -78) 6173) nil (26137 63424 587285 179000) 0 nil])
([nil nil ((#("{contentText()}" 0 1 (ws-butler-chg delete fontified t) 1 7 (ws-butler-chg chg fontified t) 7 8 (ws-butler-chg chg fontified t) 8 15 (ws-butler-chg chg fontified t)) . -5957) (undo-tree-id679 . -15) (undo-tree-id680 . -15) 5972) nil (26137 63424 587269 920000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6034 . 6035) (nil fontified nil 6007 . 6035) (nil fontified nil 5988 . 6007) (nil fontified nil 5972 . 5988) (nil fontified nil 5970 . 5972) (nil fontified nil 5964 . 5970) (nil fontified nil 5957 . 5964) (5957 . 6035)) nil (26137 63424 587254 920000) 0 nil])
([nil nil ((#("{locales.startOverText1[state.locale]}" 0 38 (fontified t)) . 6203) (undo-tree-id677 . -38) (undo-tree-id678 . -38) 6241) nil (26137 63424 587242 457000) 0 nil])
([nil nil ((5989 . 6001) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 5989) (undo-tree-id676 . -1) 5990) nil (26137 63424 587227 494000) 0 nil])
([nil nil ((6001 . 6003)) nil (26137 63424 587216 457000) 0 nil])
([nil nil ((#("[" 0 1 (ws-butler-chg chg fontified t)) . -6002) (undo-tree-id675 . -1) 6003) nil (26137 63424 587209 457000) 0 nil])
([nil nil ((6002 . 6004)) nil (26137 63424 587199 198000) 0 nil])
([nil nil ((6043 . 6047)) nil (26137 63424 587193 587000) 0 nil])
([nil nil ((6047 . 6059)) nil (26137 63424 587187 735000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6096 . 6097) (nil fontified nil 6059 . 6097) (6059 . 6097)) nil (26137 63424 587181 532000) 0 nil])
([nil nil ((6059 . 6061)) nil (26137 63424 587174 383000) 0 nil])
([nil nil ((#("/" 0 1 (ws-butler-chg chg fontified t)) . -6060) (undo-tree-id674 . -1) 6061) nil (26137 63424 587167 513000) 0 nil])
([nil nil ((6060 . 6062)) nil (26137 63424 587156 735000) 0 nil])
([nil nil ((6100 . 6104)) nil (26137 63424 587151 235000) 0 nil])
([nil nil ((6104 . 6116)) nil (26137 63424 587145 402000) 0 nil])
([nil nil ((#("{locales.startOverText2[state.locale]} " 0 4 (fontified t) 4 11 (fontified t) 11 18 (fontified t) 18 23 (fontified t) 23 34 (fontified t) 34 39 (fontified t)) . 6380) (undo-tree-id672 . -39) (undo-tree-id673 . -39) 6419) nil (26137 63424 587138 365000) 0 nil])
([nil nil ((6104 . 6116)) nil (26137 63424 587124 550000) 0 nil])
([nil nil ((6116 . 6119)) nil (26137 63424 587118 847000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t ws-butler-chg chg)) . -6117) (undo-tree-id670 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -6118) (undo-tree-id671 . -1) 6119) nil (26137 63424 587111 106000) 0 nil])
([nil nil ((6117 . 6119)) nil (26137 63424 587096 773000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6157 . 6158) (nil fontified nil 6153 . 6158) (nil fontified nil 6142 . 6153) (nil fontified nil 6137 . 6142) (nil fontified nil 6130 . 6137) (nil fontified nil 6123 . 6130) (nil fontified nil 6119 . 6123) (6119 . 6158)) nil (26137 63424 587089 643000) 0 nil])
([nil nil ((6158 . 6161)) nil (26137 63424 587078 588000) 0 nil])
([nil nil ((6161 . 6162)) nil (26137 63424 587072 643000) 0 nil])
([nil nil ((#("<br/>
           <div>{locales.voteConfirm[state.locale]}</div>" 0 1 (ws-butler-chg delete fontified t) 1 5 (ws-butler-chg chg fontified t) 5 6 (ws-butler-chg chg fontified t) 6 17 (ws-butler-chg chg fontified t) 17 18 (ws-butler-chg delete fontified t) 18 38 (ws-butler-chg chg fontified t) 38 43 (ws-butler-chg chg fontified t) 43 49 (ws-butler-chg chg fontified t) 49 62 (ws-butler-chg chg fontified t) 62 63 (ws-butler-chg chg fontified t)) . -6192) (undo-tree-id668 . -63) (undo-tree-id669 . -63) 6255) nil (26137 63424 587065 514000) 0 nil])
([nil nil ((#("<div className='StartOver-Text'>  </div>" 0 13 (fontified t) 13 15 (fontified t) 15 31 (fontified t face font-lock-string-face) 31 33 (fontified t) 33 34 (ws-butler-chg delete fontified t) 34 40 (fontified t)) . -6252) (undo-tree-id666 . -40) (undo-tree-id667 . -40) 6292) nil (26137 63424 587050 254000) 0 nil])
([nil nil ((#("<div className='StartOver-Text'
           style={{marginTop: '5vh'}}> </div>" 0 3 (fontified t) 3 15 (fontified t) 15 31 (fontified t face font-lock-string-face) 31 32 (fontified t) 32 43 (fontified t) 43 62 (fontified t) 62 63 (fontified t face font-lock-string-face) 63 67 (fontified t face font-lock-string-face) 67 71 (fontified t) 71 72 (ws-butler-chg delete fontified t) 72 77 (fontified t)) . -6264) (undo-tree-id662 . -77) (undo-tree-id663 . -77) (undo-tree-id664 . -71) (undo-tree-id665 . -77) 6341) nil (26137 63424 587034 366000) 0 nil])
([nil nil ((#("           " 0 11 (fontified t)) . 6216) (undo-tree-id654 . -11) (undo-tree-id655 . -11) (undo-tree-id656 . -11) (undo-tree-id657 . -11) (#("           " 0 11 (fontified t)) . 6215) (undo-tree-id658 . -11) (#("           " 0 4 (fontified t) 4 11 (fontified t)) . 6214) (undo-tree-id659 . -11) (#("           " 0 11 (ws-butler-chg chg fontified t)) . 6177) (undo-tree-id660 . -11) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 5521) (undo-tree-id661 . -4) 6222) nil (26137 63424 587003 32000) 0 nil])
([nil nil ((#("<div className=\"Content-text\"
           style={contentStyler()}>" 0 1 (fontified t) 1 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t) 30 33 (fontified t) 33 35 (fontified t) 35 41 (fontified t) 41 42 (fontified t) 42 48 (fontified t) 48 63 (fontified t) 63 64 (fontified t) 64 65 (fontified t)) . -5876) (undo-tree-id742 . -65) (undo-tree-id743 . -65) (undo-tree-id744 . -65) 5941 (t 26137 63424 690334 494000)) nil (26137 63449 730753 208000) 0 nil])
([nil nil ((#("</div>" 0 5 (fontified t) 5 6 (rear-nonsticky t fontified t)) . -6105) (undo-tree-id740 . -6) (undo-tree-id741 . -6) 6111) nil (26137 63449 730733 634000) 0 nil])
([nil nil ((#("style={votesChart()}" 0 1 (fontified t) 1 19 (fontified t) 19 20 (fontified t)) . -5825) (undo-tree-id738 . -20) (undo-tree-id739 . -20) 5845) nil (26137 63449 730717 449000) 0 nil])
([nil nil ((#("           " 0 11 (fontified t)) . 6052) (undo-tree-id727 . -11) (#("           " 0 11 (fontified t)) . 5834) (undo-tree-id728 . -11) (undo-tree-id729 . -11) (#("           " 0 11 (fontified t)) . 5814) (undo-tree-id730 . -11) (undo-tree-id731 . -11) (undo-tree-id732 . -11) (undo-tree-id733 . -11) (undo-tree-id734 . -11) (undo-tree-id735 . -11) (undo-tree-id736 . -11) (undo-tree-id737 . -11) 5825) nil (26137 63449 730691 430000) 0 nil])
([nil nil ((5814 . 5825) 5825 (t 26137 63449 830226 75000)) nil (26137 63526 819358 707000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6339) (undo-tree-id750 . -1) 6340 (t 26137 63449 830226 75000)) nil (26137 63526 819350 151000) 0 nil])
([nil nil ((#("



" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . 6100) (undo-tree-id748 . -4) (undo-tree-id749 . -4)) nil (26137 63526 819336 596000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 6062) (undo-tree-id746 . -2) (undo-tree-id747 . -2)) nil (26137 63526 819320 911000) 0 nil])
([nil nil ((13316 . 13336) ("                   " . 13316) ("  " . -7440) (5118 . 5122) (#("  " 0 2 (fontified t face font-lock-comment-delimiter-face)) . 5118) (5106 . 5108) (#("            " 0 12 (fontified t face font-lock-comment-face)) . -5083) (#("            " 0 12 (fontified t face font-lock-comment-face)) . -5064) (#("  " 0 2 (fontified t face font-lock-comment-face)) . -5022) (4981 . 4983) (4970 . 4974) (4692 . 4693) (4604 . 4605) (4455 . 4456) (3239 . 3240) (3120 . 3121) 1) nil (26137 63526 819300 540000) 0 nil])
([nil nil ((#("           " 0 11 (ws-butler-chg chg fontified t)) . 5803) (undo-tree-id745 . -11) 6500) nil (26137 64043 900437 518000) 0 nil])
([nil nil ((5816 . 5828) (t 26137 63527 701890 347000)) nil (26137 64067 316841 598000) 0 nil] [nil nil ((#("<div className='Votes-Chart'

           ></div>
" 0 1 (fontified t) 1 15 (fontified t) 15 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t) 29 30 (fontified t) 30 41 (fontified t) 41 42 (fontified t) 42 49 (fontified t)) . -5774) (undo-tree-id755 . -49) (undo-tree-id756 . -49) (undo-tree-id757 . -49) (undo-tree-id758 . -29) (undo-tree-id759 . -29) (undo-tree-id760 . -48) (undo-tree-id761 . -49) 5823 (t 26137 63527 701890 347000)) ((5774 . 5823)) (26137 64043 656585 190000) 0 nil] [nil nil ((6489 . 6490) (t 26137 63527 701890 347000)) ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 6489)) (26137 64006 765312 925000) 0 nil])
([nil nil ((5818 . 5829) (#("           " 0 11 (fontified nil ws-butler-chg chg)) . 5817) (5817 . 5828) (5817 . 5818) (#("           " 0 11 (fontified t ws-butler-chg chg)) . 5817) (undo-tree-id777 . -11) 5828) nil (26137 64067 316832 987000) 0 nil])
([nil nil ((5774 . 5785)) ((#("<canvas id " 0 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg)) . 5774) (undo-tree-id771 . -11) (undo-tree-id772 . -10) (undo-tree-id773 . -11)) (26137 64043 417331 592000) 0 nil])
nil
([nil nil ((5817 . 5828)) nil (26137 64067 316819 173000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5784) (undo-tree-id754 . -1) 5785) ((5784 . 5785)) (26137 64043 228264 659000) 0 nil])
([nil nil ((5828 . 5837)) nil (26137 64067 316813 617000) 0 nil])
([nil nil ((5784 . 5786)) ((#("=\"" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg face font-lock-string-face)) . 5784) (undo-tree-id768 . -2) (undo-tree-id769 . -1) (undo-tree-id770 . -2)) (26137 64042 977864 317000) 0 nil])
([nil nil ((5837 . 5840)) nil (26137 64067 316807 765000) 0 nil])
([nil nil ((5786 . 5798)) ((#("votesChart\"'" 0 1 (fontified t face font-lock-string-face) 1 10 (fontified t ws-butler-chg chg face font-lock-string-face) 10 11 (fontified t ws-butler-chg chg face font-lock-string-face) 11 12 (fontified t ws-butler-chg chg face font-lock-string-face)) . 5786) (undo-tree-id765 . -12) (undo-tree-id766 . -10) (undo-tree-id767 . -12)) (26137 64042 791740 699000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5839) (undo-tree-id776 . -1) 5840) nil (26137 64067 316800 858000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5796) (undo-tree-id752 . -1) (#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5797) (undo-tree-id753 . -1) 5798) ((5797 . 5798) (nil ws-butler-chg delete 5797 . 5798) (5796 . 5797)) (26137 64042 614594 320000) 0 nil])
([nil nil ((5839 . 5850)) nil (26137 64067 316789 914000) 0 nil])
([nil nil ((5796 . 5797)) ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 5796) (undo-tree-id763 . -1) (undo-tree-id764 . -1)) (26137 64042 246214 448000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5849) (undo-tree-id775 . -1) 5850) nil (26137 64067 316782 654000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5785) (undo-tree-id751 . -1) 5786) ((nil ws-butler-chg delete 5786 . 5787) (5785 . 5786)) (26137 64041 924456 22000) 0 nil])
([nil nil ((5849 . 5856)) nil (26137 64067 316770 895000) 0 nil])
([nil nil ((5785 . 5786)) ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . 5785)) (26137 64041 846970 50000) 0 nil])
([nil nil ((5856 . 5861)) nil (26137 64067 316765 25000) 0 nil])
([nil nil ((5797 . 5799)) ((#("/>" 0 2 (fontified t ws-butler-chg chg)) . 5797) (undo-tree-id762 . -2)) (26137 64041 846504 441000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t ws-butler-chg chg)) . -5860) (undo-tree-id774 . -1) 5861) nil (26137 64067 316756 192000) 0 nil])
nil
([nil nil ((5860 . 5861)) nil (26137 64067 316710 914000) 0 nil])
([nil nil ((5498 . 5507) (t 26137 64067 419067 201000)) nil (26137 64248 58068 890000) 0 nil])
([nil nil ((5507 . 5513)) nil (26137 64248 58062 261000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-type-face)) . -5512) (undo-tree-id788 . -1) 5513) nil (26137 64248 58055 390000) 0 nil])
([nil nil ((5512 . 5515)) nil (26137 64248 58044 761000) 0 nil])
([nil nil ((5515 . 5516)) nil (26137 64248 58039 76000) 0 nil])
([nil nil ((172 . 189)) nil (26137 64248 58033 242000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg)) . -184) (undo-tree-id783 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -185) (undo-tree-id784 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -186) (undo-tree-id785 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -187) (undo-tree-id786 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -188) (undo-tree-id787 . -1) 189) nil (26137 64248 58023 39000) 0 nil])
([nil nil ((184 . 193)) nil (26137 64248 57995 243000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -192) (undo-tree-id782 . -1) 193) nil (26137 64248 57988 113000) 0 nil])
([nil nil ((192 . 195)) nil (26137 64248 57977 21000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -192) (undo-tree-id779 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -193) (undo-tree-id780 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -194) (undo-tree-id781 . -1) 195) nil (26137 64248 57968 2000) 0 nil])
([nil nil ((192 . 198)) nil (26137 64248 57947 280000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -197) (undo-tree-id778 . -1) 198) nil (26137 64248 57938 447000) 0 nil])
([nil nil ((197 . 206)) nil (26137 64248 57904 169000) 0 nil])
([nil nil ((206 . 207)) nil (26137 64248 57897 725000) 0 nil])
([nil nil ((207 . 208)) nil (26137 64248 57880 317000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . -207) (undo-tree-id789 . -1) (undo-tree-id790 . -1) 208 (t 26137 64248 161984 644000)) nil (26137 64249 209943 813000) 0 nil])
([nil nil ((5551 . 5553) (t 26137 64249 341977 849000)) nil (26137 64584 631617 621000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -5551) (undo-tree-id832 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -5552) (undo-tree-id833 . -1) 5553) nil (26137 64584 631596 10000) 0 nil])
([nil nil ((5551 . 5553)) nil (26137 64584 631576 584000) 0 nil])
([nil nil ((5552 . 5561)) nil (26137 64584 631570 751000) 0 nil])
([nil nil ((5554 . 5562) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 5553) (5553 . 5565) (5553 . 5554) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 5553) (undo-tree-id831 . -8) 5561) nil (26137 64584 631562 510000) 0 nil])
([nil nil ((5553 . 5565)) nil (26137 64584 631549 214000) 0 nil])
([nil nil ((5565 . 5586)) nil (26137 64584 631543 492000) 0 nil])
([nil nil ((5586 . 5588)) nil (26137 64584 631537 806000) 0 nil])
([nil nil ((5588 . 5589)) nil (26137 64584 631531 955000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5588) (undo-tree-id830 . -1) 5589) nil (26137 64584 631524 973000) 0 nil])
([nil nil ((5588 . 5596)) nil (26137 64584 631514 325000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5595) (undo-tree-id829 . -1) 5596) nil (26137 64584 631507 84000) 0 nil])
([nil nil ((5595 . 5602)) nil (26137 64584 631496 158000) 0 nil])
([nil nil ((5602 . 5604)) nil (26137 64584 631490 510000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t ws-butler-chg chg)) . -5602) (undo-tree-id827 . -1) (#("}" 0 1 (fontified t ws-butler-chg chg)) . -5603) (undo-tree-id828 . -1) 5604) nil (26137 64584 631482 659000) 0 nil])
([nil nil ((5602 . 5615)) nil (26137 64584 631467 399000) 0 nil])
([nil nil ((5493 . 5498)) nil (26137 64584 631461 529000) 0 nil])
([nil nil ((5498 . 5516)) nil (26137 64584 631455 492000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -5514) (undo-tree-id825 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5515) (undo-tree-id826 . -1) 5516) nil (26137 64584 631447 418000) 0 nil])
([nil nil ((5514 . 5517)) nil (26137 64584 631432 103000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t ws-butler-chg chg)) . -5515) (undo-tree-id823 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5516) (undo-tree-id824 . -1) 5517) nil (26137 64584 631424 788000) 0 nil])
([nil nil ((5515 . 5519)) nil (26137 64584 631409 881000) 0 nil])
([nil nil ((5518 . 5523)) nil (26137 64584 631403 992000) 0 nil])
([nil nil ((5520 . 5524) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 5519) (5519 . 5527) (5519 . 5520) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 5519) (undo-tree-id822 . -4) 5523) nil (26137 64584 631396 29000) 0 nil])
([nil nil ((5519 . 5527)) nil (26137 64584 631382 641000) 0 nil])
([nil nil ((5527 . 5538)) nil (26137 64584 631376 918000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5537) (undo-tree-id821 . -1) 5538) nil (26137 64584 631370 233000) 0 nil])
([nil nil ((5537 . 5539)) nil (26137 64584 631359 863000) 0 nil])
([nil nil ((5539 . 5548)) nil (26137 64584 631353 918000) 0 nil])
([nil nil ((5548 . 5556)) nil (26137 64584 631348 215000) 0 nil])
([nil nil ((5159 . 5164)) nil (26137 64584 631342 307000) 0 nil])
([nil nil ((5164 . 5172)) nil (26137 64584 631336 715000) 0 nil])
([nil nil ((5171 . 5179)) nil (26137 64584 631331 67000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5178) (undo-tree-id820 . -1) 5179) nil (26137 64584 631324 215000) 0 nil])
([nil nil ((5178 . 5186)) nil (26137 64584 631313 419000) 0 nil])
([nil nil ((5187 . 5199)) nil (26137 64584 631307 734000) 0 nil])
([nil nil ((5198 . 5202)) nil (26137 64584 631301 863000) 0 nil])
([nil nil ((5203 . 5204)) nil (26137 64584 631296 48000) 0 nil])
([nil nil ((5532 . 5540)) nil (26137 64584 631290 456000) 0 nil])
([nil nil ((5540 . 5559)) nil (26137 64584 631284 789000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg)) . -5558) (undo-tree-id819 . -1) 5559) nil (26137 64584 631277 808000) 0 nil])
([nil nil ((5558 . 5559)) nil (26137 64584 631267 67000) 0 nil])
([nil nil ((#("{" 0 1 (ws-butler-chg chg fontified t)) . -5626) (undo-tree-id818 . -1) 5627) nil (26137 64584 631260 271000) 0 nil])
([nil nil ((#("}" 0 1 (ws-butler-chg delete fontified t)) . -5626) (undo-tree-id817 . -1) 5627) nil (26137 64584 631248 493000) 0 nil])
([nil nil ((5775 . 5780)) nil (26137 64584 631237 864000) 0 nil])
([nil nil ((5780 . 5796)) nil (26137 64584 631231 938000) 0 nil])
([nil nil ((5796 . 5805)) nil (26137 64584 631225 697000) 0 nil])
([nil nil ((5805 . 5806)) nil (26137 64584 631219 475000) 0 nil])
([nil nil ((#("new Chart(
            document.getElementById('votesChart'), chartConfig
        )" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 9 (fontified t face font-lock-type-face) 9 11 (ws-butler-chg chg fontified t) 11 23 (ws-butler-chg chg fontified t) 23 47 (ws-butler-chg chg fontified t) 47 49 (ws-butler-chg chg fontified t face font-lock-string-face) 49 59 (ws-butler-chg chg fontified t face font-lock-string-face) 59 62 (ws-butler-chg chg fontified t) 62 73 (ws-butler-chg chg fontified t) 73 74 (ws-butler-chg delete fontified t) 74 82 (ws-butler-chg chg fontified t) 82 83 (ws-butler-chg delete fontified t)) . 5681) (undo-tree-id815 . -83) (undo-tree-id816 . -83) 5764) nil (26137 64584 631211 641000) 0 nil])
([nil nil ((5626 . 5631)) nil (26137 64584 631160 660000) 0 nil])
([nil nil ((5717 . 5722)) nil (26137 64584 631154 938000) 0 nil])
([nil nil ((5719 . 5723) (#("        " 0 8 (ws-butler-chg chg fontified nil)) . 5718) (5718 . 5726) (5718 . 5719) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 5718) (undo-tree-id814 . -4) 5722) nil (26137 64584 631146 938000) 0 nil])
([nil nil ((5718 . 5726)) nil (26137 64584 631133 327000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5808 . 5809) (nil fontified nil 5808 . 5809) (nil fontified nil 5800 . 5808) (nil fontified nil 5799 . 5800) (nil fontified nil 5788 . 5799) (nil fontified nil 5785 . 5788) (nil fontified nil 5775 . 5785) (nil fontified nil 5773 . 5775) (nil fontified nil 5749 . 5773) (nil fontified nil 5737 . 5749) (nil fontified nil 5735 . 5737) (nil fontified nil 5730 . 5735) (nil fontified nil 5729 . 5730) (nil fontified nil 5726 . 5729) (5726 . 5809)) nil (26137 64584 631124 846000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -5678) (undo-tree-id812 . -8) (undo-tree-id813 . -8) 5686) nil (26137 64584 631107 883000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5677) (undo-tree-id810 . -1) (undo-tree-id811 . -1) 5678) nil (26137 64584 631093 105000) 0 nil])
([nil nil ((#("useEffect(()=>{
        getVotes();
    }, [])" 0 16 (fontified t) 16 31 (fontified t) 31 35 (fontified t) 35 36 (ws-butler-chg delete fontified t) 36 40 (fontified t) 40 41 (fontified t) 41 45 (fontified t) 45 46 (fontified t)) . 5642) (undo-tree-id808 . -46) (undo-tree-id809 . -46) 5688) nil (26137 64584 631077 809000) 0 nil])
([nil nil ((5565 . 5570)) nil (26137 64584 631062 939000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5615 . 5616) (nil fontified nil 5615 . 5616) (nil fontified nil 5611 . 5615) (nil fontified nil 5610 . 5611) (nil fontified nil 5606 . 5610) (nil fontified nil 5605 . 5606) (nil fontified nil 5601 . 5605) (nil fontified nil 5586 . 5601) (nil fontified nil 5570 . 5586) (5570 . 5616)) nil (26137 64584 631055 383000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . -5688) (undo-tree-id807 . -1) 5689) nil (26137 64584 631042 198000) 0 nil])
([nil nil ((#("v" 0 1 (ws-butler-chg chg fontified t)) . -5677) (undo-tree-id802 . -1) (#("o" 0 1 (ws-butler-chg chg fontified t)) . -5678) (undo-tree-id803 . -1) (#("t" 0 1 (ws-butler-chg chg fontified t)) . -5679) (undo-tree-id804 . -1) (#("e" 0 1 (ws-butler-chg chg fontified t)) . -5680) (undo-tree-id805 . -1) (#("s" 0 1 (ws-butler-chg chg fontified t)) . -5681) (undo-tree-id806 . -1) 5682) nil (26137 64584 631027 846000) 0 nil])
([nil nil ((5677 . 5679)) nil (26137 64584 631000 902000) 0 nil])
([nil nil ((#("P" 0 1 (ws-butler-chg chg fontified t)) . -5677) (undo-tree-id800 . -1) (#("{" 0 1 (ws-butler-chg chg fontified t)) . -5678) (undo-tree-id801 . -1) 5679) nil (26137 64584 630992 920000) 0 nil])
([nil nil ((5677 . 5679)) nil (26137 64584 630977 13000) 0 nil])
([nil nil ((5678 . 5687)) nil (26137 64584 630971 50000) 0 nil])
([nil nil ((5680 . 5688) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 5679) (5679 . 5691) (5679 . 5680) (#("        " 0 8 (ws-butler-chg chg fontified t)) . 5679) (undo-tree-id799 . -8) 5687) nil (26137 64584 630962 921000) 0 nil])
([nil nil ((5679 . 5691)) nil (26137 64584 630949 828000) 0 nil])
([nil nil ((5691 . 5697)) nil (26137 64584 630943 958000) 0 nil])
([nil nil ((5697 . 5699)) nil (26137 64584 630937 587000) 0 nil])
([nil nil ((5699 . 5701)) nil (26137 64584 630931 902000) 0 nil])
([nil nil ((5700 . 5701)) nil (26137 64584 630925 939000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t)) . -5700) (undo-tree-id798 . -1) 5701) nil (26137 64584 630918 958000) 0 nil])
([nil nil ((5700 . 5705)) nil (26137 64584 630908 347000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5704) (undo-tree-id797 . -1) 5705) nil (26137 64584 630901 310000) 0 nil])
([nil nil ((5704 . 5705)) nil (26137 64584 630889 995000) 0 nil])
([nil nil ((#("'" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5704) (undo-tree-id796 . -1) 5705) nil (26137 64584 630883 143000) 0 nil])
([nil nil ((5704 . 5707)) nil (26137 64584 630872 532000) 0 nil])
([nil nil ((5707 . 5728)) nil (26137 64584 630866 717000) 0 nil])
([nil nil ((5729 . 5730)) nil (26137 64584 630860 717000) 0 nil])
([nil nil ((5730 . 5743)) nil (26137 64584 630854 958000) 0 nil])
([nil nil ((5743 . 5751)) nil (26137 64584 630849 329000) 0 nil])
([nil nil ((5751 . 5755)) nil (26137 64584 630843 403000) 0 nil])
([nil nil ((5754 . 5756)) nil (26137 64584 630837 662000) 0 nil])
([nil nil ((5755 . 5768)) nil (26137 64584 630831 551000) 0 nil])
([nil nil ((5757 . 5769) (#("                " 0 16 (ws-butler-chg chg fontified nil)) . 5756) (5756 . 5772) (5756 . 5757) (#("            " 0 12 (ws-butler-chg chg fontified t)) . 5756) (undo-tree-id795 . -12) 5768) nil (26137 64584 630823 347000) 0 nil])
([nil nil ((5756 . 5772)) nil (26137 64584 630810 162000) 0 nil])
([nil nil ((5772 . 5783)) nil (26137 64584 630804 125000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5782) (undo-tree-id794 . -1) 5783) nil (26137 64584 630796 995000) 0 nil])
([nil nil ((5782 . 5786)) nil (26137 64584 630786 51000) 0 nil])
([nil nil ((5786 . 5787)) nil (26137 64584 630780 255000) 0 nil])
([nil nil ((5787 . 5804)) nil (26137 64584 630774 570000) 0 nil])
([nil nil ((5804 . 5806)) nil (26137 64584 630768 884000) 0 nil])
([nil nil ((#("t" 0 1 (ws-butler-chg chg fontified t)) . -5805) (undo-tree-id793 . -1) 5806) nil (26137 64584 630761 662000) 0 nil])
([nil nil ((5805 . 5816)) nil (26137 64584 630750 311000) 0 nil])
([nil nil ((5816 . 5821)) nil (26137 64584 630744 588000) 0 nil])
([nil nil ((5820 . 5821)) nil (26137 64584 630738 718000) 0 nil])
([nil nil ((#("c" 0 1 (ws-butler-chg chg fontified t)) . -5820) (undo-tree-id792 . -1) 5821) nil (26137 64584 630730 792000) 0 nil])
([nil nil ((5820 . 5832)) nil (26137 64584 630718 922000) 0 nil])
([nil nil ((5832 . 5835)) nil (26137 64584 630712 774000) 0 nil])
([nil nil ((5631 . 5632)) nil (26137 64584 630705 700000) 0 nil])
([nil nil ((#("    " 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t)) . 5868) (undo-tree-id791 . -4) 5632) nil (26137 64584 630690 329000) 0 nil])
([nil nil ((#("." 0 1 (fontified t face font-lock-string-face)) . 191) (t 26137 64584 744149 498000)) nil (26137 64603 779020 536000) 0 nil])
([nil nil ((196 . 197)) nil (26137 64603 779003 17000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . 200) (t 26137 64603 888050 63000)) nil (26137 64712 996758 683000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face font-lock-string-face)) . -199) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) 200) nil (26137 64712 996747 183000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 199) (#("t" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 199) (#("u" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 199)) nil (26137 64712 996670 554000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -191) (undo-tree-id852 . -1) (#("h" 0 1 (fontified t face font-lock-string-face)) . -192) (undo-tree-id853 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -193) (undo-tree-id854 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -194) (undo-tree-id855 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -195) (undo-tree-id856 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -196) (undo-tree-id857 . -1) (#("j" 0 1 (fontified t face font-lock-string-face)) . -197) (undo-tree-id858 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -198) (undo-tree-id859 . -1) 199 (t 26137 64713 147489 993000)) nil (26137 64928 111632 314000) 0 nil])
([nil nil ((191 . 194)) nil (26137 64928 111554 926000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -193) (undo-tree-id851 . -1) 194) nil (26137 64928 111547 907000) 0 nil])
([nil nil ((193 . 206)) nil (26137 64928 111537 203000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -181) (undo-tree-id849 . -1) (#("r" 0 1 (fontified t)) . -182) (undo-tree-id850 . -1) 183) nil (26137 64928 111529 518000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg delete)) . 181)) nil (26137 64928 111514 481000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t)) . -179) (undo-tree-id847 . -1) (#("h" 0 1 (fontified t)) . -180) (undo-tree-id848 . -1) 181) nil (26137 64928 111506 796000) 0 nil])
([nil nil ((179 . 181)) nil (26137 64928 111491 981000) 0 nil])
([nil nil ((181 . 184)) nil (26137 64928 111486 93000) 0 nil])
([nil nil ((#("useEffect(()=>{
        new Chart(
            document.getElementById('votesChart'), chartConfig
        )
    }, [votes])" 0 16 (fontified t) 16 24 (fontified t) 24 27 (fontified t face font-lock-keyword-face) 27 28 (fontified t) 28 33 (fontified t face font-lock-type-face) 33 35 (fontified t) 35 47 (fontified t) 47 71 (fontified t) 71 73 (fontified t face font-lock-string-face) 73 83 (fontified t face font-lock-string-face) 83 86 (fontified t) 86 97 (fontified t) 97 98 (fontified t) 98 106 (fontified t) 106 107 (rear-nonsticky t fontified t) 107 108 (fontified t) 108 112 (fontified t) 112 113 (fontified t) 113 123 (fontified t)) . -5875) (undo-tree-id845 . -123) (undo-tree-id846 . -123) 5998) nil (26137 64928 111478 944000) 0 nil])
([nil nil ((#("const chartConfig = {
        type: 'bar',
        data: {
            labels: ['duel', 'dinner', 'disaster'],
            datasets: [{
                label: 'votes',
                data: votes.map(vote => vote[0])
            }]
        }
    }
    " 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 16 (fontified t face font-lock-variable-name-face) 16 17 (face font-lock-variable-name-face fontified t) 17 22 (fontified t) 22 36 (fontified t) 36 41 (fontified t face font-lock-string-face) 41 43 (fontified t) 43 59 (fontified t) 59 80 (fontified t) 80 86 (fontified t face font-lock-string-face) 86 88 (fontified t) 88 96 (fontified t face font-lock-string-face) 96 98 (fontified t) 98 108 (fontified t face font-lock-string-face) 108 109 (fontified t) 109 111 (fontified t) 111 136 (fontified t) 136 159 (fontified t) 159 166 (fontified t face font-lock-string-face) 166 168 (fontified t) 168 215 (fontified t) 215 216 (fontified t) 216 217 (fontified t) 217 229 (fontified t) 229 230 (fontified t) 230 231 (fontified t) 231 232 (fontified t) 232 240 (fontified t) 240 241 (fontified t) 241 242 (fontified t) 242 246 (fontified t) 246 247 (fontified t) 247 248 (fontified t) 248 252 (fontified t)) . -5623) (undo-tree-id843 . -252) (undo-tree-id844 . -252) 5875) nil (26137 64928 111463 463000) 0 nil])
([nil nil ((#("<canvas id='votesChart'></canvas>" 0 11 (fontified t) 11 19 (fontified t face font-lock-string-face) 19 23 (fontified t face font-lock-string-face) 23 33 (fontified t)) . -5942) (undo-tree-id841 . -33) (undo-tree-id842 . -33) 5975) nil (26137 64928 111448 37000) 0 nil])
([nil nil ((5942 . 5949)) nil (26137 64928 112080 441000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t ws-butler-chg chg)) . -5947) (undo-tree-id911 . -1) (#("/" 0 1 (fontified t ws-butler-chg chg)) . -5948) (undo-tree-id912 . -1) 5949) nil (26137 65152 935040 660000) 0 nil] [nil nil ((#("<" 0 1 (fontified t ws-butler-chg chg)) . -5947) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (#("/" 0 1 (fontified t ws-butler-chg chg)) . -5948) (undo-tree-id840 . -1) 5949) ((5948 . 5949) (nil ws-butler-chg delete 5948 . 5949) (5947 . 5948)) (26137 64928 111416 111000) 0 nil])
([nil nil ((5946 . 5947)) nil (26137 65152 935026 12000) 0 nil])
nil
([nil nil ((5946 . 5958)) nil (26137 65152 935020 456000) 0 nil])
([nil nil ((5948 . 5959) (#("           " 0 11 (fontified nil ws-butler-chg chg)) . 5947) (5947 . 5958) (5947 . 5948) (#("           " 0 11 (fontified t ws-butler-chg chg)) . 5947) (undo-tree-id910 . -11) 5958) nil (26137 65152 935012 604000) 0 nil])
([nil nil ((5947 . 5958)) nil (26137 65152 934999 67000) 0 nil])
([nil nil ((5958 . 5966)) nil (26137 65152 934993 160000) 0 nil])
([nil nil ((5966 . 5968)) nil (26137 65152 934987 790000) 0 nil])
([nil nil ((5968 . 5980)) nil (26137 65152 934982 197000) 0 nil])
([nil nil ((5980 . 5985)) nil (26137 65152 934976 697000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5984) (undo-tree-id909 . -1) 5985) nil (26137 65152 934969 975000) 0 nil])
([nil nil ((5984 . 5987)) nil (26137 65152 934959 419000) 0 nil])
([nil nil ((5986 . 5998)) nil (26137 65152 934953 716000) 0 nil])
([nil nil ((5988 . 5999) (#("               " 0 15 (fontified nil ws-butler-chg chg)) . 5987) (5987 . 6002) (5987 . 5988) (#("           " 0 11 (fontified t ws-butler-chg chg)) . 5987) (undo-tree-id908 . -11) 5998) nil (26137 65152 934945 660000) 0 nil])
([nil nil ((5987 . 6002)) nil (26137 65152 934932 86000) 0 nil])
([nil nil ((6002 . 6008)) nil (26137 65152 934926 327000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg)) . -6002) (undo-tree-id902 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -6003) (undo-tree-id903 . -1) (#("b" 0 1 (fontified t ws-butler-chg chg)) . -6004) (undo-tree-id904 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6005) (undo-tree-id905 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -6006) (undo-tree-id906 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -6007) (undo-tree-id907 . -1) 6008) nil (26137 65152 934916 531000) 0 nil])
([nil nil ((5623 . 5625)) nil (26137 65152 934885 679000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -5623) (undo-tree-id900 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -5624) (undo-tree-id901 . -1) 5625) nil (26137 65152 934878 235000) 0 nil])
([nil nil ((5623 . 5629)) nil (26137 65152 934863 290000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -5624) (undo-tree-id895 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -5625) (undo-tree-id896 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -5626) (undo-tree-id897 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5627) (undo-tree-id898 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5628) (undo-tree-id899 . -1) 5629) nil (26137 65152 934853 846000) 0 nil])
([nil nil ((5624 . 5644)) nil (26137 65152 934796 68000) 0 nil])
([nil nil ((5644 . 5649)) nil (26137 65152 934789 994000) 0 nil])
([nil nil ((5648 . 5653)) nil (26137 65152 934784 624000) 0 nil])
([nil nil ((5650 . 5654) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 5649) (5649 . 5657) (5649 . 5650) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 5649) (undo-tree-id894 . -4) 5653) nil (26137 65152 934776 791000) 0 nil])
([nil nil ((5649 . 5657)) nil (26137 65152 934763 420000) 0 nil])
([nil nil ((5657 . 5666)) nil (26137 65152 934757 680000) 0 nil])
([nil nil ((5665 . 5667)) nil (26137 65152 934752 69000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t ws-butler-chg chg)) . 5666) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) 5667) nil (26137 65152 934744 717000) 0 nil])
([nil nil ((5666 . 5675)) nil (26137 65152 934727 532000) 0 nil])
([nil nil ((5668 . 5676) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 5667) (5667 . 5679) (5667 . 5668) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 5667) (undo-tree-id890 . -8) 5675) nil (26137 65152 934719 698000) 0 nil])
([nil nil ((5667 . 5679)) nil (26137 65152 934706 439000) 0 nil])
([nil nil ((5679 . 5683)) nil (26137 65152 934700 402000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -5681) (undo-tree-id888 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5682) (undo-tree-id889 . -1) 5683) nil (26137 65152 934692 884000) 0 nil])
([nil nil ((5681 . 5682)) nil (26137 65152 934678 569000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -5681) (undo-tree-id887 . -1) 5682) nil (26137 65152 934671 773000) 0 nil])
([nil nil ((5681 . 5685)) nil (26137 65152 934661 328000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -5683) (undo-tree-id885 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg)) . -5684) (undo-tree-id886 . -1) 5685) nil (26137 65152 934654 199000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -5679) (undo-tree-id881 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5680) (undo-tree-id882 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5681) (undo-tree-id883 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -5682) (undo-tree-id884 . -1) 5683) nil (26137 65152 934636 625000) 0 nil])
([nil nil ((5679 . 5688)) nil (26137 65152 934614 236000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5687) (undo-tree-id880 . -1) 5688) nil (26137 65152 934607 791000) 0 nil])
([nil nil ((5687 . 5689)) nil (26137 65152 934597 236000) 0 nil])
([nil nil ((5688 . 5693)) nil (26137 65152 934591 680000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5692) (undo-tree-id879 . -1) 5693) nil (26137 65152 934584 847000) 0 nil])
([nil nil ((5692 . 5704)) nil (26137 65152 934574 218000) 0 nil])
([nil nil ((5704 . 5707)) nil (26137 65152 934568 681000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . -5704) (undo-tree-id876 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5705) (undo-tree-id877 . -1) (#(";" 0 1 (fontified t ws-butler-chg chg)) . -5706) (undo-tree-id878 . -1) 5707) nil (26137 65152 934560 588000) 0 nil])
([nil nil ((5704 . 5711)) nil (26137 65152 934542 514000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5710) (undo-tree-id875 . -1) 5711) nil (26137 65152 934535 810000) 0 nil])
([nil nil ((5710 . 5716)) nil (26137 65152 934525 162000) 0 nil])
([nil nil ((5717 . 5718)) nil (26137 65152 934519 366000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . -5717) (undo-tree-id874 . -1) 5718) nil (26137 65152 934512 718000) 0 nil])
([nil nil ((5717 . 5718)) nil (26137 65152 934501 996000) 0 nil])
([nil nil ((5718 . 5731)) nil (26137 65152 934496 570000) 0 nil])
([nil nil ((5731 . 5734)) nil (26137 65152 934491 33000) 0 nil])
([nil nil ((5734 . 5743)) nil (26137 65152 934485 570000) 0 nil])
([nil nil ((5742 . 5744)) nil (26137 65152 934479 959000) 0 nil])
([nil nil ((5743 . 5756)) nil (26137 65152 934474 459000) 0 nil])
([nil nil ((5745 . 5757) (#("                " 0 16 (fontified nil ws-butler-chg chg)) . 5744) (5744 . 5760) (5744 . 5745) (#("            " 0 12 (fontified t ws-butler-chg chg)) . 5744) (undo-tree-id873 . -12) 5756) nil (26137 65152 934466 237000) 0 nil])
([nil nil ((5744 . 5760)) nil (26137 65152 934452 311000) 0 nil])
([nil nil ((5760 . 5765)) nil (26137 65152 934446 570000) 0 nil])
([nil nil ((5765 . 5775)) nil (26137 65152 934440 866000) 0 nil])
([nil nil ((5775 . 5792)) nil (26137 65152 934435 292000) 0 nil])
([nil nil ((5792 . 5804)) nil (26137 65152 934429 681000) 0 nil])
([nil nil ((5804 . 5809)) nil (26137 65152 934424 70000) 0 nil])
([nil nil ((5808 . 5812)) nil (26137 65152 934418 200000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -5811) (undo-tree-id872 . -1) 5812) nil (26137 65152 934411 89000) 0 nil])
([nil nil ((5811 . 5814)) nil (26137 65152 934400 107000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -5811) (undo-tree-id869 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -5812) (undo-tree-id870 . -1) (#(">" 0 1 (fontified t ws-butler-chg chg)) . -5813) (undo-tree-id871 . -1) 5814) nil (26137 65152 934391 718000) 0 nil])
([nil nil ((5811 . 5813)) nil (26137 65152 934372 885000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5811) (undo-tree-id867 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg)) . -5812) (undo-tree-id868 . -1) 5813) nil (26137 65152 934365 237000) 0 nil])
([nil nil ((5811 . 5814)) nil (26137 65152 934350 719000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t ws-butler-chg chg)) . -5812) (undo-tree-id865 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5813) (undo-tree-id866 . -1) 5814) nil (26137 65152 934342 978000) 0 nil])
([nil nil ((5812 . 5815)) nil (26137 65152 934327 793000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5814) (undo-tree-id864 . -1) 5815) nil (26137 65152 934320 534000) 0 nil])
([nil nil ((5814 . 5820)) nil (26137 65152 934309 237000) 0 nil])
([nil nil ((5820 . 5822)) nil (26137 65152 934303 52000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t ws-butler-chg chg)) . -5820) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg)) . -5821) (undo-tree-id863 . -1) 5822) nil (26137 65152 934294 89000) 0 nil])
([nil nil ((5820 . 5823)) nil (26137 65152 934248 312000) 0 nil])
([nil nil ((#("               " 0 15 (ws-butler-chg chg fontified t)) . 6219) 5824) nil (26137 65152 934229 404000) 0 nil])
([nil nil ((#("options={}" 0 10 (fontified t)) . -6190) (undo-tree-id924 . -10) (undo-tree-id925 . -10) 6200 (t 26137 65153 45325 630000)) nil (26137 65167 369066 949000) 0 nil])
([nil nil ((6209 . 6224)) nil (26137 65167 369039 727000) 0 nil])
([nil nil ((6224 . 6234)) nil (26137 65167 369028 653000) 0 nil])
([nil nil ((#("e" 0 1 (ws-butler-chg chg fontified t)) . -6232) (undo-tree-id922 . -1) (#(")" 0 1 (ws-butler-chg chg fontified t)) . -6233) (undo-tree-id923 . -1) 6234) nil (26137 65167 369014 98000) 0 nil])
([nil nil ((6232 . 6235)) nil (26137 65167 368985 42000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg chg fontified t)) . -6233) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (#("_" 0 1 (ws-butler-chg chg fontified t)) . -6234) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) 6235) nil (26137 65167 368967 616000) 0 nil])
([nil nil ((6233 . 6235)) nil (26137 65167 368905 394000) 0 nil])
([nil nil ((#("           " 0 11 (fontified t)) . 6179) (undo-tree-id913 . -11) (undo-tree-id914 . -11) 6235) nil (26137 65167 368881 395000) 0 nil])
([nil nil ((5839 . 5840) (t 26137 65167 493256 242000)) nil (26137 65256 789620 107000) 0 nil])
([nil nil ((#("const chartData = () => {
        return ({
            labels: ['duel', 'dinner', 'disaster'],
            datasets: [{
                label: 'votes',
                data: votes.map(vote => vote[0])
            }]}
        )
    }
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 15 (fontified t face font-lock-variable-name-face) 15 26 (fontified t) 26 34 (fontified t) 34 40 (fontified t face font-lock-keyword-face) 40 44 (fontified t) 44 65 (fontified t) 65 71 (fontified t face font-lock-string-face) 71 73 (fontified t) 73 81 (fontified t face font-lock-string-face) 81 83 (fontified t) 83 93 (fontified t face font-lock-string-face) 93 94 (fontified t) 94 96 (fontified t) 96 121 (fontified t) 121 144 (fontified t) 144 151 (fontified t face font-lock-string-face) 151 153 (fontified t) 153 200 (fontified t) 200 201 (fontified t) 201 202 (fontified t) 202 214 (fontified t) 214 215 (fontified t) 215 216 (fontified t) 216 217 (fontified t) 217 218 (fontified t) 218 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 232 (fontified t) 232 233 (fontified t) 233 234 (fontified t)) . -5623) (undo-tree-id936 . -234) (undo-tree-id937 . -234) 5857 (t 26137 65256 900828 503000)) nil (26137 65298 568045 155000) 0 nil])
([nil nil ((5623 . 5639)) nil (26137 65298 568029 840000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5637) (undo-tree-id934 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5638) (undo-tree-id935 . -1) 5639) nil (26137 65298 568021 951000) 0 nil])
([nil nil ((5637 . 5639)) nil (26137 65298 568006 507000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5638) (undo-tree-id933 . -1) 5639) nil (26137 65298 567999 118000) 0 nil])
([nil nil ((5638 . 5649)) nil (26137 65298 567988 247000) 0 nil])
([nil nil ((5663 . 5664)) nil (26137 65298 567982 155000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -5663) (undo-tree-id932 . -1) 5664) nil (26137 65298 567974 951000) 0 nil])
([nil nil ((5648 . 5653)) nil (26137 65298 567963 488000) 0 nil])
([nil nil ((5650 . 5654) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 5649) (5649 . 5657) (5649 . 5650) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 5649) (undo-tree-id931 . -4) 5653) nil (26137 65298 567955 137000) 0 nil])
([nil nil ((5649 . 5657)) nil (26137 65298 567939 785000) 0 nil])
([nil nil ((5657 . 5666)) nil (26137 65298 567933 914000) 0 nil])
([nil nil ((5665 . 5667)) nil (26137 65300 49744 792000) 0 nil])
([nil nil ((5666 . 5675)) nil (26137 65321 302504 141000) 0 nil] [nil nil ((#("}" 0 1 (fontified t ws-butler-chg chg)) . 5666) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) 5667) ((5666 . 5667)) (26137 65298 859557 657000) 0 nil])
([nil nil ((5668 . 5676) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 5667) (5667 . 5679) (5667 . 5668) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 5667) (undo-tree-id946 . -8) 5675) nil (26137 65321 302495 493000) 0 nil])
([nil nil ((5666 . 5675)) ((#("
        " 0 1 (fontified t ws-butler-chg chg) 1 9 (fontified t ws-butler-chg chg)) . 5666) (undo-tree-id943 . -9) (undo-tree-id944 . -1)) (26137 65298 618010 806000) 0 nil])
([nil nil ((5669 . 5677) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 5668) (5668 . 5680) (5668 . 5669) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 5668) (undo-tree-id945 . -8) 5676) nil (26137 65321 302477 586000) 0 nil])
([nil nil ((5668 . 5676) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 5667) (5667 . 5679) (5667 . 5668) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 5667) (undo-tree-id927 . -8) 5675) ((5667 . 5675) (#("
" 0 1 (fontified nil)) . 5667) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 5667) (undo-tree-id941 . -12) (nil ws-butler-chg delete 5679 . 5680) (5667 . 5679) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 5668) (undo-tree-id942 . -8)) (26137 65298 568646 596000) 0 nil])
([nil nil ((5667 . 5679)) nil (26137 65321 302441 308000) 0 nil])
([nil nil ((5669 . 5677) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 5668) (5668 . 5680) (5668 . 5669) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 5668) (undo-tree-id926 . -8) 5676) ((nil ws-butler-chg delete 5676 . 5677) (5668 . 5676) (#("
" 0 1 (fontified nil)) . 5668) (#("            " 0 12 (fontified nil ws-butler-chg chg)) . 5668) (undo-tree-id938 . -12) (nil ws-butler-chg delete 5680 . 5681) (5668 . 5680) (#("        " 0 8 (fontified t ws-butler-chg chg)) . 5669)) (26137 65298 567866 563000) 0 nil])
([nil nil ((5679 . 5684)) nil (26137 65321 302434 901000) 0 nil])
nil
([nil nil ((5684 . 5689)) nil (26137 65321 302762 955000) 0 nil])
([nil nil ((5688 . 5693)) nil (26137 65387 444819 742000) 0 nil] [nil nil ((5688 . 5701)) ((#("
            " 0 13 (fontified t ws-butler-chg chg)) . 5688) (undo-tree-id947 . -13) (undo-tree-id948 . -1)) (26137 65321 302409 179000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5692) (undo-tree-id953 . -1) 5693) nil (26137 65387 444812 797000) 0 nil])
nil
([nil nil ((5692 . 5701)) nil (26137 65387 444802 538000) 0 nil])
([nil nil ((5701 . 5705)) nil (26137 65387 444796 872000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -5704) (undo-tree-id952 . -1) 5705) nil (26137 65387 444790 149000) 0 nil])
([nil nil ((5704 . 5716)) nil (26137 65387 444779 668000) 0 nil])
([nil nil ((5717 . 5718)) nil (26137 65387 444774 20000) 0 nil])
([nil nil ((5718 . 5731)) nil (26137 65387 444768 390000) 0 nil])
([nil nil ((5731 . 5741)) nil (26137 65387 444762 575000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg)) . -5740) (undo-tree-id951 . -1) 5741) nil (26137 65387 444755 427000) 0 nil])
([nil nil ((5740 . 5743)) nil (26137 65387 444744 372000) 0 nil])
([nil nil ((5742 . 5744)) nil (26137 65387 444738 650000) 0 nil])
([nil nil ((5743 . 5756)) nil (26137 65387 444732 742000) 0 nil])
([nil nil ((5745 . 5757) (#("                " 0 16 (fontified nil ws-butler-chg chg)) . 5744) (5744 . 5760) (5744 . 5745) (#("            " 0 12 (fontified t ws-butler-chg chg)) . 5744) (undo-tree-id950 . -12) 5756) nil (26137 65387 444724 465000) 0 nil])
([nil nil ((5744 . 5760)) nil (26137 65387 444710 20000) 0 nil])
([nil nil ((5760 . 5770)) nil (26137 65387 444704 298000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5769) (undo-tree-id949 . -1) 5770) nil (26137 65387 444694 816000) 0 nil])
([nil nil ((5769 . 5775)) nil (26137 65387 444661 391000) 0 nil])
([nil nil ((5775 . 5792)) nil (26137 65387 444654 743000) 0 nil])
([nil nil ((5792 . 5809)) nil (26137 65387 444648 298000) 0 nil])
([nil nil ((5808 . 5817)) nil (26137 65387 444641 520000) 0 nil])
([nil nil ((5817 . 5821)) nil (26137 65387 444623 780000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -5801) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (#("s" 0 1 (fontified t)) . -5802) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (#("." 0 1 (fontified t)) . -5803) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (#("m" 0 1 (fontified t)) . -5804) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (#("a" 0 1 (fontified t)) . -5805) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (#("p" 0 1 (fontified t)) . -5806) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (#("(" 0 1 (fontified t)) . -5807) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (#("v" 0 1 (fontified t)) . -5808) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (#("o" 0 1 (fontified t)) . -5809) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (#("t" 0 1 (fontified t)) . -5810) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (#("e" 0 1 (fontified t)) . -5811) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (#("=" 0 1 (fontified t)) . -5812) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (#(">" 0 1 (fontified t)) . -5813) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (#("v" 0 1 (fontified t)) . -5814) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (#("o" 0 1 (fontified t)) . -5815) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (#("t" 0 1 (fontified t)) . -5816) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (#("e" 0 1 (fontified t)) . -5817) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (#("[" 0 1 (fontified t)) . -5818) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (#("0" 0 1 (fontified t)) . -5819) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (#("]" 0 1 (fontified t)) . -5820) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (#(")" 0 1 (fontified t)) . -5821) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) 5822 (t 26137 65387 552207 845000)) nil (26137 65433 489307 311000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -5798) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (#("o" 0 1 (fontified t)) . -5799) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (#("t" 0 1 (fontified t)) . -5800) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) 5801) nil (26137 65433 488675 444000) 0 nil])
([nil nil ((5798 . 5800)) nil (26137 65433 488577 981000) 0 nil])
([nil nil ((#("setVotes(response);" 0 19 (fontified t)) . -5542) (undo-tree-id1108 . -19) (undo-tree-id1109 . -19) 5561 (t 26137 65433 595990 159000)) nil (26137 65458 916396 690000) 0 nil])
([nil nil ((#("const [votes, setVotes] = useAtom(null);" 0 5 (fontified t face font-lock-keyword-face) 5 7 (fontified t) 7 12 (fontified t face font-lock-variable-name-face) 12 14 (fontified t) 14 22 (fontified t face font-lock-variable-name-face) 22 23 (fontified t) 23 34 (fontified t) 34 38 (fontified t face font-lock-constant-face) 38 40 (fontified t)) . -5166) (undo-tree-id1106 . -40) (undo-tree-id1107 . -40) 5206) nil (26137 65458 916260 802000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . 5490) (undo-tree-id1096 . -8) (undo-tree-id1097 . -8) (undo-tree-id1098 . -8) (undo-tree-id1099 . -8) (#("    " 0 4 (fontified t)) . 5162) (undo-tree-id1100 . -4) (undo-tree-id1101 . -4) (undo-tree-id1102 . -4) (undo-tree-id1103 . -4) (undo-tree-id1104 . -4) (undo-tree-id1105 . -4) 5166) nil (26137 65458 916235 617000) 0 nil])
([nil nil ((5162 . 5166) 5166 (t 26137 65459 23870 146000)) nil (26138 30 524010 90000) 0 nil])
([nil nil ((183 . 189) (t 26137 65459 23870 146000)) nil (26138 30 524002 794000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t)) . -6091) (undo-tree-id1118 . -1) (#("a" 0 1 (fontified t)) . -6092) (undo-tree-id1119 . -1) (#("r" 0 1 (fontified t)) . -6093) (undo-tree-id1120 . -1) 6094) nil (26138 30 523993 535000) 0 nil])
([nil nil ((6091 . 6095)) nil (26138 30 523974 498000) 0 nil])
([nil nil ((#("chartData()" 0 11 (fontified t)) . -6130) (undo-tree-id1116 . -11) (undo-tree-id1117 . -11) 6141) nil (26138 30 523967 387000) 0 nil])
([nil nil ((5772 . 5777)) nil (26138 30 523953 146000) 0 nil])
([nil nil ((5777 . 5792)) nil (26138 30 523947 424000) 0 nil])
([nil nil ((5791 . 5796)) nil (26138 30 523941 554000) 0 nil])
([nil nil ((5793 . 5797) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 5792) (5792 . 5800) (5792 . 5793) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 5792) (undo-tree-id1115 . -4) 5796) nil (26138 30 523933 183000) 0 nil])
([nil nil ((5792 . 5800)) nil (26138 30 523919 535000) 0 nil])
([nil nil ((5800 . 5809)) nil (26138 30 523913 424000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t ws-butler-chg chg)) . -5808) (undo-tree-id1114 . -1) 5809) nil (26138 30 523906 609000) 0 nil])
([nil nil ((5808 . 5810)) nil (26138 30 523895 498000) 0 nil])
([nil nil ((5809 . 5819)) nil (26138 30 523889 683000) 0 nil])
([nil nil ((#("," 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5817) (undo-tree-id1112 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -5818) (undo-tree-id1113 . -1) 5819) nil (26138 30 523881 906000) 0 nil])
([nil nil ((5817 . 5832)) nil (26138 30 523865 795000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg)) . -5830) (undo-tree-id1110 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg)) . -5831) (undo-tree-id1111 . -1) 5832) nil (26138 30 523857 110000) 0 nil])
([nil nil ((5830 . 5834)) nil (26138 30 523817 776000) 0 nil])
([nil nil ((5834 . 5847)) nil (26138 32 949136 664000) 0 nil])
([nil nil ((5847 . 5854)) nil (26138 81 195980 336000) 0 nil] [nil nil ((5847 . 5848)) ((#("
" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . 5847) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1)) (26138 32 948822 702000) 0 nil] [nil nil ((5847 . 5848)) ((#("
" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . 5847) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1)) (26138 30 523793 851000) 0 nil])
([nil nil ((5854 . 5864)) nil (26138 81 195974 651000) 0 nil])
nil
nil
([nil nil ((#("[" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5863) (undo-tree-id1137 . -1) 5864) nil (26138 81 195967 465000) 0 nil])
([nil nil ((5863 . 5865)) nil (26138 81 195956 521000) 0 nil])
([nil nil ((#("]" 0 1 (ws-butler-chg delete fontified t)) . -5865) (undo-tree-id1136 . -1) 5866) nil (26138 81 195949 540000) 0 nil])
([nil nil ((5865 . 5866)) nil (26138 81 195938 243000) 0 nil])
([nil nil ((5866 . 5875)) nil (26138 81 195932 280000) 0 nil])
([nil nil ((5875 . 5887)) nil (26138 81 195926 595000) 0 nil])
([nil nil ((#("{" 0 1 (ws-butler-chg chg fontified t)) . -5885) (undo-tree-id1134 . -1) (#("}" 0 1 (ws-butler-chg chg fontified t)) . -5886) (undo-tree-id1135 . -1) 5887) nil (26138 81 195918 984000) 0 nil])
([nil nil ((5885 . 5887)) nil (26138 81 195904 799000) 0 nil])
([nil nil ((5886 . 5888)) nil (26138 81 195899 114000) 0 nil])
([nil nil ((5887 . 5896)) nil (26138 81 195893 410000) 0 nil])
([nil nil ((5889 . 5897) (#("            " 0 12 (ws-butler-chg chg fontified nil)) . 5888) (5888 . 5900) (5888 . 5889) (#("        " 0 8 (ws-butler-chg chg fontified t)) . 5888) (undo-tree-id1133 . -8) 5896) nil (26138 81 195885 58000) 0 nil])
([nil nil ((5888 . 5900)) nil (26138 81 195872 21000) 0 nil])
([nil nil ((5900 . 5915)) nil (26138 81 195866 170000) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t)) . -5914) (undo-tree-id1132 . -1) 5915) nil (26138 81 195858 762000) 0 nil])
([nil nil ((5914 . 5915)) nil (26138 81 195848 336000) 0 nil])
([nil nil ((5915 . 5928)) nil (26138 81 195842 614000) 0 nil])
([nil nil ((5928 . 5935)) nil (26138 81 195836 707000) 0 nil])
([nil nil ((#("[" 0 1 (ws-butler-chg chg fontified t)) . -5933) (undo-tree-id1130 . -1) (#("]" 0 1 (ws-butler-chg chg fontified t)) . -5934) (undo-tree-id1131 . -1) 5935) nil (26138 81 195828 892000) 0 nil])
([nil nil ((5933 . 5936)) nil (26138 81 195813 911000) 0 nil])
([nil nil ((5935 . 5940)) nil (26138 81 195807 929000) 0 nil])
([nil nil ((#("0" 0 1 (ws-butler-chg chg fontified t)) . -5939) (undo-tree-id1129 . -1) 5940) nil (26138 81 195800 763000) 0 nil])
([nil nil ((5939 . 5957)) nil (26138 81 195789 411000) 0 nil])
([nil nil ((5957 . 5961)) nil (26138 81 195783 244000) 0 nil])
([nil nil ((5962 . 5963)) nil (26138 81 195776 559000) 0 nil])
([nil nil ((#("               " 0 15 (fontified t)) . 6319) (undo-tree-id1127 . -15) (undo-tree-id1128 . -15) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 5168) 5963) nil (26138 81 195761 226000) 0 nil])
([nil nil ((6318 . 6322) (t 26138 81 327125 814000)) nil (26138 86 728851 102000) 0 nil])
([nil nil ((171 . 172) (t 26138 86 847099 936000)) nil (26138 159 740908 192000) 0 nil])
([nil nil ((172 . 181)) nil (26138 159 740901 526000) 0 nil])
([nil nil ((180 . 193)) nil (26138 159 740895 544000) 0 nil])
([nil nil ((194 . 202)) nil (26138 159 740889 822000) 0 nil])
([nil nil ((202 . 211)) nil (26138 159 740884 229000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -209) (undo-tree-id1141 . -1) (#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -210) (undo-tree-id1142 . -1) 211) nil (26138 159 740876 526000) 0 nil])
([nil nil ((209 . 210)) nil (26138 159 740861 63000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -209) (undo-tree-id1140 . -1) 210) nil (26138 159 740853 730000) 0 nil])
([nil nil ((209 . 211)) nil (26138 159 740842 248000) 0 nil])
([nil nil ((#("import {CategoryScale} from 'chart.js';" 0 6 (fontified t ws-butler-chg chg face font-lock-keyword-face) 6 28 (fontified t ws-butler-chg chg) 28 38 (fontified t ws-butler-chg chg face font-lock-string-face) 38 39 (fontified t ws-butler-chg chg)) . -172) (undo-tree-id1138 . -39) (undo-tree-id1139 . -39) 211) nil (26138 159 740833 526000) 0 nil])
([nil nil ((172 . 193)) nil (26138 159 740795 63000) 0 nil])
([nil nil ((193 . 206)) nil (26138 159 740778 526000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -6354) (undo-tree-id1151 . -1) (#("t" 0 1 (fontified t)) . -6355) (undo-tree-id1152 . -1) (#("a" 0 1 (fontified t)) . -6356) (undo-tree-id1153 . -1) 6357 (t 26138 159 862758 67000)) nil (26138 188 310909 733000) 0 nil])
([nil nil ((6354 . 6355)) nil (26138 188 310847 752000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -6353) (undo-tree-id1149 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -6354) (undo-tree-id1150 . -1) 6355) nil (26138 188 310839 603000) 0 nil])
([nil nil ((6353 . 6364)) nil (26138 188 310824 122000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -6362) (undo-tree-id1147 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -6363) (undo-tree-id1148 . -1) 6364) nil (26138 188 310815 974000) 0 nil])
([nil nil ((6362 . 6364)) nil (26138 188 310800 622000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t)) . -6330) (undo-tree-id1143 . -1) (#("i" 0 1 (fontified t)) . -6331) (undo-tree-id1144 . -1) (#("n" 0 1 (fontified t)) . -6332) (undo-tree-id1145 . -1) (#("e" 0 1 (fontified t)) . -6333) (undo-tree-id1146 . -1) 6334) nil (26138 188 310789 493000) 0 nil])
([nil nil ((6330 . 6333)) nil (26138 188 310729 678000) 0 nil])
([nil nil ((5203 . 5207) (t 26138 188 426624 525000)) nil (26138 269 717148 55000) 0 nil])
([nil nil ((5207 . 5215)) nil (26138 269 717141 389000) 0 nil])
([nil nil ((5214 . 5224)) nil (26138 269 717135 629000) 0 nil])
([nil nil ((5224 . 5229)) nil (26138 269 717129 426000) 0 nil])
([nil nil ((5230 . 5243)) nil (26138 269 717122 185000) 0 nil])
([nil nil ((5243 . 5245)) nil (26138 269 717105 463000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -5241) (undo-tree-id1154 . -1) 5242 (t 26138 269 834244 472000)) nil (26138 314 729211 24000) 0 nil])
([nil nil ((#("]" 0 1 (fontified t ws-butler-chg delete)) . 5241)) nil (26138 314 729175 5000) 0 nil])
([nil nil ((5241 . 5245)) nil (26138 314 729158 302000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -5242) (undo-tree-id1179 . -1) (#("l" 0 1 (fontified t)) . -5243) (undo-tree-id1180 . -1) (#("l" 0 1 (fontified t face font-lock-constant-face)) . -5244) (undo-tree-id1181 . -1) 5245 (t 26138 314 846034 646000)) nil (26138 442 708407 479000) 0 nil])
([nil nil ((#("const [votes, setVotes] = useAtom(n);" 0 5 (fontified t face font-lock-keyword-face) 5 7 (fontified t) 7 12 (fontified t face font-lock-variable-name-face) 12 14 (fontified t) 14 22 (fontified t face font-lock-variable-name-face) 22 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t ws-butler-chg delete) 36 37 (fontified t)) . -5207) (undo-tree-id1177 . -37) (undo-tree-id1178 . -37) 5244) nil (26138 442 708387 145000) 0 nil])
([nil nil ((5207 . 5208)) nil (26138 442 708373 201000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5202) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (#(" " 0 1 (fontified t)) . -5203) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (#(" " 0 1 (fontified t)) . -5204) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (#(" " 0 1 (fontified t)) . -5205) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (#(" " 0 1 (fontified t)) . -5206) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (#("w" 0 1 (fontified t ws-butler-chg chg)) . -5207) (undo-tree-id1176 . -1) 5208) nil (26138 442 708361 275000) 0 nil])
([nil nil ((5202 . 5207)) nil (26138 442 708297 479000) 0 nil])
([nil nil ((5207 . 5215)) nil (26138 442 708291 701000) 0 nil])
([nil nil ((5214 . 5216)) nil (26138 442 708285 535000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5214) (undo-tree-id1158 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -5215) (undo-tree-id1159 . -1) 5216) nil (26138 442 708276 905000) 0 nil])
([nil nil ((5214 . 5229)) nil (26138 442 708262 109000) 0 nil])
([nil nil ((5230 . 5231)) nil (26138 442 708256 35000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -5230) (undo-tree-id1157 . -1) 5231) nil (26138 442 708248 424000) 0 nil])
([nil nil ((5230 . 5242)) nil (26138 442 708237 146000) 0 nil])
([nil nil ((5241 . 5251)) nil (26138 442 708230 942000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t ws-butler-chg chg)) . -5250) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) 5251) nil (26138 442 708221 961000) 0 nil])
([nil nil ((5250 . 5251)) nil (26138 442 708182 720000) 0 nil])
([nil nil ((5252 . 5253)) nil (26138 453 561082 746000) 0 nil])
([nil nil ((5581 . 5589) (t 26138 442 833464 845000)) nil (26138 475 380619 19000) 0 nil] [nil nil ((5253 . 5255) (t 26138 442 833464 845000)) ((#("

" 0 1 (fontified t ws-butler-chg chg) 1 2 (fontified t ws-butler-chg chg)) . 5253) (undo-tree-id1182 . -2) (undo-tree-id1183 . -2) (undo-tree-id1184 . -2)) (26138 453 560133 583000) 0 nil])
([nil nil ((5615 . 5624)) nil (26138 475 380612 482000) 0 nil])
nil
([nil nil ((5624 . 5630)) nil (26138 475 380606 778000) 0 nil])
([nil nil ((5630 . 5634)) nil (26138 475 380601 241000) 0 nil])
([nil nil ((5633 . 5637)) nil (26138 475 380595 667000) 0 nil])
([nil nil ((5638 . 5639)) nil (26138 475 380590 37000) 0 nil])
([nil nil ((5589 . 5591)) nil (26138 475 380584 204000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -5589) (undo-tree-id1187 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -5590) (undo-tree-id1188 . -1) 5591) nil (26138 475 380576 445000) 0 nil])
([nil nil ((5589 . 5599)) nil (26138 475 380561 667000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg)) . -5598) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) 5599) nil (26138 475 380552 926000) 0 nil])
([nil nil ((5598 . 5608)) nil (26138 475 380504 223000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -5869) (undo-tree-id1189 . -1) (#("]" 0 1 (fontified t)) . -5870) (undo-tree-id1190 . -1) 5871 (t 26138 475 497323 197000)) nil (26138 492 216585 73000) 0 nil])
([nil nil ((5869 . 5880)) nil (26138 492 216546 295000) 0 nil])
([nil nil ((5879 . 5892)) nil (26138 492 216526 610000) 0 nil])
([nil nil ((#("const data = {
        labels: ['January', 'February', 'March', 'April', 'June', 'July'],
        datasets: [{
            label: 'Sales',
            data: [65, 59, 80, 81, 56, 55, 40],
        }]
    }" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 10 (fontified t face font-lock-variable-name-face) 10 15 (fontified t) 15 32 (fontified t) 32 41 (fontified t face font-lock-string-face) 41 43 (fontified t) 43 53 (fontified t face font-lock-string-face) 53 55 (fontified t) 55 62 (fontified t face font-lock-string-face) 62 64 (fontified t) 64 71 (fontified t face font-lock-string-face) 71 73 (fontified t) 73 79 (fontified t face font-lock-string-face) 79 81 (fontified t) 81 87 (fontified t face font-lock-string-face) 87 90 (fontified t) 90 111 (fontified t) 111 130 (fontified t) 130 137 (fontified t face font-lock-string-face) 137 139 (fontified t) 139 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 195 (fontified t) 195 196 (fontified t) 196 197 (fontified t) 197 198 (fontified t) 198 200 (fontified t) 200 202 (fontified t) 202 203 (fontified t)) . -5931) (undo-tree-id1208 . -203) (undo-tree-id1209 . -203) 6134 (t 26138 492 337249 992000)) nil (26138 545 692178 31000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5926) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (#(" " 0 1 (fontified t)) . -5927) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (#(" " 0 1 (fontified t)) . -5928) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (#(" " 0 1 (fontified t)) . -5929) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (#(" " 0 1 (fontified t)) . -5930) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) 5931) nil (26138 545 692158 827000) 0 nil])
([nil nil ((#("const [votes, setVotes] = useAtom(atom(null));" 0 5 (fontified t face font-lock-keyword-face) 5 7 (fontified t) 7 12 (fontified t face font-lock-variable-name-face) 12 14 (fontified t) 14 22 (fontified t face font-lock-variable-name-face) 22 23 (fontified t) 23 39 (fontified t) 39 43 (fontified t face font-lock-constant-face) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t)) . -5207) (undo-tree-id1196 . -46) (undo-tree-id1197 . -46) 5253) nil (26138 545 692116 364000) 0 nil])
([nil nil ((#("setVotes(response);" 0 19 (fontified t)) . -5543) (undo-tree-id1194 . -19) (undo-tree-id1195 . -19) 5562) nil (26138 545 692100 920000) 0 nil])
([nil nil ((5543 . 5553)) nil (26138 545 692085 568000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg js--pend (nil 1 function 5218 ("getVotes") nil))) . -5551) (undo-tree-id1192 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -5552) (undo-tree-id1193 . -1) 5553) nil (26138 545 692077 494000) 0 nil])
([nil nil ((5551 . 5553)) nil (26138 545 692021 679000) 0 nil])
([nil nil ((5552 . 5554)) nil (26138 545 692015 957000) 0 nil])
([nil nil ((5553 . 5563)) nil (26138 545 692009 994000) 0 nil])
([nil nil ((5563 . 5578)) nil (26138 545 692003 494000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 5203) (undo-tree-id1191 . -4) 5578) nil (26138 545 691988 68000) 0 nil])
([nil nil ((5837 . 5844) (t 26138 545 805016 815000)) nil (26138 557 407644 17000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t ws-butler-chg chg)) . -5842) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (#("." 0 1 (fontified t ws-butler-chg chg)) . -5843) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) 5844) nil (26138 557 407632 813000) 0 nil])
([nil nil ((5842 . 5843)) nil (26138 557 407569 702000) 0 nil])
([nil nil ((#("setVotes(null);" 0 9 (fontified t) 9 13 (fontified t face font-lock-constant-face) 13 15 (fontified t)) . -5611) (undo-tree-id1224 . -15) (undo-tree-id1225 . -15) 5626 (t 26138 557 520965 576000)) nil (26138 568 335168 238000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5602) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) 5603) nil (26138 568 335151 182000) 0 nil])
([nil nil ((#("        " 0 1 (fontified t ws-butler-chg delete) 1 8 (fontified t)) . -5602) (undo-tree-id1216 . -8) (undo-tree-id1217 . -8) (undo-tree-id1218 . -8) (undo-tree-id1219 . -8) (undo-tree-id1220 . -8) (undo-tree-id1221 . -8) 5610) nil (26138 568 335127 219000) 0 nil])
([nil nil ((5657 . 5662) (t 26138 568 448917 740000)) nil (26138 599 75054 991000) 0 nil])
([nil nil ((6232 . 6242)) nil (26138 599 75047 991000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -6238) (undo-tree-id1226 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -6239) (undo-tree-id1227 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -6240) (undo-tree-id1228 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -6241) (undo-tree-id1229 . -1) 6242) nil (26138 599 75037 472000) 0 nil])
([nil nil ((6238 . 6243)) nil (26138 606 441966 216000) 0 nil])
([nil nil ((#("state.votes.map(vote=>vote[0])" 0 6 (fontified t) 6 7 (fontified t) 7 30 (fontified t)) . -5818) (undo-tree-id1232 . -30) (undo-tree-id1233 . -30) 5848 (t 26138 599 192782 937000)) nil (26138 679 175143 391000) 0 nil] [nil nil ((6243 . 6244) (t 26138 599 192782 937000)) ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 6243) (undo-tree-id1230 . -1)) (26138 606 440634 167000) 0 nil])
([nil nil ((5818 . 5820)) nil (26138 679 175127 502000) 0 nil])
nil
([nil nil ((#("v" 0 1 (fontified t)) . -5657) (undo-tree-id1231 . -1) 5658) nil (26138 679 175119 58000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg delete)) . 5657) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 5657) (#("t" 0 1 (fontified t ws-butler-chg delete)) . 5657) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 5657)) nil (26138 679 175083 206000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg delete)) . 6199) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 6199) (#("t" 0 1 (fontified t ws-butler-chg delete)) . 6199) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 6199) (#("v" 0 1 (fontified t ws-butler-chg delete)) . 6199) (#("." 0 1 (fontified t ws-butler-chg delete)) . 6199) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 6199) (#("t" 0 1 (fontified t ws-butler-chg delete)) . 6199) (#("a" 0 1 (fontified t ws-butler-chg delete)) . 6199) (#("t" 0 1 (fontified t ws-butler-chg delete)) . 6199) (#("s" 0 1 (fontified t)) . 6199)) nil (26138 679 175058 928000) 0 nil])
([nil nil ((6154 . 6166) (t 26138 679 292430 299000)) nil (26138 704 995797 463000) 0 nil])
([nil nil ((6166 . 6181)) nil (26138 704 995789 815000) 0 nil])
([nil nil ((6242 . 6254) (#("           " 0 4 (fontified nil) 4 11 (fontified nil)) . 6242) (6255 . 6256)) nil (26138 704 995770 686000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -5813) (undo-tree-id1238 . -1) (#("]" 0 1 (fontified t)) . -5814) (undo-tree-id1239 . -1) 5815 (t 26138 705 112316 226000)) nil (26138 727 373713 267000) 0 nil])
([nil nil ((5813 . 5823)) nil (26138 727 373697 897000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -5819) (undo-tree-id1234 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -5820) (undo-tree-id1235 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5821) (undo-tree-id1236 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5822) (undo-tree-id1237 . -1) 5823) nil (26138 727 373686 952000) 0 nil])
([nil nil ((5819 . 5830)) nil (26138 727 373599 823000) 0 nil])
([nil nil ((5829 . 5842)) nil (26138 727 373582 379000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -5821) (undo-tree-id1248 . -1) (#("e" 0 1 (fontified t)) . -5822) (undo-tree-id1249 . -1) (#("s" 0 1 (fontified t)) . -5823) (undo-tree-id1250 . -1) (#("." 0 1 (fontified t)) . -5824) (undo-tree-id1251 . -1) (#("m" 0 1 (fontified t)) . -5825) (undo-tree-id1252 . -1) (#("a" 0 1 (fontified t)) . -5826) (undo-tree-id1253 . -1) (#("p" 0 1 (fontified t)) . -5827) (undo-tree-id1254 . -1) (#("(" 0 1 (fontified t)) . -5828) (undo-tree-id1255 . -1) (#("v" 0 1 (fontified t)) . -5829) (undo-tree-id1256 . -1) (#("o" 0 1 (fontified t)) . -5830) (undo-tree-id1257 . -1) (#("t" 0 1 (fontified t)) . -5831) (undo-tree-id1258 . -1) (#("e" 0 1 (fontified t)) . -5832) (undo-tree-id1259 . -1) (#("=" 0 1 (fontified t)) . -5833) (undo-tree-id1260 . -1) (#(">" 0 1 (fontified t)) . -5834) (undo-tree-id1261 . -1) (#("v" 0 1 (fontified t)) . -5835) (undo-tree-id1262 . -1) (#("o" 0 1 (fontified t)) . -5836) (undo-tree-id1263 . -1) (#("t" 0 1 (fontified t)) . -5837) (undo-tree-id1264 . -1) (#("e" 0 1 (fontified t)) . -5838) (undo-tree-id1265 . -1) (#("[" 0 1 (fontified t)) . -5839) (undo-tree-id1266 . -1) (#("0" 0 1 (fontified t)) . -5840) (undo-tree-id1267 . -1) (#("]" 0 1 (fontified t)) . -5841) (undo-tree-id1268 . -1) 5842 (t 26138 727 488217 223000)) nil (26138 747 970720 688000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -5813) (undo-tree-id1240 . -1) (#("t" 0 1 (fontified t)) . -5814) (undo-tree-id1241 . -1) (#("a" 0 1 (fontified t)) . -5815) (undo-tree-id1242 . -1) (#("t" 0 1 (fontified t)) . -5816) (undo-tree-id1243 . -1) (#("e" 0 1 (fontified t)) . -5817) (undo-tree-id1244 . -1) (#("." 0 1 (fontified t)) . -5818) (undo-tree-id1245 . -1) (#("v" 0 1 (fontified t)) . -5819) (undo-tree-id1246 . -1) (#("o" 0 1 (fontified t)) . -5820) (undo-tree-id1247 . -1) 5821) nil (26138 747 970625 948000) 0 nil])
([nil nil ((5813 . 5815)) nil (26138 747 970565 652000) 0 nil])
([nil nil ((5663 . 5672)) nil (26138 747 970559 948000) 0 nil])
([nil nil ((5672 . 5685)) nil (26138 747 970554 170000) 0 nil])
([nil nil ((5684 . 5698)) nil (26138 747 970547 448000) 0 nil])
([nil nil ((5698 . 5712)) nil (26138 747 970531 374000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -5865) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) 5866 (t 26138 748 88125 964000)) nil (26138 758 670886 337000) 0 nil])
([nil nil ((5712 . 5717) (t 26138 758 792078 503000)) nil (26138 776 290591 392000) 0 nil])
([nil nil ((5884 . 5907) (t 26138 776 424000 263000)) nil (26138 845 977858 586000) 0 nil])
([nil nil ((5884 . 5885)) nil (26138 845 977852 49000) 0 nil])
([nil nil ((5910 . 5920) (5886 . 5909) (#("             " 0 13 (ws-butler-chg chg fontified nil)) . 5886) (undo-tree-id1300 . -13) (5899 . 5900)) nil (26138 845 977844 642000) 0 nil])
([nil nil ((#("u" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -5919) (undo-tree-id1299 . -1) 5920) nil (26138 845 977831 661000) 0 nil])
([nil nil ((5919 . 5925)) nil (26138 845 977821 179000) 0 nil])
([nil nil ((5925 . 5926)) nil (26138 845 977815 383000) 0 nil])
([nil nil ((#("m" 0 1 (ws-butler-chg chg fontified t)) . -5925) (undo-tree-id1298 . -1) 5926) nil (26138 845 977808 550000) 0 nil])
([nil nil ((5925 . 5926)) nil (26138 845 977797 920000) 0 nil])
([nil nil ((5927 . 5950) (#("         " 0 1 (ws-butler-chg delete fontified nil) 1 9 (ws-butler-chg chg fontified nil)) . 5927) (5926 . 5927)) nil (26138 845 977791 290000) 0 nil])
([nil nil ((5956 . 5972) (5927 . 5951) (#("                       " 0 23 (ws-butler-chg chg fontified nil)) . 5927) (5950 . 5955)) nil (26138 845 977783 272000) 0 nil])
([nil nil ((5972 . 5978)) nil (26138 845 977775 439000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t)) . -5868) (undo-tree-id1296 . -1) (#("]" 0 1 (fontified t)) . -5869) (undo-tree-id1297 . -1) 5870) nil (26138 845 977767 902000) 0 nil])
([nil nil ((5868 . 5871)) nil (26138 845 977753 68000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -5870) (undo-tree-id1295 . -1) 5871) nil (26138 845 977746 161000) 0 nil])
([nil nil ((5870 . 5888)) nil (26138 845 977735 346000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg chg)) . -5887) (undo-tree-id1294 . -1) 5888) nil (26138 845 977728 143000) 0 nil])
([nil nil ((5887 . 5888)) nil (26138 845 977717 180000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t ws-butler-chg chg)) . -5880) (undo-tree-id1286 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -5881) (undo-tree-id1287 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -5882) (undo-tree-id1288 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -5883) (undo-tree-id1289 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5884) (undo-tree-id1290 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -5885) (undo-tree-id1291 . -1) (#("[" 0 1 (fontified t ws-butler-chg chg)) . -5886) (undo-tree-id1292 . -1) (#("-" 0 1 (fontified t ws-butler-chg chg)) . -5887) (undo-tree-id1293 . -1) 5888) nil (26138 845 977705 365000) 0 nil])
([nil nil ((5880 . 5883)) nil (26138 845 977667 235000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -5881) (undo-tree-id1284 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5882) (undo-tree-id1285 . -1) 5883) nil (26138 845 977659 439000) 0 nil])
([nil nil ((5881 . 5884)) nil (26138 845 977644 161000) 0 nil])
([nil nil ((5884 . 5887)) nil (26138 845 977637 976000) 0 nil])
([nil nil ((5995 . 5996)) nil (26138 845 977631 810000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-string-face)) . -5838) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -5839) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -5840) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -5841) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -5842) (undo-tree-id1283 . -1) 5843) nil (26138 845 977618 328000) 0 nil])
([nil nil ((5838 . 5842)) nil (26138 845 977411 922000) 0 nil])
([nil nil ((5867 . 5868) (t 26138 850 307671 648000)) nil (26138 872 532876 610000) 0 nil])
([nil nil ((5887 . 5888)) nil (26138 872 532869 869000) 0 nil])
([nil nil ((5975 . 5976)) nil (26138 872 532863 721000) 0 nil])
([nil nil ((5997 . 5998)) nil (26138 872 532856 813000) 0 nil])
([nil nil ((5998 . 6022)) nil (26138 889 447329 681000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5765) (undo-tree-id1341 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -5766) (undo-tree-id1342 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -5767) (undo-tree-id1343 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -5768) (undo-tree-id1344 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -5769) (undo-tree-id1345 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -5770) (undo-tree-id1346 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -5771) (undo-tree-id1347 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -5772) (undo-tree-id1348 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -5773) (undo-tree-id1349 . -1) (#("," 0 1 (fontified t)) . -5774) (undo-tree-id1350 . -1) (#(" " 0 1 (fontified t)) . -5775) (undo-tree-id1351 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -5776) (undo-tree-id1352 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -5777) (undo-tree-id1353 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -5778) (undo-tree-id1354 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -5779) (undo-tree-id1355 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -5780) (undo-tree-id1356 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -5781) (undo-tree-id1357 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -5782) (undo-tree-id1358 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -5783) (undo-tree-id1359 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -5784) (undo-tree-id1360 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -5785) (undo-tree-id1361 . -1) 5786) nil (26138 897 76148 145000) 0 nil] [nil nil ((#("labels: ['duel', 'dinner', 'disaster']," 0 4 (fontified t) 4 9 (fontified t) 9 15 (fontified t face font-lock-string-face) 15 17 (fontified t) 17 25 (fontified t face font-lock-string-face) 25 27 (fontified t) 27 31 (fontified t face font-lock-string-face) 31 37 (fontified t face font-lock-string-face) 37 38 (fontified t) 38 39 (fontified t)) . -5749) (undo-tree-id1307 . -39) (undo-tree-id1308 . -39) 5788 (t 26138 872 659572 7000)) ((5749 . 5788)) (26138 888 989286 892000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . -5759) (undo-tree-id1335 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -5760) (undo-tree-id1336 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -5761) (undo-tree-id1337 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -5762) (undo-tree-id1338 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -5763) (undo-tree-id1339 . -1) (#("," 0 1 (fontified t)) . -5764) (undo-tree-id1340 . -1) 5765) nil (26138 897 76056 182000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . 5737) (undo-tree-id1301 . -12) (undo-tree-id1302 . -12) (undo-tree-id1303 . -12) (undo-tree-id1305 . -12) 5749) ((5737 . 5749) (t 26138 883 939521 686000)) (26138 888 557463 319000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -5758) (undo-tree-id1334 . -1) 5759) nil (26138 897 76024 738000) 0 nil])
([nil nil ((5737 . 5749) 5749 (t 26138 883 939521 686000)) ((#("            " 0 12 (fontified t ws-butler-chg chg)) . 5737) (undo-tree-id1309 . -12) (t 26138 883 939521 686000)) (26138 888 556244 65000) 0 nil])
([nil nil ((5758 . 5763)) nil (26138 897 264681 62000) 0 nil])
nil
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg)) . -5758) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -5759) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -5760) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -5761) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -5762) (undo-tree-id1374 . -1) 5763) nil (26138 902 396448 537000) 0 nil] [nil nil ((#("async function getVotes(){
        const request  = await fetch(req_url + \"/votes\",
                                     {method: \"GET\",
                                      mode: \"cors\",
                                      headers: {'Content-Type': 'application/json'}});
        const response = await request.json();
        setState({...state, votes: response})
    }
    useEffect(()=>{
        getVotes();
    }, [])
    const chartData = () => {
        console.log('charting data', state.votes.duel)
        return ({
            labels: [votes" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 14 (fontified t face font-lock-keyword-face) 14 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t js--pstate ((nil 1 function 5214 ("getVotes") nil) (nil 0 function 5004 ("StartOverPage") nil) (((nil 0 function 4788 ("styler") nil)) -536870912 toplevel nil nil nil))) 26 27 (fontified t) 27 35 (fontified t) 35 40 (fontified t face font-lock-keyword-face) 40 41 (fontified t) 41 42 (fontified t face font-lock-variable-name-face) 42 48 (fontified t face font-lock-variable-name-face) 48 52 (fontified t) 52 57 (fontified t face font-lock-keyword-face) 57 61 (fontified t) 61 74 (fontified t) 74 75 (fontified t face font-lock-string-face) 75 76 (fontified t face font-lock-string-face) 76 82 (fontified t face font-lock-string-face) 82 84 (fontified t) 84 91 (fontified t) 91 130 (fontified t) 130 134 (fontified t face font-lock-string-face) 134 135 (fontified t face font-lock-string-face) 135 137 (fontified t) 137 181 (fontified t) 181 187 (fontified t face font-lock-string-face) 187 189 (fontified t) 189 237 (fontified t) 237 251 (fontified t face font-lock-string-face) 251 253 (fontified t) 253 266 (fontified t face font-lock-string-face) 266 271 (fontified t face font-lock-string-face) 271 272 (fontified t) 272 273 (fontified t) 273 275 (fontified t) 275 276 (fontified t) 276 284 (fontified t) 284 289 (fontified t face font-lock-keyword-face) 289 290 (fontified t) 290 298 (fontified t face font-lock-variable-name-face) 298 301 (fontified t) 301 306 (fontified t face font-lock-keyword-face) 306 322 (fontified t) 322 323 (fontified t) 323 331 (fontified t) 331 368 (fontified t) 368 369 (fontified t) 369 373 (fontified t) 373 374 (rear-nonsticky t fontified t js--pend (nil 1 function 5214 ("getVotes") nil)) 374 375 (fontified t) 375 379 (fontified t) 379 394 (fontified t) 394 395 (fontified t) 395 410 (fontified t) 410 414 (fontified t) 414 415 (fontified t) 415 419 (fontified t) 419 420 (fontified t) 420 424 (fontified t) 424 425 (rear-nonsticky t fontified t) 425 426 (fontified t) 426 430 (fontified t) 430 435 (fontified t face font-lock-keyword-face) 435 436 (fontified t) 436 445 (fontified t face font-lock-variable-name-face) 445 449 (fontified t) 449 450 (fontified t) 450 455 (fontified t) 455 456 (fontified t) 456 476 (fontified t) 476 491 (fontified t face font-lock-string-face) 491 504 (fontified t) 504 509 (fontified t) 509 510 (fontified t) 510 511 (fontified t) 511 519 (fontified t) 519 525 (fontified t face font-lock-keyword-face) 525 526 (fontified t) 526 529 (fontified t) 529 541 (fontified t) 541 545 (fontified t) 545 550 (fontified t) 550 555 (fontified t ws-butler-chg chg)) . -5208) (undo-tree-id1323 . -555) (undo-tree-id1324 . -541) (undo-tree-id1325 . -272) (undo-tree-id1326 . -374) (undo-tree-id1327 . -379) (undo-tree-id1328 . -430) (undo-tree-id1329 . -323) (undo-tree-id1330 . -331) (undo-tree-id1331 . -394) (undo-tree-id1332 . -541) (undo-tree-id1333 . -529) 5763) ((5208 . 5763)) (26138 897 76514 125000) 0 nil])
([nil nil ((5758 . 5765)) nil (26138 902 396326 241000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5207) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) 5208) ((nil ws-butler-chg delete 5208 . 5209) (5207 . 5208)) (26138 897 75951 498000) 0 nil])
([nil nil ((6002 . 6003) (t 26138 902 519438 747000)) nil (26138 935 493551 288000) 0 nil])
nil
([nil nil ((6003 . 6026)) nil (26138 935 493544 955000) 0 nil])
([nil nil ((6028 . 6038) (6026 . 6027) (6026 . 6027)) nil (26138 935 493538 973000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -6034) (undo-tree-id1376 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -6035) (undo-tree-id1377 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -6036) (undo-tree-id1378 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -6037) (undo-tree-id1379 . -1) 6038) nil (26138 935 493528 529000) 0 nil])
([nil nil ((6034 . 6046)) nil (26138 935 493505 510000) 0 nil])
([nil nil ((6046 . 6070)) nil (26138 935 493499 825000) 0 nil])
([nil nil ((6076 . 6078) (6047 . 6071) (#("                       " 0 23 (fontified nil ws-butler-chg chg)) . 6047) (6070 . 6075)) nil (26138 935 493492 547000) 0 nil])
([nil nil ((6078 . 6079)) nil (26138 935 493484 714000) 0 nil])
([nil nil ((6078 . 6099)) nil (26138 935 493479 48000) 0 nil])
([nil nil ((6099 . 6102)) nil (26138 935 493473 233000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t ws-butler-chg chg)) . -6101) (undo-tree-id1375 . -1) 6102) nil (26138 935 493463 714000) 0 nil])
([nil nil ((6102 . 6103)) nil (26138 935 493418 363000) 0 nil])
([nil nil ((5867 . 5884) (t 26138 935 615290 855000)) nil (26138 996 955001 115000) 0 nil])
([nil nil ((5884 . 5889)) nil (26138 996 954994 319000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg)) . -5887) (undo-tree-id1384 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -5888) (undo-tree-id1385 . -1) 5889) nil (26138 996 954986 856000) 0 nil])
([nil nil ((5887 . 5897)) nil (26138 996 954971 579000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -5896) (undo-tree-id1383 . -1) 5897) nil (26138 996 954964 634000) 0 nil])
([nil nil ((6006 . 6007)) nil (26138 996 954954 227000) 0 nil])
([nil nil ((6007 . 6032)) nil (26138 996 954948 393000) 0 nil])
([nil nil ((6032 . 6045)) nil (26138 996 954942 505000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -6044) (undo-tree-id1382 . -1) 6045) nil (26138 996 954935 542000) 0 nil])
([nil nil ((6044 . 6045)) nil (26138 996 954924 449000) 0 nil])
([nil nil ((6170 . 6171)) nil (26138 996 954918 523000) 0 nil])
([nil nil ((6171 . 6195)) nil (26138 996 954912 820000) 0 nil])
([nil nil ((6172 . 6196) (#("                       " 0 23 (fontified nil ws-butler-chg chg)) . 6172) (6195 . 6201)) nil (26138 996 954905 783000) 0 nil])
([nil nil ((6202 . 6204)) nil (26138 996 954898 301000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t ws-butler-chg chg)) . -6203) (undo-tree-id1381 . -1) 6204) nil (26138 996 954891 97000) 0 nil])
([nil nil ((6203 . 6204)) nil (26138 996 954878 838000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -6203) (undo-tree-id1380 . -1) 6204) nil (26138 996 954869 783000) 0 nil])
([nil nil ((6203 . 6211)) nil (26138 996 954825 505000) 0 nil])
([nil nil ((5867 . 5868) (t 26138 997 79015 708000)) nil (26138 1006 132572 573000) 0 nil])
([nil nil ((5885 . 5895) (t 26138 1006 254974 580000)) nil (26138 1108 419935 29000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 5895)) nil (26138 1108 419928 288000) 0 nil])
([nil nil ((5895 . 5896)) nil (26138 1108 419922 177000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t ws-butler-chg chg)) . -5889) (undo-tree-id1389 . -1) 5890) nil (26138 1108 419915 233000) 0 nil])
([nil nil ((5889 . 5891)) nil (26138 1108 419904 733000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg)) . -5889) (undo-tree-id1387 . -1) (#("g" 0 1 (fontified t ws-butler-chg chg)) . -5890) (undo-tree-id1388 . -1) 5891) nil (26138 1108 419897 233000) 0 nil])
([nil nil ((5889 . 5891)) nil (26138 1108 419882 85000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t ws-butler-chg chg)) . -5890) (undo-tree-id1386 . -1) 5891) nil (26138 1108 419874 288000) 0 nil])
([nil nil ((6043 . 6053)) nil (26138 1108 419840 233000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 6053)) nil (26138 1108 419834 344000) 0 nil])
([nil nil ((6053 . 6054)) nil (26138 1108 419828 678000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 6217)) nil (26138 1108 419821 603000) 0 nil])
([nil nil ((6217 . 6225)) nil (26138 1108 419814 937000) 0 nil])
([nil nil ((6225 . 6228)) nil (26138 1129 775234 677000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -5902) (undo-tree-id1422 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -5903) (undo-tree-id1423 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -5904) (undo-tree-id1424 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -5905) (undo-tree-id1425 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -5906) (undo-tree-id1426 . -1) 5907 (t 26138 1108 574515 167000)) nil (26138 1187 148785 651000) 0 nil] [nil nil ((#("e" 0 1 (fontified t)) . 10764) (t 26138 1108 574515 167000)) ((nil ws-butler-chg delete 10765 . 10766) (10764 . 10765)) (26138 1129 774321 867000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5910 . 5911) (nil fontified nil 5910 . 5911) (nil fontified nil 5909 . 5910) (nil fontified nil 5903 . 5909) (nil fontified nil 5902 . 5903) (5902 . 5911)) nil (26138 1187 148757 207000) 0 nil])
nil
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -6064) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -6065) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -6066) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -6067) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -6068) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -6069) (undo-tree-id1421 . -1) 6070) nil (26138 1187 148741 300000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6072 . 6073) (nil fontified nil 6072 . 6073) (nil fontified nil 6071 . 6072) (nil fontified nil 6065 . 6071) (nil fontified nil 6064 . 6065) (6064 . 6073)) nil (26138 1187 148678 22000) 0 nil])
([nil nil ((6249 . 6273)) nil (26138 1187 148668 22000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -6241) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -6242) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -6243) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -6244) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -6245) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -6246) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -6247) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -6248) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) 6249) nil (26138 1187 148652 930000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6249 . 6250) (nil fontified nil 6249 . 6250) (nil fontified nil 6248 . 6249) (nil fontified nil 6242 . 6248) (nil fontified nil 6241 . 6242) (6241 . 6250)) nil (26138 1187 148413 209000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6586) (undo-tree-id1447 . -1) 6587 (t 26138 1187 270160 938000)) nil (26138 1631 43814 175000) 0 nil])
([nil nil ((#("
           " 0 1 (fontified t ws-butler-chg delete) 1 2 (fontified t) 2 12 (fontified t)) . 6586) (undo-tree-id1445 . -12) (undo-tree-id1446 . -12)) nil (26138 1631 43802 27000) 0 nil])
([nil nil ((#("
           " 0 1 (fontified t) 1 6 (fontified t) 6 10 (fontified t) 10 12 (fontified t)) . 6614) (undo-tree-id1443 . -12) (undo-tree-id1444 . -12)) nil (26138 1631 43787 564000) 0 nil])
([nil nil ((6614 . 6615)) nil (26138 1631 43774 101000) 0 nil])
([nil nil ((6614 . 6627) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 6614) (undo-tree-id1442 . -1) 6615) nil (26138 1631 43767 83000) 0 nil])
([nil nil ((#("

           " 0 1 (fontified t) 1 2 (fontified t) 2 7 (fontified t) 7 13 (fontified t)) . 6631) (undo-tree-id1439 . -13) (undo-tree-id1440 . -1) (undo-tree-id1441 . -13)) nil (26138 1631 43753 879000) 0 nil])
([nil nil ((6631 . 6632)) nil (26138 1631 43734 787000) 0 nil])
([nil nil ((#("

           " 0 1 (fontified t) 1 2 (fontified t) 2 12 (fontified t) 12 13 (fontified t)) . 6649) (undo-tree-id1437 . -13) (undo-tree-id1438 . -13)) nil (26138 1631 43683 806000) 0 nil])
([nil nil ((#("
            " 0 1 (fontified t) 1 13 (fontified t)) . 6650) (undo-tree-id1435 . -13) (undo-tree-id1436 . -13)) nil (26138 1631 43628 806000) 0 nil])
([nil nil ((6652 . 6664)) nil (26138 1631 43615 658000) 0 nil])
([nil nil ((#("
            " 0 1 (fontified t ws-butler-chg chg) 1 13 (fontified t ws-butler-chg chg)) . 6614) (undo-tree-id1433 . -13) (undo-tree-id1434 . -13) 6600) nil (26138 1631 43608 380000) 0 nil])
([nil nil ((6614 . 6615)) nil (26138 1631 43593 639000) 0 nil])
([nil nil ((#("
           " 0 1 (fontified t ws-butler-chg chg) 1 12 (ws-butler-chg chg fontified t)) . 6640) (undo-tree-id1430 . -12) (undo-tree-id1431 . -12) (undo-tree-id1432 . -12) 6599) nil (26138 1631 43585 491000) 0 nil])
([nil nil ((6640 . 6641)) nil (26138 1631 43566 917000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg)) . -6640) (undo-tree-id1429 . -1) 6641) nil (26138 1631 43559 343000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -6659) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) 6660) nil (26138 1631 43538 640000) 0 nil])
([nil nil ((9173 . 9178) (t 26138 1631 164153 37000)) nil (26138 1924 801437 603000) 0 nil])
([nil nil ((#("  " 0 2 (face font-lock-comment-face ws-butler-chg chg fontified nil)) . -9327) (9286 . 9304) (#("      " 0 3 (face font-lock-comment-face ws-butler-chg chg fontified nil) 3 6 (face font-lock-comment-face ws-butler-chg chg fontified nil)) . 9286) (9255 . 9273) (#("      " 0 6 (face font-lock-comment-face ws-butler-chg chg fontified nil)) . 9255) (9211 . 9219) (#("      " 0 6 (face font-lock-comment-face ws-butler-chg chg fontified nil)) . 9211) (nil rear-nonsticky nil 9311 . 9312) (nil fontified nil 9311 . 9312) (nil fontified nil 9303 . 9311) (nil fontified nil 9301 . 9303) (nil fontified nil 9297 . 9301) (nil fontified nil 9294 . 9297) (nil fontified nil 9290 . 9294) (nil fontified nil 9289 . 9290) (nil fontified nil 9279 . 9289) (nil fontified nil 9278 . 9279) (nil fontified nil 9275 . 9278) (nil fontified nil 9272 . 9275) (nil fontified nil 9270 . 9272) (nil fontified nil 9266 . 9270) (nil fontified nil 9265 . 9266) (nil fontified nil 9260 . 9265) (nil fontified nil 9259 . 9260) (nil fontified nil 9253 . 9259) (nil fontified nil 9251 . 9253) (nil fontified nil 9245 . 9251) (nil fontified nil 9243 . 9245) (nil fontified nil 9237 . 9243) (nil fontified nil 9218 . 9237) (nil fontified nil 9217 . 9218) (nil fontified nil 9211 . 9217) (nil fontified nil 9191 . 9211) (nil fontified nil 9184 . 9191) (nil fontified nil 9183 . 9184) (nil fontified nil 9179 . 9183) (nil fontified nil 9178 . 9179) (9178 . 9312)) nil (26138 1924 801423 363000) 0 nil])
([nil nil ((11987 . 12015)) nil (26138 1924 801392 270000) 0 nil])
([nil nil ((12015 . 12023)) nil (26138 1924 801386 381000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t ws-butler-chg chg)) . -12015) (undo-tree-id1481 . -1) (#("k" 0 1 (fontified t ws-butler-chg chg)) . -12016) (undo-tree-id1482 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -12017) (undo-tree-id1483 . -1) (#("a" 0 1 (fontified t ws-butler-chg chg)) . -12018) (undo-tree-id1484 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -12019) (undo-tree-id1485 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -12020) (undo-tree-id1486 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -12021) (undo-tree-id1487 . -1) (#("=" 0 1 (fontified t ws-butler-chg chg)) . -12022) (undo-tree-id1488 . -1) 12023) nil (26138 1924 801374 344000) 0 nil])
([nil nil ((#("
                           " 0 1 (fontified t ws-butler-chg chg) 1 28 (fontified t ws-butler-chg chg)) . 11987) (undo-tree-id1479 . -28) (undo-tree-id1480 . -28)) nil (26138 1924 801335 585000) 0 nil])
([nil nil ((11967 . 11984)) nil (26138 1924 801270 641000) 0 nil])
([nil nil ((#("           " 0 11 (fontified t)) . -12021) (undo-tree-id1478 . -11) 12032) nil (26138 1924 801263 845000) 0 nil])
([nil nil ((11967 . 11984)) nil (26138 1924 801253 419000) 0 nil])
([nil nil ((11984 . 11992)) nil (26138 1924 801247 734000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -11989) (undo-tree-id1475 . -1) (#("i" 0 1 (fontified t ws-butler-chg chg)) . -11990) (undo-tree-id1476 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg)) . -11991) (undo-tree-id1477 . -1) 11992) nil (26138 1924 801239 530000) 0 nil])
([nil nil ((11989 . 12005)) nil (26138 1924 801220 660000) 0 nil])
([nil nil ((12005 . 12006)) nil (26138 1924 801214 790000) 0 nil])
([nil nil ((7069 . 7085)) nil (26138 1924 801209 290000) 0 nil])
([nil nil ((#("                       " 0 1 (fontified t) 1 2 (fontified t) 2 13 (fontified t) 13 15 (fontified t) 15 16 (fontified t) 16 18 (fontified t) 18 22 (fontified t) 22 23 (fontified t)) . -7128) 7127) nil (26138 1924 801203 30000) 0 nil])
([nil nil ((#("                       " 0 19 (fontified t) 19 23 (fontified t)) . -7157)) nil (26138 1924 801195 956000) 0 nil])
([nil nil ((7060 . 7061)) nil (26138 1924 801190 308000) 0 nil])
([nil nil ((7177 . 7178)) nil (26138 1924 801184 549000) 0 nil])
([nil nil ((7061 . 7077)) nil (26138 1924 801178 938000) 0 nil])
([nil nil ((7063 . 7078) (#("               " 0 15 (fontified nil ws-butler-chg chg)) . 7062) (7062 . 7077) (7062 . 7063) (#("               " 0 15 (fontified t ws-butler-chg chg)) . 7062) (undo-tree-id1474 . -15) 7077) nil (26138 1924 801170 882000) 0 nil])
([nil nil ((7062 . 7077)) nil (26138 1924 801157 494000) 0 nil])
([nil nil ((7077 . 7085)) nil (26138 1924 801151 808000) 0 nil])
([nil nil ((7085 . 7086)) nil (26138 1924 801146 179000) 0 nil])
([nil nil ((7077 . 7089) (#("clearTime" 0 9 (fontified t ws-butler-chg chg)) . -7077) (undo-tree-id1473 . -9) 7086) nil (26138 1924 801138 901000) 0 nil])
([nil nil ((7089 . 7098)) nil (26138 1924 801127 475000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -7097) (undo-tree-id1472 . -1) 7098) nil (26138 1924 801120 457000) 0 nil])
([nil nil ((7097 . 7098)) nil (26138 1924 801109 827000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t syntax-table (7 . 47) face font-lock-string-face)) . -5052) (undo-tree-id1470 . -1) (#("*" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -5053) (undo-tree-id1471 . -1) 5054) nil (26138 1924 801101 864000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t)) . -5198) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (#("/" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -5199) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) 5200) nil (26138 1924 801085 253000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -5048) (undo-tree-id1464 . -4) (undo-tree-id1465 . -4) 5052) nil (26138 1924 801063 49000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5047) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) 5048) nil (26138 1924 801048 309000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (ws-butler-chg delete fontified t)) . -5189) (undo-tree-id1458 . -4) (undo-tree-id1459 . -5) (undo-tree-id1460 . -5) (undo-tree-id1461 . -5) 5194) nil (26138 1924 801033 179000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -5188) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) 5189) nil (26138 1924 801010 290000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -11826) (undo-tree-id1448 . -1) (#("v" 0 1 (fontified t)) . -11827) (undo-tree-id1449 . -1) (#("e" 0 1 (fontified t)) . -11828) (undo-tree-id1450 . -1) (#("n" 0 1 (fontified t)) . -11829) (undo-tree-id1451 . -1) (#("t" 0 1 (fontified t)) . -11830) (undo-tree-id1452 . -1) 11831) nil (26138 1925 30836 246000) 0 nil])
([nil nil ((11829 . 11830)) nil (26138 1941 540999 919000) 0 nil] [nil nil ((11829 . 11830)) ((#("{" 0 1 (fontified t ws-butler-chg chg)) . 11829)) (26138 1924 801720 250000) 0 nil])
([nil nil ((11880 . 11881)) nil (26138 1941 540993 845000) 0 nil])
([nil nil ((11878 . 11879)) ((#("}" 0 1 (fontified t ws-butler-chg chg)) . 11878) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1)) (26138 1924 800912 291000) 0 nil])
([nil nil ((11830 . 11847)) nil (26138 1941 540987 585000) 0 nil])
nil
([nil nil ((11832 . 11848) (#("                " 0 16 (fontified nil ws-butler-chg chg)) . 11831) (11831 . 11847) (11831 . 11832) (#("                " 0 16 (fontified t ws-butler-chg chg)) . 11831) (undo-tree-id1500 . -16) 11847) nil (26138 1941 540978 956000) 0 nil])
([nil nil ((11831 . 11847)) nil (26138 1941 540964 493000) 0 nil])
([nil nil ((11847 . 11868)) nil (26138 1941 540958 474000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t ws-butler-chg chg)) . -11864) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -11865) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -11866) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -11867) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) 11868) nil (26138 1941 540945 567000) 0 nil])
([nil nil ((11864 . 11868)) nil (26138 1941 540875 752000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -1252) (undo-tree-id1511 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1253) (undo-tree-id1512 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1254) (undo-tree-id1513 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -1255) (undo-tree-id1514 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1256) (undo-tree-id1515 . -1) (#("O" 0 1 (fontified t face font-lock-string-face)) . -1257) (undo-tree-id1516 . -1) (#("v" 0 1 (fontified t face font-lock-string-face)) . -1258) (undo-tree-id1517 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1259) (undo-tree-id1518 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -1260) (undo-tree-id1519 . -1) 1261 (t 26138 1941 666742 625000)) nil (26138 1958 440506 944000) 0 nil])
([nil nil ((1252 . 1256)) nil (26138 1958 440464 370000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1252) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1253) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (#("m" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1254) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1255) (undo-tree-id1510 . -1) 1256) nil (26138 1958 440452 241000) 0 nil])
([nil current ((1252 . 1256)) nil (26138 2065 639868 383000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -5177) (undo-tree-id1523 . -1) (#("0" 0 1 (fontified t)) . -5178) (undo-tree-id1524 . -1) 5179 (t 26138 1958 562665 796000)) ((5177 . 5179)) (26138 2065 23132 818000) 0 nil])
([nil nil ((5177 . 5178)) ((#("5" 0 1 (fontified t)) . 5177) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1)) (26138 2064 621166 555000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -9335) (undo-tree-id1522 . -1) 9336) ((9335 . 9336)) (26138 2064 224829 673000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -9334) (undo-tree-id1521 . -1) 9335) ((9334 . 9335)) (26138 2063 865887 176000) 0 nil])
([nil nil ((9334 . 9335)) ((#("4" 0 1 (fontified t ws-butler-chg chg)) . 9334) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1)) (26138 2063 460129 392000) 0 nil])
([nil nil ((#("4" 0 1 (fontified t ws-butler-chg chg)) . -9334) (undo-tree-id1520 . -1) 9335) ((9334 . 9335)) (26138 2063 99042 146000) 0 nil])
([nil nil ((9334 . 9335)) ((#("5" 0 1 (fontified t)) . 9334) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (t 26138 2044 306275 808000)) (26138 2044 182346 131000) 0 nil])
nil
