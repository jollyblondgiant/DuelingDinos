(undo-tree-save-format-version . 1)
"c77ed08c2c593ef602749db29e6d56e1125a811d"
[nil nil nil nil (26125 33671 389779 384000) 0 nil]
([nil nil ((1514 . 1531) (t 26125 32354 231054 786000)) nil (26125 33671 389772 143000) 0 nil])
([nil nil ((1516 . 1532) (#("                " 0 16 (fontified nil ws-butler-chg chg)) . 1515) (1515 . 1531) (1515 . 1516) (#("                " 0 16 (fontified t ws-butler-chg chg)) . 1515) (undo-tree-id25 . -16) 1531) nil (26125 33671 389762 273000) 0 nil])
([nil nil ((1515 . 1531)) nil (26125 33671 389747 402000) 0 nil])
([nil nil ((1531 . 1551)) nil (26125 33671 389741 162000) 0 nil])
([nil nil ((1551 . 1572)) nil (26125 33671 389734 754000) 0 nil])
([nil nil ((1572 . 1574)) nil (26125 33671 389727 921000) 0 nil])
([nil nil ((1574 . 1591)) nil (26125 33671 389721 458000) 0 nil])
([nil nil ((1591 . 1604)) nil (26125 33671 389715 106000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1602) (undo-tree-id23 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1603) (undo-tree-id24 . -1) 1604) nil (26125 33671 389706 810000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1598) (undo-tree-id19 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1599) (undo-tree-id20 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1600) (undo-tree-id21 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1601) (undo-tree-id22 . -1) 1602) nil (26125 33671 389688 199000) 0 nil])
([nil nil ((1598 . 1608)) nil (26125 33671 389664 755000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -1598) (undo-tree-id9 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1599) (undo-tree-id10 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -1600) (undo-tree-id11 . -1) (#("v" 0 1 (fontified t ws-butler-chg chg)) . -1601) (undo-tree-id12 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1602) (undo-tree-id13 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -1603) (undo-tree-id14 . -1) (#("_" 0 1 (fontified t ws-butler-chg chg)) . -1604) (undo-tree-id15 . -1) (#("u" 0 1 (fontified t ws-butler-chg chg)) . -1605) (undo-tree-id16 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg)) . -1606) (undo-tree-id17 . -1) (#("l" 0 1 (fontified t ws-butler-chg chg)) . -1607) (undo-tree-id18 . -1) 1608) nil (26125 33671 389650 458000) 0 nil])
([nil nil ((425 . 427)) nil (26125 33671 389603 570000) 0 nil])
([nil nil ((427 . 448)) nil (26125 33671 389596 829000) 0 nil])
([nil nil ((448 . 451)) nil (26125 33671 389590 514000) 0 nil])
([nil nil ((451 . 457)) nil (26125 33671 389584 588000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -433) (undo-tree-id3 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -434) (undo-tree-id4 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -435) (undo-tree-id5 . -1) (#("v" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -436) (undo-tree-id6 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -437) (undo-tree-id7 . -1) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . -438) (undo-tree-id8 . -1) 439) nil (26125 33671 389573 792000) 0 nil])
([nil nil ((433 . 437)) nil (26125 33671 389542 366000) 0 nil])
([nil nil ((455 . 456)) nil (26125 33671 389536 14000) 0 nil])
([nil nil ((456 . 465)) nil (26125 33671 389529 644000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -464) (undo-tree-id2 . -1) 465) nil (26125 33671 389521 811000) 0 nil])
([nil nil ((464 . 466)) nil (26125 33671 389509 774000) 0 nil])
([nil nil ((1639 . 1648)) nil (26125 33671 389503 181000) 0 nil])
([nil nil ((1648 . 1665)) nil (26125 33671 389496 848000) 0 nil])
([nil nil ((1665 . 1670)) nil (26125 33671 389490 589000) 0 nil])
([nil nil ((1675 . 1676) (1649 . 1669) (#("                " 0 16 (ws-butler-chg chg fontified nil)) . 1649) (1670 . 1671)) nil (26125 33671 389482 589000) 0 nil])
([nil nil ((1675 . 1686)) nil (26125 33671 389473 255000) 0 nil])
([nil nil ((1686 . 1707)) nil (26125 33671 389466 607000) 0 nil])
([nil nil ((1707 . 1708)) nil (26125 33671 389459 903000) 0 nil])
([nil nil ((1699 . 1709)) nil (26125 33671 389453 441000) 0 nil])
([nil nil ((#("_" 0 1 (ws-butler-chg chg fontified t)) . -1717) (undo-tree-id1 . -1) 1718) nil (26125 33671 389445 626000) 0 nil])
([nil nil ((1717 . 1718)) nil (26125 33671 389433 89000) 0 nil])
([nil nil ((1719 . 1720)) nil (26125 33671 389425 959000) 0 nil])
([nil nil ((#(")" 0 1 (ws-butler-chg chg fontified t)) . -1719) (undo-tree-id0 . -1) 1720) nil (26125 33671 389410 570000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1614) (undo-tree-id26 . -1) 1615 (t 26125 33671 401642 744000)) nil (26125 33812 608191 685000) 0 nil])
([nil nil ((#("onClick={
                console.log(\"voting: \", state.page, \"...\")
                fetch (vote_url)
                    .then(response => console.log(\"voted!\", response))
                (event)=>setState({... state, 'page': 'video'})}" 0 9 (fontified t) 9 10 (fontified t) 10 38 (fontified t) 38 48 (fontified t face font-lock-string-face) 48 62 (fontified t) 62 67 (fontified t face font-lock-string-face) 67 68 (fontified t) 68 69 (fontified t) 69 102 (fontified t) 102 122 (fontified t) 122 123 (fontified t) 123 152 (fontified t) 152 160 (fontified t face font-lock-string-face) 160 162 (fontified t) 162 171 (fontified t) 171 172 (fontified t) 172 173 (fontified t) 173 189 (fontified t) 189 190 (fontified t) 190 219 (fontified t) 219 220 (fontified t face font-lock-string-face) 220 224 (fontified t face font-lock-string-face) 224 225 (fontified t face font-lock-string-face) 225 227 (fontified t) 227 228 (fontified t face font-lock-string-face) 228 231 (fontified t face font-lock-string-face) 231 233 (fontified t face font-lock-string-face) 233 234 (fontified t face font-lock-string-face) 234 237 (fontified t)) . 1546) (undo-tree-id32 . -171) (undo-tree-id33 . -68) (undo-tree-id34 . -237) (undo-tree-id35 . -237) 1783 (t 26125 33812 629074 822000)) nil (26125 33921 96844 69000) 0 nil])
([nil nil ((1546 . 1556)) nil (26125 33921 96821 162000) 0 nil])
([nil nil ((1555 . 1568)) nil (26125 33921 96815 69000) 0 nil])
([nil nil ((1557 . 1569) (#("                " 0 16 (fontified nil ws-butler-chg chg)) . 1556) (1556 . 1572) (1556 . 1557) (#("            " 0 12 (fontified t ws-butler-chg chg)) . 1556) (undo-tree-id31 . -12) 1568) nil (26125 33921 96778 162000) 0 nil])
([nil nil ((1556 . 1572)) nil (26125 33921 96753 570000) 0 nil])
([nil nil ((1572 . 1585)) nil (26125 33921 96746 829000) 0 nil])
([nil nil ((1585 . 1606)) nil (26125 33921 96740 255000) 0 nil])
([nil nil ((1606 . 1611)) nil (26125 33921 96733 551000) 0 nil])
([nil nil ((#("." 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1609) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("." 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1610) (undo-tree-id29 . -1) (undo-tree-id30 . -1) 1611) nil (26125 33921 96723 459000) 0 nil])
([nil nil ((1591 . 1592)) nil (26125 33921 96677 903000) 0 nil])
([nil nil ((1608 . 1609)) nil (26125 33921 97218 123000) 0 nil])
([nil nil ((1610 . 1612)) nil (26125 33931 923349 625000) 0 nil] [nil nil ((1610 . 1612)) ((#(".." 0 2 (fontified t ws-butler-chg chg face font-lock-string-face)) . 1610)) (26125 33921 96651 533000) 0 nil])
([nil nil ((1613 . 1614)) nil (26125 33931 923343 329000) 0 nil])
nil
([nil nil ((1614 . 1616)) nil (26125 33931 923336 681000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t ws-butler-chg chg)) . -1615) (undo-tree-id40 . -1) 1616) nil (26125 33931 923328 514000) 0 nil])
([nil nil ((1615 . 1616)) nil (26125 33931 923316 977000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg)) . -1615) (undo-tree-id39 . -1) 1616) nil (26125 33931 923308 829000) 0 nil])
([nil nil ((1615 . 1632)) nil (26125 33931 923295 774000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t ws-butler-chg chg)) . 1616) (undo-tree-id36 . -16) (undo-tree-id37 . -16) (undo-tree-id38 . -16) 1632) nil (26125 33931 923279 792000) 0 nil])
([nil nil ((1616 . 1632) 1632 (t 26125 33931 936587 52000)) nil (26125 33970 525275 540000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t ws-butler-chg chg)) . 1616) (undo-tree-id52 . -16) 1632 (t 26125 33931 936587 52000)) nil (26125 33970 525266 281000) 0 nil])
([nil nil ((1572 . 1574)) nil (26125 33970 525254 466000) 0 nil])
([nil nil ((1573 . 1578)) nil (26125 33970 525248 318000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t ws-butler-chg chg)) . -1572) (undo-tree-id46 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1573) (undo-tree-id47 . -1) (#("v" 0 1 (fontified t ws-butler-chg chg)) . -1574) (undo-tree-id48 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1575) (undo-tree-id49 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -1576) (undo-tree-id50 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1577) (undo-tree-id51 . -1) 1578) nil (26125 33970 525237 670000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg delete)) . 1572)) nil (26125 33970 525204 837000) 0 nil])
([nil nil ((1572 . 1579)) nil (26125 33970 525198 466000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg)) . -1573) (undo-tree-id41 . -1) (#("v" 0 1 (fontified t ws-butler-chg chg)) . -1574) (undo-tree-id42 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1575) (undo-tree-id43 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -1576) (undo-tree-id44 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1577) (undo-tree-id45 . -1) 1578) nil (26125 33970 525186 781000) 0 nil])
([nil nil ((1574 . 1579)) nil (26125 33970 525086 837000) 0 nil])
([nil nil ((1622 . 1623)) nil (26125 33984 792966 203000) 0 nil])
([nil nil ((1622 . 1645) (t 26125 33970 536427 957000)) nil (26125 34046 227819 917000) 0 nil] [nil nil ((1622 . 1645) (t 26125 33970 536427 957000)) ((#("
                      " 0 23 (fontified t ws-butler-chg chg)) . 1622) (undo-tree-id53 . -23) (undo-tree-id54 . -23) (undo-tree-id55 . -1)) (26125 33984 791976 114000) 0 nil])
([nil nil ((1652 . 1655) (1645 . 1646) (1645 . 1651)) nil (26125 34046 227812 658000) 0 nil])
nil
([nil nil ((1655 . 1657)) nil (26125 34046 227804 899000) 0 nil])
([nil nil ((1656 . 1657)) nil (26125 34046 227798 973000) 0 nil])
([nil nil ((1652 . 1660) (#("vote_" 0 5 (fontified t ws-butler-chg chg)) . -1652) (undo-tree-id56 . -5) 1657) nil (26125 34046 227790 732000) 0 nil])
([nil nil ((1661 . 1684)) nil (26125 34046 227755 325000) 0 nil])
([nil nil ((1691 . 1696) (1684 . 1685) (1684 . 1690)) nil (26125 34046 227748 232000) 0 nil])
([nil nil ((1696 . 1717)) nil (26125 34046 227740 510000) 0 nil])
([nil nil ((1717 . 1729)) nil (26125 34046 227734 232000) 0 nil])
([nil nil ((1729 . 1733)) nil (26125 34046 227728 418000) 0 nil])
([nil nil ((1733 . 1756)) nil (26125 34046 227722 529000) 0 nil])
([nil nil ((1756 . 1764)) nil (26125 34046 227716 584000) 0 nil])
([nil nil ((1766 . 1768) (1756 . 1757) (1764 . 1765)) nil (26125 34046 227709 807000) 0 nil])
([nil nil ((1767 . 1788)) nil (26125 34046 227701 436000) 0 nil])
([nil nil ((1788 . 1789)) nil (26125 34046 227695 270000) 0 nil])
([nil nil ((1789 . 1793)) nil (26125 34046 227688 288000) 0 nil])
([nil nil ((1794 . 1795)) nil (26125 34046 227670 770000) 0 nil])
([nil nil ((445 . 452) (t 26125 34046 240114 366000)) nil (26125 34176 655960 964000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 452) (#("." 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 452) (#("0" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 452) (#("." 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 452) (#("0" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 452) (#("." 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 452) (#("7" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 452) (#("2" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 452) (#("1" 0 1 (fontified t face font-lock-string-face)) . 452) (t 26125 34176 667569 934000)) nil (26125 34463 616336 142000) 0 nil])
([nil nil ((452 . 455)) nil (26125 34463 616322 179000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -454) (undo-tree-id58 . -1) 455) nil (26125 34463 616314 290000) 0 nil])
([nil nil ((454 . 465)) nil (26125 34463 616301 549000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -464) (undo-tree-id57 . -1) 465) nil (26125 34463 616291 623000) 0 nil])
([nil nil ((464 . 465)) nil (26125 34463 616244 494000) 0 nil])
([nil nil ((475 . 476) (t 26125 34463 626358 525000)) nil (26125 34760 656961 684000) 0 nil])
([nil nil ((1188 . 1193) (t 26125 34760 669092 40000)) nil (26125 34943 244965 949000) 0 nil])
([nil nil ((1193 . 1197)) nil (26125 34943 244958 227000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -1195) (undo-tree-id65 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -1196) (undo-tree-id66 . -1) 1197) nil (26125 34943 244949 152000) 0 nil])
([nil nil ((1195 . 1198)) nil (26125 34943 244932 708000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t ws-butler-chg chg)) . -1195) (undo-tree-id62 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -1196) (undo-tree-id63 . -1) (#("c" 0 1 (fontified t ws-butler-chg chg)) . -1197) (undo-tree-id64 . -1) 1198) nil (26125 34943 244923 301000) 0 nil])
([nil nil ((1195 . 1215)) nil (26125 34943 244902 597000) 0 nil])
([nil nil ((1215 . 1219)) nil (26125 34943 244896 319000) 0 nil])
([nil nil ((1218 . 1223)) nil (26125 34943 244889 727000) 0 nil])
([nil nil ((1220 . 1224) (#("        " 0 8 (fontified nil ws-butler-chg chg)) . 1219) (1219 . 1227) (1219 . 1220) (#("    " 0 4 (fontified t ws-butler-chg chg)) . 1219) (undo-tree-id61 . -4) 1223) nil (26125 34943 244880 653000) 0 nil])
([nil nil ((1219 . 1227)) nil (26125 34943 244864 671000) 0 nil])
([nil nil ((1227 . 1248)) nil (26125 34943 244858 320000) 0 nil])
([nil nil ((1248 . 1249)) nil (26125 34943 244851 208000) 0 nil])
([nil nil ((#("fetch(vote_url)" 0 6 (fontified t) 6 14 (fontified t) 14 15 (fontified t)) . 1725) (undo-tree-id59 . -15) (undo-tree-id60 . -15) 1740) nil (26125 34943 245497 2000) 0 nil])
([nil nil ((1249 . 1250)) nil (26125 35005 177833 237000) 0 nil] [nil nil ((nil rear-nonsticky nil 1263 . 1264) (nil fontified nil 1263 . 1264) (nil fontified nil 1255 . 1263) (nil fontified nil 1249 . 1255) (1249 . 1264)) ((#("fetch(vote_url)" 0 6 (ws-butler-chg chg fontified nil) 6 14 (ws-butler-chg chg fontified nil) 14 15 (ws-butler-chg chg fontified nil rear-nonsticky nil)) . 1249) (undo-tree-id67 . -15) (undo-tree-id68 . -14) (undo-tree-id69 . -15) (nil rear-nonsticky t 1263 . 1264)) (26125 34943 244789 246000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1264 . 1265) (nil fontified nil 1264 . 1265) (nil fontified nil 1256 . 1264) (nil fontified nil 1250 . 1256) (1250 . 1265)) nil (26125 35005 177826 182000) 0 nil])
nil
([nil nil ((1265 . 1266)) nil (26125 35005 177816 478000) 0 nil])
([nil nil ((1266 . 1275)) nil (26125 35005 177809 811000) 0 nil])
([nil nil ((1275 . 1281)) nil (26125 35005 177803 496000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 1233) (#("s" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 1233) (#("n" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 1233) (#("o" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 1233) (#("p" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 1233) (#("s" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 1233) (#("e" 0 1 (fontified t ws-butler-chg delete face font-lock-variable-name-face)) . 1233) (#("r" 0 1 (fontified t ws-butler-chg chg face font-lock-variable-name-face)) . 1233)) nil (26125 35005 177793 256000) 0 nil])
([nil nil ((1233 . 1240)) nil (26125 35005 177781 182000) 0 nil])
([nil nil ((1280 . 1283)) nil (26125 35005 177774 719000) 0 nil])
([nil nil ((#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -1280) (undo-tree-id82 . -1) (#("w" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -1281) (undo-tree-id83 . -1) (#("a" 0 1 (ws-butler-chg chg fontified t face font-lock-variable-name-face)) . -1282) (undo-tree-id84 . -1) 1283) nil (26125 35005 177765 497000) 0 nil])
([nil nil ((1280 . 1290)) nil (26125 35005 177746 237000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -1288) (undo-tree-id80 . -1) (#(" " 0 1 (ws-butler-chg chg fontified t)) . -1289) (undo-tree-id81 . -1) 1290) nil (26125 35005 177737 978000) 0 nil])
([nil nil ((1241 . 1242)) nil (26125 35005 177722 238000) 0 nil])
([nil nil ((1289 . 1299)) nil (26125 35005 177715 626000) 0 nil])
([nil nil ((#("f" 0 1 (ws-butler-chg chg fontified t)) . -1298) (undo-tree-id79 . -1) 1299) nil (26125 35005 177707 589000) 0 nil])
([nil nil ((1298 . 1306)) nil (26125 35005 177696 238000) 0 nil])
([nil nil ((1306 . 1313)) nil (26125 35005 177689 904000) 0 nil])
([nil nil ((#("l" 0 1 (ws-butler-chg chg fontified t)) . -1312) (undo-tree-id78 . -1) 1313) nil (26125 35005 177681 793000) 0 nil])
([nil nil ((1312 . 1313)) nil (26125 35005 177670 145000) 0 nil])
([nil nil ((1313 . 1322)) nil (26125 35005 177663 497000) 0 nil])
([nil nil ((1322 . 1343)) nil (26125 35005 177656 886000) 0 nil])
([nil nil ((1343 . 1344)) nil (26125 35005 177650 423000) 0 nil])
([nil nil ((#("_" 0 1 (ws-butler-chg chg fontified t)) . -1342) (undo-tree-id76 . -1) (#(";" 0 1 (ws-butler-chg chg fontified t)) . -1343) (undo-tree-id77 . -1) 1344) nil (26125 35005 177641 664000) 0 nil])
([nil nil ((1342 . 1344)) nil (26125 35005 177624 960000) 0 nil])
([nil nil ((#(".then(response=>console.log(\"voted!\", response))" 0 1 (fontified t) 1 28 (fontified t) 28 36 (face font-lock-string-face fontified t) 36 48 (fontified t)) . -1844) (undo-tree-id74 . -48) (undo-tree-id75 . -48) 1892) nil (26125 35005 177616 442000) 0 nil])
([nil nil ((1820 . 1825)) nil (26125 35005 177601 16000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t ws-butler-chg chg)) . -1823) (undo-tree-id72 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -1824) (undo-tree-id73 . -1) 1825) nil (26125 35005 177591 608000) 0 nil])
([nil nil ((1823 . 1827)) nil (26125 35005 177569 16000) 0 nil])
([nil nil ((1216 . 1220)) nil (26125 35005 177562 275000) 0 nil])
([nil nil ((1831 . 1835)) nil (26125 35005 177555 498000) 0 nil])
([nil nil ((1835 . 1843)) nil (26125 35005 177548 164000) 0 nil])
([nil nil ((#("                       " 0 1 (fontified t) 1 9 (fontified t) 9 15 (fontified t) 15 23 (fontified t)) . 1844) (undo-tree-id70 . -23) (undo-tree-id71 . -23) 1843) nil (26125 35005 177532 461000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1843) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 1844 (t 26125 35005 192043 935000)) nil (26125 35006 572073 103000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -1309) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("j" 0 1 (fontified t)) . -1310) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("s" 0 1 (fontified t)) . -1311) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("o" 0 1 (fontified t)) . -1312) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("n" 0 1 (fontified t)) . -1313) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#("(" 0 1 (fontified t)) . -1314) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (#(")" 0 1 (fontified t)) . -1315) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#(";" 0 1 (fontified t)) . -1316) (undo-tree-id112 . -1) 1317 (t 26125 35006 588037 942000)) nil (26125 35028 569373 572000) 0 nil])
([nil nil ((1309 . 1310)) nil (26125 35028 569120 833000) 0 nil])
([nil nil ((1268 . 1274) (t 26125 35028 587943 474000)) nil (26125 35101 921781 347000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . -1270) (undo-tree-id137 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1271) (undo-tree-id138 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1272) (undo-tree-id139 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg)) . -1273) (undo-tree-id140 . -1) 1274) nil (26125 35101 921770 569000) 0 nil])
([nil nil ((1269 . 1306) (#(" " 0 1 (fontified t ws-butler-chg chg)) . 1269) (undo-tree-id136 . -1) 1270) nil (26125 35101 921745 699000) 0 nil])
([nil nil ((1314 . 1321) (1306 . 1307) (1306 . 1313)) nil (26125 35101 921733 477000) 0 nil])
([nil nil ((1321 . 1358)) nil (26125 35101 921725 144000) 0 nil])
([nil nil ((1358 . 1362)) nil (26125 35101 921718 569000) 0 nil])
([nil nil ((1358 . 1359) 1362) nil (26125 35101 921711 958000) 0 nil])
([nil nil ((1363 . 1369)) nil (26125 35101 921704 736000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t ws-butler-chg chg)) . -1365) (undo-tree-id132 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -1366) (undo-tree-id133 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1367) (undo-tree-id134 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1368) (undo-tree-id135 . -1) 1369) nil (26125 35101 921694 866000) 0 nil])
([nil nil ((1365 . 1366)) nil (26125 35101 921670 977000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -1365) (undo-tree-id131 . -1) 1366) nil (26125 35101 921663 255000) 0 nil])
([nil nil ((1365 . 1372)) nil (26125 35101 921651 644000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t ws-butler-chg chg)) . -1365) (undo-tree-id124 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -1366) (undo-tree-id125 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg)) . -1367) (undo-tree-id126 . -1) (#("n" 0 1 (fontified t ws-butler-chg chg)) . -1368) (undo-tree-id127 . -1) (#("." 0 1 (fontified t ws-butler-chg chg)) . -1369) (undo-tree-id128 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg)) . -1370) (undo-tree-id129 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1371) (undo-tree-id130 . -1) 1372) nil (26125 35101 921639 329000) 0 nil])
([nil nil ((1365 . 1367)) nil (26125 35101 921602 626000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg)) . -1366) (undo-tree-id123 . -1) 1367) nil (26125 35101 921594 422000) 0 nil])
([nil nil ((1366 . 1369)) nil (26125 35101 921582 552000) 0 nil])
([nil nil ((#("J" 0 1 (fontified t ws-butler-chg chg)) . -1365) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (#("S" 0 1 (fontified t ws-butler-chg chg)) . -1366) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (#("O" 0 1 (fontified t ws-butler-chg chg)) . -1367) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (#("N" 0 1 (fontified t ws-butler-chg chg)) . -1368) (undo-tree-id122 . -1) 1369) nil (26125 35101 921570 89000) 0 nil])
([nil nil ((1365 . 1369)) nil (26125 35101 921490 33000) 0 nil])
([nil nil ((1321 . 1322) (t 26125 35101 935628 362000)) nil (26125 35107 810313 595000) 0 nil])
([nil nil ((1307 . 1308) (t 26125 35107 827603 39000)) nil (26125 35131 774322 416000) 0 nil])
([nil nil ((1361 . 1362) (1371 . 1372)) nil (26125 35131 774314 8000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t ws-butler-chg chg)) . -1372) (undo-tree-id141 . -1) (undo-tree-id142 . -1) 1373) nil (26125 35131 774303 508000) 0 nil])
([nil nil ((1372 . 1373)) nil (26125 35131 774252 768000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1368) (undo-tree-id160 . -1) (#("o" 0 1 (fontified t)) . -1369) (undo-tree-id161 . -1) (#("t" 0 1 (fontified t)) . -1370) (undo-tree-id162 . -1) (#("e" 0 1 (fontified t)) . -1371) (undo-tree-id163 . -1) 1372 (t 26125 35131 791495 633000)) nil (26125 35562 937963 189000) 0 nil])
([nil nil ((1368 . 1370)) nil (26125 35562 937940 152000) 0 nil])
([nil nil ((1369 . 1371)) nil (26125 35562 937934 189000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1370) (undo-tree-id159 . -1) 1371) nil (26125 35562 937927 78000) 0 nil])
([nil nil ((1370 . 1374)) nil (26125 35562 937916 485000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1371) (undo-tree-id156 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1372) (undo-tree-id157 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1373) (undo-tree-id158 . -1) 1374) nil (26125 35562 937907 948000) 0 nil])
([nil nil ((1371 . 1374)) nil (26125 35562 937889 485000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1371) (undo-tree-id153 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1372) (undo-tree-id154 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1373) (undo-tree-id155 . -1) 1374) nil (26125 35562 937880 782000) 0 nil])
([nil nil ((1371 . 1380)) nil (26125 35562 937862 689000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -1377) (undo-tree-id150 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1378) (undo-tree-id151 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1379) (undo-tree-id152 . -1) 1380) nil (26125 35562 937854 411000) 0 nil])
([nil nil ((1377 . 1380)) nil (26125 35562 937836 152000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -1377) (undo-tree-id147 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1378) (undo-tree-id148 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1379) (undo-tree-id149 . -1) 1380) nil (26125 35562 937827 689000) 0 nil])
([nil nil ((1377 . 1381)) nil (26125 35562 937808 449000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t ws-butler-chg chg)) . -1379) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("w" 0 1 (fontified t ws-butler-chg chg)) . -1380) (undo-tree-id146 . -1) 1381) nil (26125 35562 937798 97000) 0 nil])
([nil nil ((1379 . 1380)) nil (26125 35562 937739 23000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . -1380) (undo-tree-id212 . -1) 1381 (t 26125 35562 949543 100000)) nil (26125 35823 321231 345000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . -1368) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1369) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (#("v" 0 1 (fontified t face font-lock-string-face)) . -1370) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1371) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1372) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1373) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1374) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#(":" 0 1 (fontified t)) . -1375) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("v" 0 1 (fontified t)) . -1376) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("o" 0 1 (fontified t)) . -1377) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#("t" 0 1 (fontified t)) . -1378) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("e" 0 1 (fontified t)) . -1379) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) 1380) nil (26125 36059 374991 664000) 0 nil])
([nil nil ((1368 . 1371)) nil (26125 36112 874096 301000) 0 nil] [nil nil ((1368 . 1372)) ((#("vote" 0 4 (fontified t face font-lock-string-face)) . 1368) (undo-tree-id222 . -4) (t 26125 35823 336386 944000)) (26125 36058 932669 626000) 0 nil])
([nil nil ((1370 . 1371)) nil (26125 36112 874090 79000) 0 nil])
([nil nil ((1323 . 1362) (t 26125 35823 336386 944000)) ((#("
                                      " 0 1 (fontified t ws-butler-chg chg) 1 39 (fontified t ws-butler-chg chg)) . 1323) (undo-tree-id218 . -39) (undo-tree-id219 . -39) (undo-tree-id220 . -39) (undo-tree-id221 . -1)) (26125 36058 492787 78000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1370) (undo-tree-id287 . -1) 1371) nil (26125 36112 874082 727000) 0 nil])
([nil nil ((1362 . 1373)) ((#("headers: {}" 0 10 (fontified t ws-butler-chg chg) 10 11 (fontified t ws-butler-chg chg)) . 1362) (undo-tree-id215 . -10) (undo-tree-id216 . -10) (undo-tree-id217 . -10)) (26125 36058 124202 31000) 0 nil])
([nil nil ((1370 . 1376)) nil (26125 36112 874071 468000) 0 nil])
([nil nil ((1372 . 1381)) ((#("'Content-" 0 9 (fontified t ws-butler-chg chg face font-lock-string-face)) . 1372) (undo-tree-id213 . -9) (undo-tree-id214 . -9)) (26125 36058 123763 366000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1371) (undo-tree-id282 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1372) (undo-tree-id283 . -1) (#("d" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1373) (undo-tree-id284 . -1) (#("y" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1374) (undo-tree-id285 . -1) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1375) (undo-tree-id286 . -1) 1376) nil (26125 36112 874061 764000) 0 nil])
nil
([nil nil ((1371 . 1382)) nil (26125 36112 874035 60000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1378) (undo-tree-id278 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1379) (undo-tree-id279 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1380) (undo-tree-id280 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1381) (undo-tree-id281 . -1) 1382) nil (26125 36112 874025 283000) 0 nil])
([nil nil ((1378 . 1382)) nil (26125 36112 874002 468000) 0 nil])
([nil nil ((1383 . 1384)) nil (26125 36112 873996 209000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1383) (undo-tree-id277 . -1) 1384) nil (26125 36112 873988 820000) 0 nil])
([nil nil ((1383 . 1384)) nil (26125 36112 873974 172000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1368) (undo-tree-id276 . -1) 1369) nil (26125 36112 873966 931000) 0 nil])
([nil nil ((1368 . 1369)) nil (26125 36112 873956 468000) 0 nil])
([nil nil ((1378 . 1379)) nil (26125 36112 873950 320000) 0 nil])
([nil nil ((#("$" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1378) (undo-tree-id275 . -1) 1379) nil (26125 36112 873943 302000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1383) (undo-tree-id274 . -1) 1384) nil (26125 36112 873930 579000) 0 nil])
([nil nil ((1383 . 1384)) nil (26125 36112 873919 394000) 0 nil])
([nil nil ((#("`" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1368) (undo-tree-id273 . -1) 1369) nil (26125 36112 873911 802000) 0 nil])
([nil nil ((1368 . 1369)) nil (26125 36112 873900 265000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1367) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1368) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#("{" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . -1369) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1370) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#("v" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1371) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1372) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1373) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1374) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1375) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1376) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1377) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (#("v" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . -1378) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1379) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1380) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1381) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (#("}" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . -1382) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (#("'" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1383) (undo-tree-id272 . -1) 1384) nil (26125 36112 873876 561000) 0 nil])
([nil nil ((1367 . 1372)) nil (26125 36112 873607 655000) 0 nil])
([nil nil ((1323 . 1362) (t 26125 36112 895111 838000)) nil (26125 36241 248930 627000) 0 nil])
([nil nil ((1362 . 1371)) nil (26125 36241 248923 794000) 0 nil])
([nil nil ((1370 . 1383)) nil (26125 36241 248917 220000) 0 nil])
([nil nil ((1383 . 1387)) nil (26125 36241 248909 202000) 0 nil])
([nil nil ((1387 . 1398)) nil (26125 36241 248890 924000) 0 nil])
([nil nil ((1399 . 1400) (t 26125 36241 262548 827000)) nil (26125 36247 794771 298000) 0 nil])
([nil nil ((1369 . 1371) (t 26125 36247 810520 136000)) nil (26125 36277 190514 692000) 0 nil])
([nil nil ((1323 . 1362) (t 26125 36255 166487 908000)) nil (26125 36374 99547 469000) 0 nil] [nil nil ((1371 . 1372) (t 26125 36255 166487 908000)) ((#("
" 0 1 (fontified t ws-butler-chg chg)) . 1371) (undo-tree-id288 . -1)) (26125 36277 189545 30000) 0 nil])
([nil nil ((1362 . 1373)) nil (26125 36374 99539 839000) 0 nil])
nil
([nil nil ((#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1372) (undo-tree-id290 . -1) 1373) nil (26125 36374 99532 135000) 0 nil])
([nil nil ((1372 . 1375)) nil (26125 36374 99519 358000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t ws-butler-chg chg)) . -1374) (undo-tree-id289 . -1) 1375) nil (26125 36374 99510 580000) 0 nil])
([nil nil ((1374 . 1375)) nil (26125 36374 99462 376000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -1441) (undo-tree-id291 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1442) (undo-tree-id292 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -1443) (undo-tree-id293 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1444) (undo-tree-id294 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -1445) (undo-tree-id295 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -1446) (undo-tree-id296 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -1447) (undo-tree-id297 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1448) (undo-tree-id298 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -1449) (undo-tree-id299 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -1450) (undo-tree-id300 . -1) 1451 (t 26125 36374 117967 147000)) nil (26125 36556 885347 540000) 0 nil])
([nil nil ((1441 . 1457)) nil (26125 36556 885261 688000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t)) . -1505) (undo-tree-id306 . -1) (#("o" 0 1 (fontified t)) . -1506) (undo-tree-id307 . -1) (#("t" 0 1 (fontified t)) . -1507) (undo-tree-id308 . -1) (#("e" 0 1 (fontified t)) . -1508) (undo-tree-id309 . -1) 1509 (t 26125 36556 901168 137000)) nil (26125 36589 893868 464000) 0 nil])
([nil nil ((1505 . 1508)) nil (26125 36589 893843 816000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1505) (undo-tree-id303 . -1) (#("{" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1506) (undo-tree-id304 . -1) (#("}" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1507) (undo-tree-id305 . -1) 1508) nil (26125 36589 893834 872000) 0 nil])
([nil nil ((1505 . 1509)) nil (26125 36589 893813 631000) 0 nil])
([nil nil ((1507 . 1509)) nil (26125 36589 893807 372000) 0 nil])
([nil nil ((1508 . 1513)) nil (26125 36589 893801 57000) 0 nil])
([nil nil ((1513 . 1514)) nil (26125 36589 893794 631000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1512) (undo-tree-id301 . -1) (#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1513) (undo-tree-id302 . -1) 1514) nil (26125 36589 893784 317000) 0 nil])
([nil nil ((1512 . 1518)) nil (26125 36589 893733 21000) 0 nil])
([nil nil ((1505 . 1521) (t 26125 36589 917023 937000)) nil (26125 36655 359561 427000) 0 nil])
([nil nil ((1520 . 1522)) nil (26125 36655 359554 723000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t ws-butler-chg chg)) . -1521) (undo-tree-id322 . -1) 1522) nil (26125 36655 359547 1000) 0 nil])
([nil nil ((1521 . 1522)) nil (26125 36655 359536 19000) 0 nil])
([nil nil ((1521 . 1526)) nil (26125 36655 359530 130000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1523) (undo-tree-id319 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1524) (undo-tree-id320 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1525) (undo-tree-id321 . -1) 1526) nil (26125 36655 359521 593000) 0 nil])
([nil nil ((1523 . 1526)) nil (26125 36655 359475 834000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1523) (undo-tree-id316 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1524) (undo-tree-id317 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -1525) (undo-tree-id318 . -1) 1526) nil (26125 36655 359467 260000) 0 nil])
([nil nil ((1523 . 1533)) nil (26125 36655 359447 946000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t ws-butler-chg chg)) . -1530) (undo-tree-id313 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg)) . -1531) (undo-tree-id314 . -1) (#("e" 0 1 (fontified t ws-butler-chg chg)) . -1532) (undo-tree-id315 . -1) 1533) nil (26125 36655 359439 501000) 0 nil])
([nil nil ((1530 . 1533)) nil (26125 36655 359419 186000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -1535) (undo-tree-id312 . -1) 1536) nil (26125 36655 359411 409000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 1535) (#("}" 0 1 (fontified t ws-butler-chg delete)) . 1535) (#("\"" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 1535) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 1535) (undo-tree-id311 . -1) (#("t" 0 1 (fontified t ws-butler-chg delete)) . 1535) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 1535) (#("v" 0 1 (fontified t ws-butler-chg delete)) . 1535) (#(":" 0 1 (fontified t ws-butler-chg delete)) . 1535) (#("\"" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 1535) (#("e" 0 1 (fontified t ws-butler-chg delete)) . 1535) (#("t" 0 1 (fontified t ws-butler-chg delete)) . 1535) (#("o" 0 1 (fontified t ws-butler-chg delete)) . 1535) (#("v" 0 1 (fontified t ws-butler-chg delete)) . 1535) (#("\"" 0 1 (fontified t ws-butler-chg delete face font-lock-string-face)) . 1535) (#("{" 0 1 (fontified t ws-butler-chg delete)) . 1535)) nil (26125 36655 359390 890000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t ws-butler-chg chg)) . -1517) (undo-tree-id310 . -1) 1518) nil (26125 36655 359366 446000) 0 nil])
([nil nil ((1517 . 1518)) nil (26125 37333 988288 42000) 0 nil])
([nil nil ((#("6" 0 1 (face font-lock-string-face fontified t)) . -457) (undo-tree-id53 . -1) (#("8" 0 1 (face font-lock-string-face fontified t)) . -458) (undo-tree-id54 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -459) (undo-tree-id55 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -460) (undo-tree-id56 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -461) (undo-tree-id57 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -462) (undo-tree-id58 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -463) (undo-tree-id59 . -1) (#("5" 0 1 (face font-lock-string-face fontified t)) . -464) (undo-tree-id60 . -1) (#(":" 0 1 (face font-lock-string-face fontified t)) . -465) (undo-tree-id61 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -466) (undo-tree-id62 . -1) (#("3" 0 1 (face font-lock-string-face fontified t)) . -467) (undo-tree-id63 . -1) (#("3" 0 1 (face font-lock-string-face fontified t)) . -468) (undo-tree-id64 . -1) (#("7" 0 1 (face font-lock-string-face fontified t)) . -469) (undo-tree-id65 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -470) (undo-tree-id66 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -471) (undo-tree-id67 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -472) (undo-tree-id68 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -473) (undo-tree-id69 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -474) (undo-tree-id70 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -475) (undo-tree-id71 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -476) (undo-tree-id72 . -1) (#(";" 0 1 (fontified t)) . -477) (undo-tree-id73 . -1) 478 (t 26125 36655 392738 59000)) nil (26125 37385 75308 943000) 0 nil] [nil nil ((#("." 0 1 (face font-lock-string-face fontified t)) . -455) (undo-tree-id13 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -456) (undo-tree-id14 . -1) (#("6" 0 1 (face font-lock-string-face fontified t)) . -457) (undo-tree-id15 . -1) (#("8" 0 1 (face font-lock-string-face fontified t)) . -458) (undo-tree-id16 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -459) (undo-tree-id17 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -460) (undo-tree-id18 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -461) (undo-tree-id19 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -462) (undo-tree-id20 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -463) (undo-tree-id21 . -1) (#("5" 0 1 (face font-lock-string-face fontified t)) . -464) (undo-tree-id22 . -1) (#(":" 0 1 (face font-lock-string-face fontified t)) . -465) (undo-tree-id23 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -466) (undo-tree-id24 . -1) (#("3" 0 1 (face font-lock-string-face fontified t)) . -467) (undo-tree-id25 . -1) (#("3" 0 1 (face font-lock-string-face fontified t)) . -468) (undo-tree-id26 . -1) (#("7" 0 1 (face font-lock-string-face fontified t)) . -469) (undo-tree-id27 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -470) (undo-tree-id28 . -1) (#("v" 0 1 (face font-lock-string-face fontified t)) . -471) (undo-tree-id29 . -1) (#("o" 0 1 (face font-lock-string-face fontified t)) . -472) (undo-tree-id30 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -473) (undo-tree-id31 . -1) (#("e" 0 1 (face font-lock-string-face fontified t)) . -474) (undo-tree-id32 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -475) (undo-tree-id33 . -1) 476 (t 26125 36655 392738 59000)) ((455 . 476)) (26125 37333 373803 617000) 0 nil] [nil nil ((1518 . 1520) (t 26125 36655 392738 59000)) ((#("es" 0 2 (fontified t ws-butler-chg chg)) . 1518) (undo-tree-id326 . -2) (undo-tree-id327 . -2)) (26125 37149 925512 91000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . -444) (undo-tree-id40 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -445) (undo-tree-id41 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -446) (undo-tree-id42 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -447) (undo-tree-id43 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -448) (undo-tree-id44 . -1) (#(":" 0 1 (face font-lock-string-face fontified t)) . -449) (undo-tree-id45 . -1) (#("/" 0 1 (face font-lock-string-face syntax-table (7 . 47) fontified t)) . -450) (undo-tree-id46 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -451) (undo-tree-id47 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -452) (undo-tree-id48 . -1) (#("9" 0 1 (face font-lock-string-face fontified t)) . -453) (undo-tree-id49 . -1) (#("2" 0 1 (face font-lock-string-face fontified t)) . -454) (undo-tree-id50 . -1) (#("." 0 1 (face font-lock-string-face fontified t)) . -455) (undo-tree-id51 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -456) (undo-tree-id52 . -1) 457) nil (26125 37385 75173 18000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -443) (undo-tree-id1 . -1) (#("'" 0 1 (face font-lock-string-face fontified t)) . -444) (undo-tree-id2 . -1) (#("h" 0 1 (face font-lock-string-face fontified t)) . -445) (undo-tree-id3 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -446) (undo-tree-id4 . -1) (#("t" 0 1 (face font-lock-string-face fontified t)) . -447) (undo-tree-id5 . -1) (#("p" 0 1 (face font-lock-string-face fontified t)) . -448) (undo-tree-id6 . -1) (#(":" 0 1 (face font-lock-string-face fontified t)) . -449) (undo-tree-id7 . -1) (#("/" 0 1 (face font-lock-string-face syntax-table (7 . 47) fontified t)) . -450) (undo-tree-id8 . -1) (#("/" 0 1 (face font-lock-string-face fontified t)) . -451) (undo-tree-id9 . -1) (#("1" 0 1 (face font-lock-string-face fontified t)) . -452) (undo-tree-id10 . -1) (#("9" 0 1 (face font-lock-string-face fontified t)) . -453) (undo-tree-id11 . -1) (#("2" 0 1 (face font-lock-string-face fontified t)) . -454) (undo-tree-id12 . -1) 455) ((443 . 455)) (26125 37332 975323 193000) 0 nil])
([nil nil ((1520 . 1559)) ((#("
                                      " 0 39 (fontified t ws-butler-chg chg)) . 1520) (undo-tree-id323 . -39) (undo-tree-id324 . -39) (undo-tree-id325 . -1)) (26125 37149 925082 334000) 0 nil])
([nil nil ((444 . 465)) nil (26125 37385 75113 370000) 0 nil])
([nil nil ((443 . 444)) ((#(";" 0 1 (ws-butler-chg chg fontified t)) . 443) (undo-tree-id34 . -1) (undo-tree-id35 . -1)) (26125 37332 714980 882000) 0 nil])
nil
([nil nil ((465 . 466)) nil (26125 37385 75107 222000) 0 nil])
([nil nil ((#(";" 0 1 (ws-butler-chg chg fontified t)) . -443) (undo-tree-id0 . -1) 444) ((nil ws-butler-chg delete 444 . 445) (443 . 444)) (26125 37332 714367 736000) 0 nil])
([nil nil ((466 . 468)) nil (26125 37385 75100 759000) 0 nil])
nil
([nil nil ((#("_" 0 1 (ws-butler-chg chg fontified t)) . -467) (undo-tree-id39 . -1) 468) nil (26125 37385 75093 463000) 0 nil])
([nil nil ((467 . 468)) nil (26125 37385 75082 18000) 0 nil])
([nil nil ((#(" " 0 1 (ws-butler-chg chg fontified t)) . -466) (undo-tree-id37 . -1) (#("+" 0 1 (ws-butler-chg chg fontified t)) . -467) (undo-tree-id38 . -1) 468) nil (26125 37385 75073 37000) 0 nil])
([nil nil ((466 . 480)) nil (26125 37385 75055 815000) 0 nil])
([nil nil ((480 . 494)) nil (26125 37385 75049 389000) 0 nil])
([nil nil ((#("_" 0 1 (ws-butler-chg chg fontified t)) . -493) (undo-tree-id36 . -1) 494) nil (26125 37385 75040 759000) 0 nil])
([nil nil ((493 . 495)) nil (26125 37385 75005 389000) 0 nil])
([nil nil ((469 . 475)) nil (26125 37385 74997 630000) 0 nil])
([nil nil ((501 . 509)) nil (26125 37385 74979 833000) 0 nil])
([nil nil ((1 . 2) (t 26125 37385 97575 348000)) nil (26126 45719 778756 872000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg chg)) . -1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 2) nil (26126 45719 778739 872000) 0 nil])
([nil nil ((#("import logo from './logo.svg';" 0 1 (fontified t face font-lock-keyword-face) 1 6 (fontified t face font-lock-keyword-face) 6 17 (fontified t) 17 29 (fontified t face font-lock-string-face) 29 30 (fontified t)) . -1) (undo-tree-id6 . -30) (undo-tree-id7 . -11) (undo-tree-id8 . -30) 31 (t 26126 45719 805129 855000)) nil (26126 45798 257486 718000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t ws-butler-chg delete)) . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 2) nil (26126 45798 257457 774000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1025) (t 26126 45798 280803 954000)) nil (26126 45835 487275 15000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1845)) nil (26126 45835 487267 960000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2139)) nil (26126 45835 487261 682000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2546)) nil (26126 45835 487255 293000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2717)) nil (26126 45835 487248 756000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2892)) nil (26126 45835 487241 552000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3074)) nil (26126 45855 926498 498000) 0 nil])
([nil nil ((425 . 435) (t 26126 45835 508648 370000)) nil (26126 46022 56548 876000) 0 nil] [nil nil ((1025 . 1026) (t 26126 45835 508648 370000)) ((#("w" 0 1 (fontified t ws-butler-chg chg)) . 1025) (undo-tree-id9 . -1)) (26126 45855 925519 372000) 0 nil])
([nil nil ((466 . 476)) nil (26126 46022 56529 524000) 0 nil])
nil
([nil nil ((412 . 420) (t 26126 46022 79860 814000)) nil (26126 48286 552159 345000) 0 nil])
([nil nil ((420 . 423)) nil (26126 48286 552152 104000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -413) (undo-tree-id66 . -1) (#("h" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -414) (undo-tree-id67 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -415) (undo-tree-id68 . -1) (#("t" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -416) (undo-tree-id69 . -1) (#("p" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -417) (undo-tree-id70 . -1) (#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -418) (undo-tree-id71 . -1) (#(":" 0 1 (fontified t ws-butler-chg chg face font-lock-string-face)) . -419) (undo-tree-id72 . -1) (#("/" 0 1 (fontified t ws-butler-chg chg syntax-table (7 . 47) face font-lock-string-face)) . -420) (undo-tree-id73 . -1) (#("/" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -421) (undo-tree-id74 . -1) (#("\"" 0 1 (ws-butler-chg chg fontified t face font-lock-string-face)) . -422) (undo-tree-id75 . -1) 423) nil (26126 48286 552138 85000) 0 nil])
([nil nil ((#("console.log(response);" 0 22 (fontified t)) . 1607) (undo-tree-id63 . -22) (undo-tree-id64 . -22) (undo-tree-id65 . -22)) nil (26126 48286 552083 234000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1598) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t)) . -1599) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t)) . -1600) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#(" " 0 1 (fontified t)) . -1601) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#(" " 0 1 (fontified t)) . -1602) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t)) . -1603) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#(" " 0 1 (fontified t)) . -1604) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(" " 0 1 (fontified t)) . -1605) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#(" " 0 1 (fontified t)) . -1606) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 1607) nil (26126 48286 552043 716000) 0 nil])
([nil current ((#("console.log('voting ', state.page, \": ...\")
                       " 0 12 (fontified t) 12 21 (fontified t face font-lock-string-face) 21 22 (fontified t) 22 35 (fontified t) 35 42 (fontified t face font-lock-string-face) 42 44 (fontified t) 44 61 (fontified t) 61 62 (fontified t) 62 67 (fontified t)) . 2006) (undo-tree-id76 . -67) (undo-tree-id77 . -7) (undo-tree-id78 . -7) (undo-tree-id79 . -67) (undo-tree-id80 . -67) (t 26126 48286 573404 874000)) nil (26126 48292 261449 156000) 0 nil])
nil
